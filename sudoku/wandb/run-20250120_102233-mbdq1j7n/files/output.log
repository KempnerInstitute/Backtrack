transformer.wte.weight: cpu
transformer.wpe.weight: cpu
transformer.h.0.ln_1.weight: cpu
transformer.h.0.ln_1.bias: cpu
transformer.h.0.attn.c_attn.weight: cpu
transformer.h.0.attn.c_attn.bias: cpu
transformer.h.0.attn.c_proj.weight: cpu
transformer.h.0.attn.c_proj.bias: cpu
transformer.h.0.ln_2.weight: cpu
transformer.h.0.ln_2.bias: cpu
transformer.h.0.mlp.c_fc.weight: cpu
transformer.h.0.mlp.c_fc.bias: cpu
transformer.h.0.mlp.c_proj.weight: cpu
transformer.h.0.mlp.c_proj.bias: cpu
transformer.h.1.ln_1.weight: cpu
transformer.h.1.ln_1.bias: cpu
transformer.h.1.attn.c_attn.weight: cpu
transformer.h.1.attn.c_attn.bias: cpu
transformer.h.1.attn.c_proj.weight: cpu
transformer.h.1.attn.c_proj.bias: cpu
transformer.h.1.ln_2.weight: cpu
transformer.h.1.ln_2.bias: cpu
transformer.h.1.mlp.c_fc.weight: cpu
transformer.h.1.mlp.c_fc.bias: cpu
transformer.h.1.mlp.c_proj.weight: cpu
transformer.h.1.mlp.c_proj.bias: cpu
transformer.h.2.ln_1.weight: cpu
transformer.h.2.ln_1.bias: cpu
transformer.h.2.attn.c_attn.weight: cpu
transformer.h.2.attn.c_attn.bias: cpu
transformer.h.2.attn.c_proj.weight: cpu
transformer.h.2.attn.c_proj.bias: cpu
transformer.h.2.ln_2.weight: cpu
transformer.h.2.ln_2.bias: cpu
transformer.h.2.mlp.c_fc.weight: cpu
transformer.h.2.mlp.c_fc.bias: cpu
transformer.h.2.mlp.c_proj.weight: cpu
transformer.h.2.mlp.c_proj.bias: cpu
transformer.h.3.ln_1.weight: cpu
transformer.h.3.ln_1.bias: cpu
transformer.h.3.attn.c_attn.weight: cpu
transformer.h.3.attn.c_attn.bias: cpu
transformer.h.3.attn.c_proj.weight: cpu
transformer.h.3.attn.c_proj.bias: cpu
transformer.h.3.ln_2.weight: cpu
transformer.h.3.ln_2.bias: cpu
transformer.h.3.mlp.c_fc.weight: cpu
transformer.h.3.mlp.c_fc.bias: cpu
transformer.h.3.mlp.c_proj.weight: cpu
transformer.h.3.mlp.c_proj.bias: cpu
transformer.h.4.ln_1.weight: cpu
transformer.h.4.ln_1.bias: cpu
transformer.h.4.attn.c_attn.weight: cpu
transformer.h.4.attn.c_attn.bias: cpu
transformer.h.4.attn.c_proj.weight: cpu
transformer.h.4.attn.c_proj.bias: cpu
transformer.h.4.ln_2.weight: cpu
transformer.h.4.ln_2.bias: cpu
transformer.h.4.mlp.c_fc.weight: cpu
transformer.h.4.mlp.c_fc.bias: cpu
transformer.h.4.mlp.c_proj.weight: cpu
transformer.h.4.mlp.c_proj.bias: cpu
transformer.h.5.ln_1.weight: cpu
transformer.h.5.ln_1.bias: cpu
transformer.h.5.attn.c_attn.weight: cpu
transformer.h.5.attn.c_attn.bias: cpu
transformer.h.5.attn.c_proj.weight: cpu
transformer.h.5.attn.c_proj.bias: cpu
transformer.h.5.ln_2.weight: cpu
transformer.h.5.ln_2.bias: cpu
transformer.h.5.mlp.c_fc.weight: cpu
transformer.h.5.mlp.c_fc.bias: cpu
transformer.h.5.mlp.c_proj.weight: cpu
transformer.h.5.mlp.c_proj.bias: cpu
transformer.ln_f.weight: cpu
transformer.ln_f.bias: cpu
Model size: 21,068,288
tokenized dataset DatasetDict({
    train: Dataset({
        features: ['input_ids'],
        num_rows: 39165
    })
    val: Dataset({
        features: ['input_ids'],
        num_rows: 278
    })
})
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/training_args.py:1575: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of ðŸ¤— Transformers. Use `eval_strategy` instead
  warnings.warn(
/n/home05/sqin/self-correct/sudoku/train.py:185: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1881: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  overflow_gpu = get_accelerator().ByteTensor([overflow])
{'loss': 4.9158, 'grad_norm': 0.0, 'learning_rate': 0.0, 'epoch': 0.008169934640522876}
{'loss': 4.9143, 'grad_norm': 26.136392947395382, 'learning_rate': 6.122448979591837e-07, 'epoch': 0.016339869281045753}
Traceback (most recent call last):
  File "/n/home05/sqin/self-correct/sudoku/train.py", line 212, in <module>
    main(args)
  File "/n/home05/sqin/self-correct/sudoku/train.py", line 200, in main
    trainer.train()
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 2171, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 2480, in _inner_training_loop
    batch_samples, num_items_in_batch = self.get_batch_samples(epoch_iterator, num_batches)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 5156, in get_batch_samples
    batch_samples += [next(epoch_iterator)]
                      ^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/accelerate/data_loader.py", line 561, in __iter__
    next_batch = next(dataloader_iter)
                 ^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 45, in __call__
    return self.torch_call(features)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 810, in torch_call
    batch = pad_without_fast_tokenizer_warning(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 66, in pad_without_fast_tokenizer_warning
    padded = tokenizer.pad(*pad_args, **pad_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 3388, in pad
    return BatchEncoding(batch_outputs, tensor_type=return_tensors)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 241, in __init__
    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 777, in convert_to_tensors
    tensor = as_tensor(value)
             ^^^^^^^^^^^^^^^^
  File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 739, in as_tensor
    return torch.tensor(value)
           ^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
[rank0]: Traceback (most recent call last):
[rank0]:   File "/n/home05/sqin/self-correct/sudoku/train.py", line 212, in <module>
[rank0]:     main(args)
[rank0]:   File "/n/home05/sqin/self-correct/sudoku/train.py", line 200, in main
[rank0]:     trainer.train()
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 2171, in train
[rank0]:     return inner_training_loop(
[rank0]:            ^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 2480, in _inner_training_loop
[rank0]:     batch_samples, num_items_in_batch = self.get_batch_samples(epoch_iterator, num_batches)
[rank0]:                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/trainer.py", line 5156, in get_batch_samples
[rank0]:     batch_samples += [next(epoch_iterator)]
[rank0]:                       ^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/accelerate/data_loader.py", line 561, in __iter__
[rank0]:     next_batch = next(dataloader_iter)
[rank0]:                  ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
[rank0]:     data = self._next_data()
[rank0]:            ^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
[rank0]:     data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
[rank0]:     return self.collate_fn(data)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 45, in __call__
[rank0]:     return self.torch_call(features)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 810, in torch_call
[rank0]:     batch = pad_without_fast_tokenizer_warning(
[rank0]:             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/data/data_collator.py", line 66, in pad_without_fast_tokenizer_warning
[rank0]:     padded = tokenizer.pad(*pad_args, **pad_kwargs)
[rank0]:              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 3388, in pad
[rank0]:     return BatchEncoding(batch_outputs, tensor_type=return_tensors)
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 241, in __init__
[rank0]:     self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 777, in convert_to_tensors
[rank0]:     tensor = as_tensor(value)
[rank0]:              ^^^^^^^^^^^^^^^^
[rank0]:   File "/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/tokenization_utils_base.py", line 739, in as_tensor
[rank0]:     return torch.tensor(value)
[rank0]:            ^^^^^^^^^^^^^^^^^^^
[rank0]: KeyboardInterrupt