Tokenizer vocab size: 109
Qwen2ForCausalLM(
  (model): Qwen2Model(
    (embed_tokens): Embedding(109, 512)
    (layers): ModuleList(
      (0-9): 10 x Qwen2DecoderLayer(
        (self_attn): Qwen2Attention(
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (k_proj): Linear(in_features=512, out_features=128, bias=True)
          (v_proj): Linear(in_features=512, out_features=128, bias=True)
          (o_proj): Linear(in_features=512, out_features=512, bias=False)
        )
        (mlp): Qwen2MLP(
          (gate_proj): Linear(in_features=512, out_features=2048, bias=False)
          (up_proj): Linear(in_features=512, out_features=2048, bias=False)
          (down_proj): Linear(in_features=2048, out_features=512, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): Qwen2RMSNorm((512,), eps=1e-06)
        (post_attention_layernorm): Qwen2RMSNorm((512,), eps=1e-06)
      )
    )
    (norm): Qwen2RMSNorm((512,), eps=1e-06)
    (rotary_emb): Qwen2RotaryEmbedding()
  )
  (lm_head): Linear(in_features=512, out_features=109, bias=False)
)
Model size: 38,140,928
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/datasets/table.py:1421: FutureWarning: promote has been superseded by promote_options='default'.
  table = cls._concat_blocks(blocks, axis=0)
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/transformers/training_args.py:1575: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of ðŸ¤— Transformers. Use `eval_strategy` instead
  warnings.warn(
Tokenized dataset example
tokenized dataset DatasetDict({
    train: Dataset({
        features: ['input_ids'],
        num_rows: 3477496
    })
    val: Dataset({
        features: ['input_ids'],
        num_rows: 163
    })
})
/n/home05/sqin/self-correct/sudoku/train.py:269: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/deepspeed/runtime/zero/stage_1_and_2.py:1586: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])
{'loss': 2.4369, 'grad_norm': 4.074506358147324, 'learning_rate': 1.25e-05, 'epoch': 0.003450750883392226}
{'loss': 1.2763, 'grad_norm': 4.680839205003405, 'learning_rate': 2.5e-05, 'epoch': 0.006901501766784452}
{'eval_valid_loss': 1.069724202156067, 'eval_valid_runtime': 0.3966, 'eval_valid_samples_per_second': 411.008, 'eval_valid_steps_per_second': 17.651, 'epoch': 0.006901501766784452}
{'loss': 1.0464, 'grad_norm': 1.5744966764192303, 'learning_rate': 3.7500000000000003e-05, 'epoch': 0.01035225265017668}
{'loss': 0.9791, 'grad_norm': 1.0315851146600563, 'learning_rate': 5e-05, 'epoch': 0.013803003533568904}
{'eval_valid_loss': 0.9268693923950195, 'eval_valid_runtime': 0.3916, 'eval_valid_samples_per_second': 416.202, 'eval_valid_steps_per_second': 17.874, 'epoch': 0.013803003533568904}
{'loss': 0.9327, 'grad_norm': 1.0193896489904155, 'learning_rate': 6.25e-05, 'epoch': 0.017253754416961132}
{'loss': 0.7553, 'grad_norm': 1.1265889999712582, 'learning_rate': 7.500000000000001e-05, 'epoch': 0.02070450530035336}
{'eval_valid_loss': 0.6289231777191162, 'eval_valid_runtime': 0.3919, 'eval_valid_samples_per_second': 415.916, 'eval_valid_steps_per_second': 17.861, 'epoch': 0.02070450530035336}
{'loss': 0.5721, 'grad_norm': 1.4659460428080886, 'learning_rate': 8.75e-05, 'epoch': 0.024155256183745585}
{'loss': 0.4696, 'grad_norm': 0.7872123226458325, 'learning_rate': 0.0001, 'epoch': 0.027606007067137808}
{'eval_valid_loss': 0.4128361940383911, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.251, 'eval_valid_steps_per_second': 17.919, 'epoch': 0.027606007067137808}
{'loss': 0.4263, 'grad_norm': 0.7081282360331972, 'learning_rate': 9.999998689356866e-05, 'epoch': 0.031056757950530034}
{'loss': 0.3961, 'grad_norm': 0.6362037554275971, 'learning_rate': 9.999994757428148e-05, 'epoch': 0.034507508833922264}
{'eval_valid_loss': 0.3572593033313751, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.361, 'eval_valid_steps_per_second': 17.923, 'epoch': 0.034507508833922264}
{'loss': 0.3806, 'grad_norm': 0.6398168315795498, 'learning_rate': 9.999988204215911e-05, 'epoch': 0.03795825971731449}
{'loss': 0.3666, 'grad_norm': 0.4249927176552186, 'learning_rate': 9.999979029723587e-05, 'epoch': 0.04140901060070672}
{'eval_valid_loss': 0.33346787095069885, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.072, 'eval_valid_steps_per_second': 17.954, 'epoch': 0.04140901060070672}
{'loss': 0.3595, 'grad_norm': 0.43331977137072997, 'learning_rate': 9.999967233955987e-05, 'epoch': 0.04485976148409894}
{'loss': 0.3465, 'grad_norm': 0.5252183141712878, 'learning_rate': 9.999952816919295e-05, 'epoch': 0.04831051236749117}
{'eval_valid_loss': 0.3184984624385834, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.859, 'eval_valid_steps_per_second': 17.988, 'epoch': 0.04831051236749117}
{'loss': 0.3415, 'grad_norm': 0.38959377336798423, 'learning_rate': 9.999935778621072e-05, 'epoch': 0.05176126325088339}
{'loss': 0.337, 'grad_norm': 0.39405243890578295, 'learning_rate': 9.999916119070246e-05, 'epoch': 0.055212014134275615}
{'eval_valid_loss': 0.3090876042842865, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.645, 'eval_valid_steps_per_second': 17.893, 'epoch': 0.055212014134275615}
{'loss': 0.3308, 'grad_norm': 0.35213171575709956, 'learning_rate': 9.999893838277125e-05, 'epoch': 0.058662765017667845}
{'loss': 0.3301, 'grad_norm': 0.35475417760565664, 'learning_rate': 9.999868936253394e-05, 'epoch': 0.06211351590106007}
{'eval_valid_loss': 0.30245354771614075, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.444, 'eval_valid_steps_per_second': 17.97, 'epoch': 0.06211351590106007}
{'loss': 0.3248, 'grad_norm': 0.29593357854793323, 'learning_rate': 9.999841413012101e-05, 'epoch': 0.06556426678445229}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.3216, 'grad_norm': 0.2860697345770583, 'learning_rate': 9.99981126856768e-05, 'epoch': 0.06901501766784453}
{'eval_valid_loss': 0.29781782627105713, 'eval_valid_runtime': 0.3917, 'eval_valid_samples_per_second': 416.139, 'eval_valid_steps_per_second': 17.871, 'epoch': 0.06901501766784453}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.318, 'grad_norm': 0.23845027541993788, 'learning_rate': 9.999778502935935e-05, 'epoch': 0.07246576855123675}
{'loss': 0.3159, 'grad_norm': 0.31177487734477605, 'learning_rate': 9.99974311613404e-05, 'epoch': 0.07591651943462897}
{'eval_valid_loss': 0.29099202156066895, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.167, 'eval_valid_steps_per_second': 17.915, 'epoch': 0.07591651943462897}
{'loss': 0.3141, 'grad_norm': 0.32996033508030825, 'learning_rate': 9.999705108180548e-05, 'epoch': 0.0793672703180212}
{'loss': 0.3116, 'grad_norm': 0.2437565541016675, 'learning_rate': 9.999664479095388e-05, 'epoch': 0.08281802120141343}
{'eval_valid_loss': 0.2876797914505005, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.645, 'eval_valid_steps_per_second': 17.85, 'epoch': 0.08281802120141343}
{'loss': 0.3099, 'grad_norm': 0.23239375834561682, 'learning_rate': 9.999621228899856e-05, 'epoch': 0.08626877208480566}
{'loss': 0.3081, 'grad_norm': 0.22611819272410902, 'learning_rate': 9.999575357616628e-05, 'epoch': 0.08971952296819788}
{'eval_valid_loss': 0.28340256214141846, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.631, 'eval_valid_steps_per_second': 17.892, 'epoch': 0.08971952296819788}
{'loss': 0.3083, 'grad_norm': 0.23670902300079358, 'learning_rate': 9.999526865269753e-05, 'epoch': 0.0931702738515901}
{'loss': 0.3053, 'grad_norm': 0.26197234448432716, 'learning_rate': 9.999475751884654e-05, 'epoch': 0.09662102473498234}
{'eval_valid_loss': 0.28088968992233276, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.577, 'eval_valid_steps_per_second': 17.847, 'epoch': 0.09662102473498234}
{'loss': 0.3046, 'grad_norm': 0.27621514014019544, 'learning_rate': 9.999422017488125e-05, 'epoch': 0.10007177561837456}
{'loss': 0.302, 'grad_norm': 0.2249085916612234, 'learning_rate': 9.999365662108338e-05, 'epoch': 0.10352252650176678}
{'eval_valid_loss': 0.27712395787239075, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.64, 'eval_valid_steps_per_second': 17.85, 'epoch': 0.10352252650176678}
{'loss': 0.3011, 'grad_norm': 0.24168163305424806, 'learning_rate': 9.999306685774839e-05, 'epoch': 0.10697327738515901}
{'loss': 0.2999, 'grad_norm': 0.18450954172949566, 'learning_rate': 9.999245088518543e-05, 'epoch': 0.11042402826855123}
{'eval_valid_loss': 0.273727148771286, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 416.969, 'eval_valid_steps_per_second': 17.907, 'epoch': 0.11042402826855123}
{'loss': 0.299, 'grad_norm': 0.19352584464441897, 'learning_rate': 9.999180870371748e-05, 'epoch': 0.11387477915194347}
{'loss': 0.2985, 'grad_norm': 0.18338144370615836, 'learning_rate': 9.999114031368115e-05, 'epoch': 0.11732553003533569}
{'eval_valid_loss': 0.2731096148490906, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 416.077, 'eval_valid_steps_per_second': 17.868, 'epoch': 0.11732553003533569}
{'loss': 0.2973, 'grad_norm': 0.1853051368820867, 'learning_rate': 9.999044571542691e-05, 'epoch': 0.12077628091872791}
{'loss': 0.2934, 'grad_norm': 0.21666332259783058, 'learning_rate': 9.998972490931886e-05, 'epoch': 0.12422703180212014}
{'eval_valid_loss': 0.27035433053970337, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.731, 'eval_valid_steps_per_second': 17.939, 'epoch': 0.12422703180212014}
{'loss': 0.2916, 'grad_norm': 0.1845614038938488, 'learning_rate': 9.998897789573492e-05, 'epoch': 0.12767778268551236}
{'loss': 0.2921, 'grad_norm': 0.19621902577917041, 'learning_rate': 9.998820467506668e-05, 'epoch': 0.13112853356890458}
{'eval_valid_loss': 0.2680990397930145, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.612, 'eval_valid_steps_per_second': 17.848, 'epoch': 0.13112853356890458}
{'loss': 0.2923, 'grad_norm': 0.2687802524345749, 'learning_rate': 9.998740524771954e-05, 'epoch': 0.13457928445229683}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.2908, 'grad_norm': 0.1731053303314897, 'learning_rate': 9.998657961411261e-05, 'epoch': 0.13803003533568906}
{'eval_valid_loss': 0.2659549415111542, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.108, 'eval_valid_steps_per_second': 17.913, 'epoch': 0.13803003533568906}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.2885, 'grad_norm': 0.18734634662113298, 'learning_rate': 9.998572777467871e-05, 'epoch': 0.14148078621908128}
{'loss': 0.2899, 'grad_norm': 0.17690660247391365, 'learning_rate': 9.998484972986443e-05, 'epoch': 0.1449315371024735}
{'eval_valid_loss': 0.2651130259037018, 'eval_valid_runtime': 0.3932, 'eval_valid_samples_per_second': 414.592, 'eval_valid_steps_per_second': 17.805, 'epoch': 0.1449315371024735}
{'loss': 0.287, 'grad_norm': 0.1992892359833661, 'learning_rate': 9.99839454801301e-05, 'epoch': 0.14838228798586572}
{'loss': 0.2852, 'grad_norm': 0.19299465236325206, 'learning_rate': 9.998301502594976e-05, 'epoch': 0.15183303886925795}
{'eval_valid_loss': 0.26346156001091003, 'eval_valid_runtime': 0.3943, 'eval_valid_samples_per_second': 413.352, 'eval_valid_steps_per_second': 17.751, 'epoch': 0.15183303886925795}
{'loss': 0.2856, 'grad_norm': 0.16728560063804987, 'learning_rate': 9.998205836781123e-05, 'epoch': 0.15528378975265017}
{'loss': 0.2827, 'grad_norm': 0.21646348610039484, 'learning_rate': 9.998107550621604e-05, 'epoch': 0.1587345406360424}
{'eval_valid_loss': 0.26096490025520325, 'eval_valid_runtime': 0.3932, 'eval_valid_samples_per_second': 414.589, 'eval_valid_steps_per_second': 17.804, 'epoch': 0.1587345406360424}
{'loss': 0.2839, 'grad_norm': 0.17670903445425878, 'learning_rate': 9.998006644167946e-05, 'epoch': 0.16218529151943462}
{'loss': 0.2827, 'grad_norm': 0.17453124712839146, 'learning_rate': 9.997903117473048e-05, 'epoch': 0.16563604240282687}
{'eval_valid_loss': 0.25933894515037537, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.445, 'eval_valid_steps_per_second': 17.884, 'epoch': 0.16563604240282687}
{'loss': 0.2812, 'grad_norm': 0.1992460481892196, 'learning_rate': 9.997796970591186e-05, 'epoch': 0.1690867932862191}
{'loss': 0.2803, 'grad_norm': 0.1798753134661792, 'learning_rate': 9.997688203578011e-05, 'epoch': 0.1725375441696113}
{'eval_valid_loss': 0.2582450807094574, 'eval_valid_runtime': 0.3926, 'eval_valid_samples_per_second': 415.208, 'eval_valid_steps_per_second': 17.831, 'epoch': 0.1725375441696113}
{'loss': 0.2802, 'grad_norm': 0.16976056045651478, 'learning_rate': 9.997576816490541e-05, 'epoch': 0.17598829505300354}
{'loss': 0.2786, 'grad_norm': 0.18662090492934527, 'learning_rate': 9.997462809387174e-05, 'epoch': 0.17943904593639576}
{'eval_valid_loss': 0.2568788230419159, 'eval_valid_runtime': 0.4011, 'eval_valid_samples_per_second': 406.402, 'eval_valid_steps_per_second': 17.453, 'epoch': 0.17943904593639576}
{'loss': 0.2786, 'grad_norm': 0.1793155379944191, 'learning_rate': 9.997346182327678e-05, 'epoch': 0.18288979681978798}
{'loss': 0.2782, 'grad_norm': 0.18877785646235176, 'learning_rate': 9.997226935373196e-05, 'epoch': 0.1863405477031802}
{'eval_valid_loss': 0.25579026341438293, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.191, 'eval_valid_steps_per_second': 17.959, 'epoch': 0.1863405477031802}
{'loss': 0.277, 'grad_norm': 0.18533531852385324, 'learning_rate': 9.997105068586243e-05, 'epoch': 0.18979129858657243}
{'loss': 0.2782, 'grad_norm': 0.18678947303640944, 'learning_rate': 9.996980582030709e-05, 'epoch': 0.19324204946996468}
{'eval_valid_loss': 0.2543238401412964, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.54, 'eval_valid_steps_per_second': 17.888, 'epoch': 0.19324204946996468}
{'loss': 0.2761, 'grad_norm': 0.15733175595509288, 'learning_rate': 9.996853475771858e-05, 'epoch': 0.1966928003533569}
{'loss': 0.2739, 'grad_norm': 0.16593888767227044, 'learning_rate': 9.996723749876325e-05, 'epoch': 0.20014355123674912}
{'eval_valid_loss': 0.2528574764728546, 'eval_valid_runtime': 0.3919, 'eval_valid_samples_per_second': 415.928, 'eval_valid_steps_per_second': 17.862, 'epoch': 0.20014355123674912}
{'loss': 0.274, 'grad_norm': 0.2550214980717089, 'learning_rate': 9.996591404412122e-05, 'epoch': 0.20359430212014135}
{'loss': 0.273, 'grad_norm': 0.19316916004464854, 'learning_rate': 9.996456439448627e-05, 'epoch': 0.20704505300353357}
{'eval_valid_loss': 0.2515900433063507, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.866, 'eval_valid_steps_per_second': 17.902, 'epoch': 0.20704505300353357}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.2723, 'grad_norm': 0.13986157689394843, 'learning_rate': 9.996318855056603e-05, 'epoch': 0.2104958038869258}
{'loss': 0.273, 'grad_norm': 0.158780409104004, 'learning_rate': 9.996178651308174e-05, 'epoch': 0.21394655477031801}
{'eval_valid_loss': 0.24998027086257935, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.253, 'eval_valid_steps_per_second': 17.919, 'epoch': 0.21394655477031801}
{'loss': 0.2705, 'grad_norm': 0.19006666165183944, 'learning_rate': 9.996035828276847e-05, 'epoch': 0.21739730565371024}
{'loss': 0.2713, 'grad_norm': 0.15962609833377323, 'learning_rate': 9.995890386037497e-05, 'epoch': 0.22084805653710246}
{'eval_valid_loss': 0.2482376992702484, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.421, 'eval_valid_steps_per_second': 17.926, 'epoch': 0.22084805653710246}
{'loss': 0.2718, 'grad_norm': 0.1980513621149709, 'learning_rate': 9.99574232466637e-05, 'epoch': 0.2242988074204947}
{'loss': 0.2699, 'grad_norm': 0.17597274046197534, 'learning_rate': 9.995591644241093e-05, 'epoch': 0.22774955830388693}
{'eval_valid_loss': 0.24701054394245148, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.806, 'eval_valid_steps_per_second': 17.943, 'epoch': 0.22774955830388693}
{'loss': 0.2716, 'grad_norm': 0.1899241094088362, 'learning_rate': 9.995438344840657e-05, 'epoch': 0.23120030918727916}
{'loss': 0.2692, 'grad_norm': 0.16859586154684736, 'learning_rate': 9.995282426545433e-05, 'epoch': 0.23465106007067138}
{'eval_valid_loss': 0.2460918128490448, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.863, 'eval_valid_steps_per_second': 17.902, 'epoch': 0.23465106007067138}
{'loss': 0.2681, 'grad_norm': 0.17376019453611774, 'learning_rate': 9.995123889437163e-05, 'epoch': 0.2381018109540636}
{'loss': 0.2681, 'grad_norm': 0.2392436481620863, 'learning_rate': 9.994962733598958e-05, 'epoch': 0.24155256183745583}
{'eval_valid_loss': 0.24567006528377533, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.15, 'eval_valid_steps_per_second': 18.0, 'epoch': 0.24155256183745583}
{'loss': 0.2654, 'grad_norm': 0.205534213540006, 'learning_rate': 9.994798959115308e-05, 'epoch': 0.24500331272084805}
{'loss': 0.2635, 'grad_norm': 0.18410595287756806, 'learning_rate': 9.99463256607207e-05, 'epoch': 0.24845406360424027}
{'eval_valid_loss': 0.2418455332517624, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.439, 'eval_valid_steps_per_second': 17.97, 'epoch': 0.24845406360424027}
{'loss': 0.2631, 'grad_norm': 0.2220990324881948, 'learning_rate': 9.994463554556481e-05, 'epoch': 0.2519048144876325}
{'loss': 0.2634, 'grad_norm': 0.18726140961587526, 'learning_rate': 9.994291924657144e-05, 'epoch': 0.2553555653710247}
{'eval_valid_loss': 0.2413867861032486, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.177, 'eval_valid_steps_per_second': 17.959, 'epoch': 0.2553555653710247}
{'loss': 0.2607, 'grad_norm': 0.22301419583531112, 'learning_rate': 9.994117676464037e-05, 'epoch': 0.25880631625441697}
{'loss': 0.2597, 'grad_norm': 0.24333223109763127, 'learning_rate': 9.99394081006851e-05, 'epoch': 0.26225706713780916}
{'eval_valid_loss': 0.23879766464233398, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.16, 'eval_valid_steps_per_second': 17.915, 'epoch': 0.26225706713780916}
{'loss': 0.2577, 'grad_norm': 0.18550881327557123, 'learning_rate': 9.99376132556329e-05, 'epoch': 0.2657078180212014}
{'loss': 0.2561, 'grad_norm': 0.17483664700727022, 'learning_rate': 9.993579223042468e-05, 'epoch': 0.26915856890459366}
{'eval_valid_loss': 0.23564700782299042, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.333, 'eval_valid_steps_per_second': 17.965, 'epoch': 0.26915856890459366}
{'loss': 0.2558, 'grad_norm': 0.19518830489522407, 'learning_rate': 9.993394502601519e-05, 'epoch': 0.27260931978798586}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.2544, 'grad_norm': 0.25503442041049734, 'learning_rate': 9.993207164337277e-05, 'epoch': 0.2760600706713781}
{'eval_valid_loss': 0.23388053476810455, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.918, 'eval_valid_steps_per_second': 17.947, 'epoch': 0.2760600706713781}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.2537, 'grad_norm': 0.18920546920648984, 'learning_rate': 9.993017208347961e-05, 'epoch': 0.2795108215547703}
{'loss': 0.2522, 'grad_norm': 0.17170948402460648, 'learning_rate': 9.992824634733153e-05, 'epoch': 0.28296157243816256}
{'eval_valid_loss': 0.23229725658893585, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.676, 'eval_valid_steps_per_second': 17.937, 'epoch': 0.28296157243816256}
{'loss': 0.2505, 'grad_norm': 0.2060248224199778, 'learning_rate': 9.992629443593815e-05, 'epoch': 0.28641232332155475}
{'loss': 0.2491, 'grad_norm': 0.1866698167381769, 'learning_rate': 9.992431635032273e-05, 'epoch': 0.289863074204947}
{'eval_valid_loss': 0.2294132262468338, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.756, 'eval_valid_steps_per_second': 17.983, 'epoch': 0.289863074204947}
{'loss': 0.2472, 'grad_norm': 0.19603490371495783, 'learning_rate': 9.992231209152233e-05, 'epoch': 0.2933138250883392}
{'loss': 0.2478, 'grad_norm': 0.20731938982122056, 'learning_rate': 9.992028166058768e-05, 'epoch': 0.29676457597173145}
{'eval_valid_loss': 0.22636623680591583, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.409, 'eval_valid_steps_per_second': 17.883, 'epoch': 0.29676457597173145}
{'loss': 0.2437, 'grad_norm': 0.1817066463357175, 'learning_rate': 9.991822505858325e-05, 'epoch': 0.3002153268551237}
{'loss': 0.2444, 'grad_norm': 0.2030815444790456, 'learning_rate': 9.991614228658723e-05, 'epoch': 0.3036660777385159}
{'eval_valid_loss': 0.22352276742458344, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.347, 'eval_valid_steps_per_second': 17.923, 'epoch': 0.3036660777385159}
{'loss': 0.2421, 'grad_norm': 0.22524818128233765, 'learning_rate': 9.991403334569154e-05, 'epoch': 0.30711682862190814}
{'loss': 0.2442, 'grad_norm': 0.17145217021616335, 'learning_rate': 9.991189823700179e-05, 'epoch': 0.31056757950530034}
{'eval_valid_loss': 0.2229497730731964, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.152, 'eval_valid_steps_per_second': 17.915, 'epoch': 0.31056757950530034}
{'loss': 0.2427, 'grad_norm': 0.1640669639014181, 'learning_rate': 9.990973696163733e-05, 'epoch': 0.3140183303886926}
{'loss': 0.2412, 'grad_norm': 0.18417800160840658, 'learning_rate': 9.990754952073122e-05, 'epoch': 0.3174690812720848}
{'eval_valid_loss': 0.22031182050704956, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.18, 'eval_valid_steps_per_second': 18.002, 'epoch': 0.3174690812720848}
{'loss': 0.2406, 'grad_norm': 0.21476022806421113, 'learning_rate': 9.990533591543028e-05, 'epoch': 0.32091983215547704}
{'loss': 0.239, 'grad_norm': 0.20871996230407275, 'learning_rate': 9.990309614689495e-05, 'epoch': 0.32437058303886923}
{'eval_valid_loss': 0.2200218141078949, 'eval_valid_runtime': 0.3919, 'eval_valid_samples_per_second': 415.881, 'eval_valid_steps_per_second': 17.86, 'epoch': 0.32437058303886923}
{'loss': 0.2382, 'grad_norm': 0.1853514713720755, 'learning_rate': 9.990083021629948e-05, 'epoch': 0.3278213339222615}
{'loss': 0.2382, 'grad_norm': 0.18815345457156346, 'learning_rate': 9.98985381248318e-05, 'epoch': 0.33127208480565373}
{'eval_valid_loss': 0.21898014843463898, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 416.029, 'eval_valid_steps_per_second': 17.866, 'epoch': 0.33127208480565373}
{'loss': 0.2376, 'grad_norm': 0.15460817858439518, 'learning_rate': 9.989621987369355e-05, 'epoch': 0.33472283568904593}
{'loss': 0.2359, 'grad_norm': 0.16448070655217215, 'learning_rate': 9.989387546410007e-05, 'epoch': 0.3381735865724382}
{'eval_valid_loss': 0.21784566342830658, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.819, 'eval_valid_steps_per_second': 17.943, 'epoch': 0.3381735865724382}
{'loss': 0.2362, 'grad_norm': 0.18032252688296005, 'learning_rate': 9.989150489728047e-05, 'epoch': 0.3416243374558304}
{'loss': 0.2328, 'grad_norm': 0.16015396588102512, 'learning_rate': 9.988910817447752e-05, 'epoch': 0.3450750883392226}
{'eval_valid_loss': 0.21321487426757812, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.466, 'eval_valid_steps_per_second': 18.014, 'epoch': 0.3450750883392226}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.2287, 'grad_norm': 0.2590511298515511, 'learning_rate': 9.988668529694771e-05, 'epoch': 0.3485258392226148}
{'loss': 0.2279, 'grad_norm': 0.18819998910977004, 'learning_rate': 9.988423626596126e-05, 'epoch': 0.35197659010600707}
{'eval_valid_loss': 0.20789070427417755, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.72, 'eval_valid_steps_per_second': 17.939, 'epoch': 0.35197659010600707}
{'loss': 0.2249, 'grad_norm': 0.1562448961990858, 'learning_rate': 9.988176108280209e-05, 'epoch': 0.3554273409893993}
{'loss': 0.224, 'grad_norm': 0.19227981902270924, 'learning_rate': 9.987925974876783e-05, 'epoch': 0.3588780918727915}
{'eval_valid_loss': 0.20518027245998383, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.209, 'eval_valid_steps_per_second': 17.96, 'epoch': 0.3588780918727915}
{'loss': 0.2244, 'grad_norm': 0.1595381124420988, 'learning_rate': 9.987673226516985e-05, 'epoch': 0.36232884275618377}
{'loss': 0.2211, 'grad_norm': 0.1731973849077916, 'learning_rate': 9.987417863333317e-05, 'epoch': 0.36577959363957596}
{'eval_valid_loss': 0.20234623551368713, 'eval_valid_runtime': 0.4002, 'eval_valid_samples_per_second': 407.335, 'eval_valid_steps_per_second': 17.493, 'epoch': 0.36577959363957596}
{'loss': 0.2201, 'grad_norm': 0.1718506660358271, 'learning_rate': 9.987159885459656e-05, 'epoch': 0.3692303445229682}
{'loss': 0.2196, 'grad_norm': 0.20464482438556958, 'learning_rate': 9.986899293031247e-05, 'epoch': 0.3726810954063604}
{'eval_valid_loss': 0.2012384831905365, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.457, 'eval_valid_steps_per_second': 17.971, 'epoch': 0.3726810954063604}
{'loss': 0.2192, 'grad_norm': 0.18774159789611275, 'learning_rate': 9.986636086184711e-05, 'epoch': 0.37613184628975266}
{'loss': 0.2202, 'grad_norm': 0.1970088975695774, 'learning_rate': 9.986370265058034e-05, 'epoch': 0.37958259717314485}
{'eval_valid_loss': 0.1996852159500122, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.747, 'eval_valid_steps_per_second': 17.94, 'epoch': 0.37958259717314485}
{'loss': 0.2195, 'grad_norm': 0.17927103607643222, 'learning_rate': 9.986101829790575e-05, 'epoch': 0.3830333480565371}
{'loss': 0.2169, 'grad_norm': 0.23288844496471012, 'learning_rate': 9.985830780523062e-05, 'epoch': 0.38648409893992935}
{'eval_valid_loss': 0.19895684719085693, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.099, 'eval_valid_steps_per_second': 17.955, 'epoch': 0.38648409893992935}
{'loss': 0.2172, 'grad_norm': 0.19425586061972, 'learning_rate': 9.985557117397597e-05, 'epoch': 0.38993484982332155}
{'loss': 0.2137, 'grad_norm': 0.19537071552524107, 'learning_rate': 9.985280840557647e-05, 'epoch': 0.3933856007067138}
{'eval_valid_loss': 0.19586053490638733, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.483, 'eval_valid_steps_per_second': 17.886, 'epoch': 0.3933856007067138}
{'loss': 0.2145, 'grad_norm': 0.34895388093433993, 'learning_rate': 9.985001950148054e-05, 'epoch': 0.396836351590106}
{'loss': 0.2156, 'grad_norm': 0.2167295214914534, 'learning_rate': 9.984720446315028e-05, 'epoch': 0.40028710247349825}
{'eval_valid_loss': 0.19524337351322174, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.145, 'eval_valid_steps_per_second': 17.914, 'epoch': 0.40028710247349825}
{'loss': 0.2137, 'grad_norm': 0.2021610266095827, 'learning_rate': 9.98443632920615e-05, 'epoch': 0.40373785335689044}
{'loss': 0.2129, 'grad_norm': 0.19419142637192657, 'learning_rate': 9.984149598970369e-05, 'epoch': 0.4071886042402827}
{'eval_valid_loss': 0.19332987070083618, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.797, 'eval_valid_steps_per_second': 17.942, 'epoch': 0.4071886042402827}
{'loss': 0.2114, 'grad_norm': 0.2248260419975315, 'learning_rate': 9.983860255758006e-05, 'epoch': 0.4106393551236749}
{'loss': 0.2121, 'grad_norm': 0.18278495339320894, 'learning_rate': 9.983568299720753e-05, 'epoch': 0.41409010600706714}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.1926649659872055, 'eval_valid_runtime': 0.3924, 'eval_valid_samples_per_second': 415.357, 'eval_valid_steps_per_second': 17.837, 'epoch': 0.41409010600706714}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.2111, 'grad_norm': 0.18291278488027754, 'learning_rate': 9.983273731011668e-05, 'epoch': 0.4175408568904594}
{'loss': 0.2081, 'grad_norm': 0.1727274280431501, 'learning_rate': 9.982976549785182e-05, 'epoch': 0.4209916077738516}
{'eval_valid_loss': 0.19049909710884094, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.176, 'eval_valid_steps_per_second': 17.916, 'epoch': 0.4209916077738516}
{'loss': 0.2091, 'grad_norm': 0.17420022551406572, 'learning_rate': 9.982676756197091e-05, 'epoch': 0.42444235865724383}
{'loss': 0.2101, 'grad_norm': 0.18743819114630342, 'learning_rate': 9.982374350404568e-05, 'epoch': 0.42789310954063603}
{'eval_valid_loss': 0.18933077156543732, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.306, 'eval_valid_steps_per_second': 17.921, 'epoch': 0.42789310954063603}
{'loss': 0.2076, 'grad_norm': 0.1622341055459992, 'learning_rate': 9.982069332566151e-05, 'epoch': 0.4313438604240283}
{'loss': 0.2062, 'grad_norm': 0.20366512433024336, 'learning_rate': 9.981761702841747e-05, 'epoch': 0.4347946113074205}
{'eval_valid_loss': 0.18773484230041504, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.802, 'eval_valid_steps_per_second': 17.942, 'epoch': 0.4347946113074205}
{'loss': 0.2059, 'grad_norm': 0.20509963478025636, 'learning_rate': 9.981451461392632e-05, 'epoch': 0.4382453621908127}
{'loss': 0.2061, 'grad_norm': 0.23009994989805324, 'learning_rate': 9.981138608381453e-05, 'epoch': 0.4416961130742049}
{'eval_valid_loss': 0.18633848428726196, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.84, 'eval_valid_steps_per_second': 17.944, 'epoch': 0.4416961130742049}
{'loss': 0.2045, 'grad_norm': 0.17204980368831913, 'learning_rate': 9.980823143972228e-05, 'epoch': 0.44514686395759717}
{'loss': 0.2034, 'grad_norm': 0.17771227993282732, 'learning_rate': 9.980505068330338e-05, 'epoch': 0.4485976148409894}
{'eval_valid_loss': 0.18591611087322235, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.763, 'eval_valid_steps_per_second': 17.984, 'epoch': 0.4485976148409894}
{'loss': 0.204, 'grad_norm': 0.18996103004642287, 'learning_rate': 9.980184381622538e-05, 'epoch': 0.4520483657243816}
{'loss': 0.2023, 'grad_norm': 0.23371250810505673, 'learning_rate': 9.97986108401695e-05, 'epoch': 0.45549911660777387}
{'eval_valid_loss': 0.18394793570041656, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.674, 'eval_valid_steps_per_second': 17.937, 'epoch': 0.45549911660777387}
{'loss': 0.2016, 'grad_norm': 0.25061658770433987, 'learning_rate': 9.979535175683066e-05, 'epoch': 0.45894986749116606}
{'loss': 0.203, 'grad_norm': 0.2103644167191684, 'learning_rate': 9.979206656791745e-05, 'epoch': 0.4624006183745583}
{'eval_valid_loss': 0.18234843015670776, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.484, 'eval_valid_steps_per_second': 17.886, 'epoch': 0.4624006183745583}
{'loss': 0.2017, 'grad_norm': 0.20504376916263722, 'learning_rate': 9.978875527515214e-05, 'epoch': 0.4658513692579505}
{'loss': 0.1993, 'grad_norm': 0.16511099406138469, 'learning_rate': 9.978541788027073e-05, 'epoch': 0.46930212014134276}
{'eval_valid_loss': 0.18147499859333038, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.25, 'eval_valid_steps_per_second': 17.919, 'epoch': 0.46930212014134276}
{'loss': 0.2009, 'grad_norm': 0.2560774992341605, 'learning_rate': 9.978205438502285e-05, 'epoch': 0.47275287102473496}
{'loss': 0.1994, 'grad_norm': 0.2477837097799837, 'learning_rate': 9.977866479117185e-05, 'epoch': 0.4762036219081272}
{'eval_valid_loss': 0.1818608045578003, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.162, 'eval_valid_steps_per_second': 17.915, 'epoch': 0.4762036219081272}
{'loss': 0.1963, 'grad_norm': 0.19808901362625564, 'learning_rate': 9.977524910049473e-05, 'epoch': 0.47965437279151946}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.1977, 'grad_norm': 0.19004317785752622, 'learning_rate': 9.977180731478222e-05, 'epoch': 0.48310512367491165}
{'eval_valid_loss': 0.17985112965106964, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.68, 'eval_valid_steps_per_second': 17.98, 'epoch': 0.48310512367491165}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1979, 'grad_norm': 0.27662457782024824, 'learning_rate': 9.976833943583869e-05, 'epoch': 0.4865558745583039}
{'loss': 0.1975, 'grad_norm': 0.22846479893742452, 'learning_rate': 9.976484546548219e-05, 'epoch': 0.4900066254416961}
{'eval_valid_loss': 0.17874804139137268, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.368, 'eval_valid_steps_per_second': 17.967, 'epoch': 0.4900066254416961}
{'loss': 0.1965, 'grad_norm': 0.19988370672105113, 'learning_rate': 9.976132540554447e-05, 'epoch': 0.49345737632508835}
{'loss': 0.1935, 'grad_norm': 0.25591471420306944, 'learning_rate': 9.975777925787092e-05, 'epoch': 0.49690812720848054}
{'eval_valid_loss': 0.17638073861598969, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.452, 'eval_valid_steps_per_second': 17.97, 'epoch': 0.49690812720848054}
{'loss': 0.1951, 'grad_norm': 0.2821820302952434, 'learning_rate': 9.975420702432067e-05, 'epoch': 0.5003588780918727}
{'loss': 0.1936, 'grad_norm': 0.23937314839594734, 'learning_rate': 9.975060870676647e-05, 'epoch': 0.503809628975265}
{'eval_valid_loss': 0.17636743187904358, 'eval_valid_runtime': 0.3927, 'eval_valid_samples_per_second': 415.028, 'eval_valid_steps_per_second': 17.823, 'epoch': 0.503809628975265}
{'loss': 0.1925, 'grad_norm': 0.15519496380613532, 'learning_rate': 9.974698430709478e-05, 'epoch': 0.5072603798586572}
{'loss': 0.1931, 'grad_norm': 0.23956307028507848, 'learning_rate': 9.97433338272057e-05, 'epoch': 0.5107111307420494}
{'eval_valid_loss': 0.17432822287082672, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.897, 'eval_valid_steps_per_second': 18.032, 'epoch': 0.5107111307420494}
{'loss': 0.192, 'grad_norm': 0.2412577538229327, 'learning_rate': 9.973965726901303e-05, 'epoch': 0.5141618816254417}
{'loss': 0.1898, 'grad_norm': 0.43458252766404176, 'learning_rate': 9.973595463444423e-05, 'epoch': 0.5176126325088339}
{'eval_valid_loss': 0.17389047145843506, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.518, 'eval_valid_steps_per_second': 18.016, 'epoch': 0.5176126325088339}
{'loss': 0.1902, 'grad_norm': 0.18681000435297726, 'learning_rate': 9.973222592544044e-05, 'epoch': 0.5210633833922261}
{'loss': 0.1927, 'grad_norm': 0.22872151680808597, 'learning_rate': 9.972847114395645e-05, 'epoch': 0.5245141342756183}
{'eval_valid_loss': 0.17410144209861755, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.562, 'eval_valid_steps_per_second': 17.932, 'epoch': 0.5245141342756183}
{'loss': 0.1889, 'grad_norm': 0.18383415306706963, 'learning_rate': 9.972469029196073e-05, 'epoch': 0.5279648851590106}
{'loss': 0.1877, 'grad_norm': 0.20121367778139357, 'learning_rate': 9.972088337143544e-05, 'epoch': 0.5314156360424028}
{'eval_valid_loss': 0.17174391448497772, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.925, 'eval_valid_steps_per_second': 17.905, 'epoch': 0.5314156360424028}
{'loss': 0.1887, 'grad_norm': 0.21260055509679626, 'learning_rate': 9.971705038437635e-05, 'epoch': 0.534866386925795}
{'loss': 0.1858, 'grad_norm': 0.22449356336345316, 'learning_rate': 9.971319133279298e-05, 'epoch': 0.5383171378091873}
{'eval_valid_loss': 0.17052355408668518, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.121, 'eval_valid_steps_per_second': 17.956, 'epoch': 0.5383171378091873}
{'loss': 0.1865, 'grad_norm': 0.2832073815103992, 'learning_rate': 9.970930621870842e-05, 'epoch': 0.5417678886925795}
{'loss': 0.1862, 'grad_norm': 0.21604342570464888, 'learning_rate': 9.97053950441595e-05, 'epoch': 0.5452186395759717}
{'eval_valid_loss': 0.17027631402015686, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 415.98, 'eval_valid_steps_per_second': 17.864, 'epoch': 0.5452186395759717}
{'loss': 0.1847, 'grad_norm': 0.19209276301301906, 'learning_rate': 9.970145781119667e-05, 'epoch': 0.5486693904593639}
{'loss': 0.183, 'grad_norm': 0.5099892056312351, 'learning_rate': 9.969749452188405e-05, 'epoch': 0.5521201413427562}
{'eval_valid_loss': 0.1675124317407608, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.391, 'eval_valid_steps_per_second': 17.968, 'epoch': 0.5521201413427562}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.185, 'grad_norm': 0.21692770862829702, 'learning_rate': 9.969350517829943e-05, 'epoch': 0.5555708922261484}
{'loss': 0.1842, 'grad_norm': 0.1922821582681381, 'learning_rate': 9.968948978253425e-05, 'epoch': 0.5590216431095406}
{'eval_valid_loss': 0.1669672727584839, 'eval_valid_runtime': 0.4005, 'eval_valid_samples_per_second': 406.967, 'eval_valid_steps_per_second': 17.477, 'epoch': 0.5590216431095406}
{'loss': 0.1835, 'grad_norm': 0.19854975624764962, 'learning_rate': 9.96854483366936e-05, 'epoch': 0.5624723939929329}
{'loss': 0.1811, 'grad_norm': 0.3161245237658269, 'learning_rate': 9.968138084289624e-05, 'epoch': 0.5659231448763251}
{'eval_valid_loss': 0.16562020778656006, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.721, 'eval_valid_steps_per_second': 17.939, 'epoch': 0.5659231448763251}
{'loss': 0.1806, 'grad_norm': 0.19925603790804958, 'learning_rate': 9.96772873032746e-05, 'epoch': 0.5693738957597173}
{'loss': 0.1807, 'grad_norm': 0.20283238277791685, 'learning_rate': 9.967316771997474e-05, 'epoch': 0.5728246466431095}
{'eval_valid_loss': 0.16668520867824554, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.768, 'eval_valid_steps_per_second': 17.941, 'epoch': 0.5728246466431095}
{'loss': 0.1807, 'grad_norm': 0.2978444322823086, 'learning_rate': 9.966902209515636e-05, 'epoch': 0.5762753975265018}
{'loss': 0.1813, 'grad_norm': 0.3391267528040065, 'learning_rate': 9.966485043099288e-05, 'epoch': 0.579726148409894}
{'eval_valid_loss': 0.16405433416366577, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.053, 'eval_valid_steps_per_second': 17.91, 'epoch': 0.579726148409894}
{'loss': 0.1786, 'grad_norm': 0.22873596966609364, 'learning_rate': 9.966065272967128e-05, 'epoch': 0.5831768992932862}
{'loss': 0.181, 'grad_norm': 0.21194448501963778, 'learning_rate': 9.965642899339225e-05, 'epoch': 0.5866276501766784}
{'eval_valid_loss': 0.16341568529605865, 'eval_valid_runtime': 0.3917, 'eval_valid_samples_per_second': 416.156, 'eval_valid_steps_per_second': 17.872, 'epoch': 0.5866276501766784}
{'loss': 0.1797, 'grad_norm': 0.23475363128081733, 'learning_rate': 9.965217922437014e-05, 'epoch': 0.5900784010600707}
{'loss': 0.1778, 'grad_norm': 0.2328607862351594, 'learning_rate': 9.964790342483287e-05, 'epoch': 0.5935291519434629}
{'eval_valid_loss': 0.1612745225429535, 'eval_valid_runtime': 0.3972, 'eval_valid_samples_per_second': 410.367, 'eval_valid_steps_per_second': 17.623, 'epoch': 0.5935291519434629}
{'loss': 0.1754, 'grad_norm': 0.21053679829923777, 'learning_rate': 9.964360159702211e-05, 'epoch': 0.5969799028268551}
{'loss': 0.1762, 'grad_norm': 0.2565273904817145, 'learning_rate': 9.963927374319308e-05, 'epoch': 0.6004306537102474}
{'eval_valid_loss': 0.1613021045923233, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 416.962, 'eval_valid_steps_per_second': 17.906, 'epoch': 0.6004306537102474}
{'loss': 0.178, 'grad_norm': 0.3362110174623188, 'learning_rate': 9.963491986561472e-05, 'epoch': 0.6038814045936396}
{'loss': 0.1749, 'grad_norm': 0.18812496227502717, 'learning_rate': 9.963053996656959e-05, 'epoch': 0.6073321554770318}
{'eval_valid_loss': 0.1581844836473465, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.609, 'eval_valid_steps_per_second': 17.891, 'epoch': 0.6073321554770318}
{'loss': 0.1763, 'grad_norm': 0.224626302146067, 'learning_rate': 9.962613404835386e-05, 'epoch': 0.610782906360424}
{'loss': 0.1749, 'grad_norm': 0.2195762967012741, 'learning_rate': 9.962170211327738e-05, 'epoch': 0.6142336572438163}
{'eval_valid_loss': 0.15870745480060577, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.697, 'eval_valid_steps_per_second': 17.938, 'epoch': 0.6142336572438163}
{'loss': 0.173, 'grad_norm': 0.2287253263695905, 'learning_rate': 9.96172441636636e-05, 'epoch': 0.6176844081272085}
{'loss': 0.1733, 'grad_norm': 0.23936725486612534, 'learning_rate': 9.961276020184965e-05, 'epoch': 0.6211351590106007}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.15849198400974274, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.391, 'eval_valid_steps_per_second': 17.925, 'epoch': 0.6211351590106007}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1731, 'grad_norm': 0.27479772512859507, 'learning_rate': 9.960825023018629e-05, 'epoch': 0.624585909893993}
{'loss': 0.1738, 'grad_norm': 0.22032086282208865, 'learning_rate': 9.960371425103789e-05, 'epoch': 0.6280366607773852}
{'eval_valid_loss': 0.1564715951681137, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.884, 'eval_valid_steps_per_second': 17.903, 'epoch': 0.6280366607773852}
{'loss': 0.172, 'grad_norm': 0.27331554551588516, 'learning_rate': 9.959915226678247e-05, 'epoch': 0.6314874116607774}
{'loss': 0.1712, 'grad_norm': 0.29533155347256174, 'learning_rate': 9.959456427981169e-05, 'epoch': 0.6349381625441696}
{'eval_valid_loss': 0.15505287051200867, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.744, 'eval_valid_steps_per_second': 17.94, 'epoch': 0.6349381625441696}
{'loss': 0.1717, 'grad_norm': 0.20233822828787254, 'learning_rate': 9.958995029253082e-05, 'epoch': 0.6383889134275619}
{'loss': 0.1708, 'grad_norm': 0.2370706869366917, 'learning_rate': 9.958531030735879e-05, 'epoch': 0.6418396643109541}
{'eval_valid_loss': 0.15567967295646667, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.5, 'eval_valid_steps_per_second': 17.972, 'epoch': 0.6418396643109541}
{'loss': 0.1715, 'grad_norm': 0.29433014718601835, 'learning_rate': 9.958064432672815e-05, 'epoch': 0.6452904151943463}
{'loss': 0.1715, 'grad_norm': 0.22881597095748485, 'learning_rate': 9.957595235308507e-05, 'epoch': 0.6487411660777385}
{'eval_valid_loss': 0.1526629626750946, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.495, 'eval_valid_steps_per_second': 17.929, 'epoch': 0.6487411660777385}
{'loss': 0.1684, 'grad_norm': 0.4177158119712202, 'learning_rate': 9.957123438888936e-05, 'epoch': 0.6521919169611308}
{'loss': 0.169, 'grad_norm': 0.2949725409610575, 'learning_rate': 9.956649043661442e-05, 'epoch': 0.655642667844523}
{'eval_valid_loss': 0.15269671380519867, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.667, 'eval_valid_steps_per_second': 17.98, 'epoch': 0.655642667844523}
{'loss': 0.1681, 'grad_norm': 0.2287928067307697, 'learning_rate': 9.956172049874732e-05, 'epoch': 0.6590934187279152}
{'loss': 0.1678, 'grad_norm': 0.2060070030689703, 'learning_rate': 9.955692457778874e-05, 'epoch': 0.6625441696113075}
{'eval_valid_loss': 0.15160448849201202, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.661, 'eval_valid_steps_per_second': 17.893, 'epoch': 0.6625441696113075}
{'loss': 0.1676, 'grad_norm': 0.24299689015844367, 'learning_rate': 9.955210267625297e-05, 'epoch': 0.6659949204946997}
{'loss': 0.166, 'grad_norm': 0.2293490244527161, 'learning_rate': 9.954725479666792e-05, 'epoch': 0.6694456713780919}
{'eval_valid_loss': 0.1496928334236145, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.167, 'eval_valid_steps_per_second': 17.915, 'epoch': 0.6694456713780919}
{'loss': 0.1653, 'grad_norm': 0.255726616654302, 'learning_rate': 9.954238094157514e-05, 'epoch': 0.672896422261484}
{'loss': 0.1652, 'grad_norm': 0.22215781149334374, 'learning_rate': 9.953748111352976e-05, 'epoch': 0.6763471731448764}
{'eval_valid_loss': 0.1485888659954071, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.664, 'eval_valid_steps_per_second': 17.979, 'epoch': 0.6763471731448764}
{'loss': 0.1651, 'grad_norm': 0.2662751353053342, 'learning_rate': 9.953255531510058e-05, 'epoch': 0.6797979240282686}
{'loss': 0.1648, 'grad_norm': 0.37354885462657106, 'learning_rate': 9.952760354886996e-05, 'epoch': 0.6832486749116607}
{'eval_valid_loss': 0.14848081767559052, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.775, 'eval_valid_steps_per_second': 17.984, 'epoch': 0.6832486749116607}
{'loss': 0.1629, 'grad_norm': 0.2769842362424302, 'learning_rate': 9.952262581743393e-05, 'epoch': 0.686699425795053}
{'loss': 0.1618, 'grad_norm': 0.2289910529228858, 'learning_rate': 9.951762212340207e-05, 'epoch': 0.6901501766784452}
{'eval_valid_loss': 0.14666853845119476, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 416.053, 'eval_valid_steps_per_second': 17.867, 'epoch': 0.6901501766784452}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1617, 'grad_norm': 0.19467795277350175, 'learning_rate': 9.951259246939762e-05, 'epoch': 0.6936009275618374}
{'loss': 0.1634, 'grad_norm': 0.23210656482867142, 'learning_rate': 9.950753685805741e-05, 'epoch': 0.6970516784452296}
{'eval_valid_loss': 0.1459352970123291, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.57, 'eval_valid_steps_per_second': 17.89, 'epoch': 0.6970516784452296}
{'loss': 0.16, 'grad_norm': 0.22683553574493895, 'learning_rate': 9.950245529203187e-05, 'epoch': 0.700502429328622}
{'loss': 0.1602, 'grad_norm': 0.2104343316522524, 'learning_rate': 9.949734777398507e-05, 'epoch': 0.7039531802120141}
{'eval_valid_loss': 0.14432594180107117, 'eval_valid_runtime': 0.393, 'eval_valid_samples_per_second': 414.712, 'eval_valid_steps_per_second': 17.81, 'epoch': 0.7039531802120141}
{'loss': 0.1594, 'grad_norm': 0.196594559453982, 'learning_rate': 9.949221430659464e-05, 'epoch': 0.7074039310954063}
{'loss': 0.1596, 'grad_norm': 0.22677746877154215, 'learning_rate': 9.948705489255184e-05, 'epoch': 0.7108546819787986}
{'eval_valid_loss': 0.1422286033630371, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.691, 'eval_valid_steps_per_second': 17.981, 'epoch': 0.7108546819787986}
{'loss': 0.1568, 'grad_norm': 0.28108504492507247, 'learning_rate': 9.948186953456156e-05, 'epoch': 0.7143054328621908}
{'loss': 0.1572, 'grad_norm': 0.26836867647548013, 'learning_rate': 9.947665823534223e-05, 'epoch': 0.717756183745583}
{'eval_valid_loss': 0.14175543189048767, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.79, 'eval_valid_steps_per_second': 17.942, 'epoch': 0.717756183745583}
{'loss': 0.1584, 'grad_norm': 0.2105931752344166, 'learning_rate': 9.947142099762592e-05, 'epoch': 0.7212069346289752}
{'loss': 0.1559, 'grad_norm': 0.2791015153918884, 'learning_rate': 9.94661578241583e-05, 'epoch': 0.7246576855123675}
{'eval_valid_loss': 0.14051920175552368, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.305, 'eval_valid_steps_per_second': 17.878, 'epoch': 0.7246576855123675}
{'loss': 0.1545, 'grad_norm': 0.1905398382480984, 'learning_rate': 9.946086871769859e-05, 'epoch': 0.7281084363957597}
{'loss': 0.1535, 'grad_norm': 0.20130912742376186, 'learning_rate': 9.94555536810197e-05, 'epoch': 0.7315591872791519}
{'eval_valid_loss': 0.13944076001644135, 'eval_valid_runtime': 0.3919, 'eval_valid_samples_per_second': 415.942, 'eval_valid_steps_per_second': 17.863, 'epoch': 0.7315591872791519}
{'loss': 0.155, 'grad_norm': 0.19542356888786208, 'learning_rate': 9.945021271690804e-05, 'epoch': 0.7350099381625441}
{'loss': 0.1548, 'grad_norm': 0.2460596566198875, 'learning_rate': 9.944484582816365e-05, 'epoch': 0.7384606890459364}
{'eval_valid_loss': 0.13760235905647278, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.453, 'eval_valid_steps_per_second': 17.884, 'epoch': 0.7384606890459364}
{'loss': 0.1504, 'grad_norm': 0.21109115084462815, 'learning_rate': 9.943945301760017e-05, 'epoch': 0.7419114399293286}
{'loss': 0.1513, 'grad_norm': 0.29076328376625227, 'learning_rate': 9.943403428804481e-05, 'epoch': 0.7453621908127208}
{'eval_valid_loss': 0.13561268150806427, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.333, 'eval_valid_steps_per_second': 17.965, 'epoch': 0.7453621908127208}
{'loss': 0.1502, 'grad_norm': 0.23835728127416422, 'learning_rate': 9.94285896423384e-05, 'epoch': 0.7488129416961131}
{'loss': 0.1499, 'grad_norm': 0.20023400217056495, 'learning_rate': 9.94231190833353e-05, 'epoch': 0.7522636925795053}
{'eval_valid_loss': 0.13520100712776184, 'eval_valid_runtime': 0.3995, 'eval_valid_samples_per_second': 408.027, 'eval_valid_steps_per_second': 17.523, 'epoch': 0.7522636925795053}
{'loss': 0.1504, 'grad_norm': 0.2543566095731112, 'learning_rate': 9.941762261390352e-05, 'epoch': 0.7557144434628975}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.1487, 'grad_norm': 0.24116961457878153, 'learning_rate': 9.941210023692463e-05, 'epoch': 0.7591651943462897}
{'eval_valid_loss': 0.13447245955467224, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.867, 'eval_valid_steps_per_second': 17.988, 'epoch': 0.7591651943462897}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1482, 'grad_norm': 0.23649954483943095, 'learning_rate': 9.940655195529373e-05, 'epoch': 0.762615945229682}
{'loss': 0.1476, 'grad_norm': 0.21736497261926274, 'learning_rate': 9.940097777191961e-05, 'epoch': 0.7660666961130742}
{'eval_valid_loss': 0.13235752284526825, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.654, 'eval_valid_steps_per_second': 17.936, 'epoch': 0.7660666961130742}
{'loss': 0.148, 'grad_norm': 0.28958076389965653, 'learning_rate': 9.939537768972453e-05, 'epoch': 0.7695174469964664}
{'loss': 0.1469, 'grad_norm': 0.18417024145198363, 'learning_rate': 9.938975171164438e-05, 'epoch': 0.7729681978798587}
{'eval_valid_loss': 0.13043516874313354, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.911, 'eval_valid_steps_per_second': 17.947, 'epoch': 0.7729681978798587}
{'loss': 0.1467, 'grad_norm': 0.21695508901320001, 'learning_rate': 9.938409984062863e-05, 'epoch': 0.7764189487632509}
{'loss': 0.1452, 'grad_norm': 0.23229584844641143, 'learning_rate': 9.93784220796403e-05, 'epoch': 0.7798696996466431}
{'eval_valid_loss': 0.1297825574874878, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.537, 'eval_valid_steps_per_second': 17.931, 'epoch': 0.7798696996466431}
{'loss': 0.1443, 'grad_norm': 0.23039028098609887, 'learning_rate': 9.937271843165603e-05, 'epoch': 0.7833204505300353}
{'loss': 0.1441, 'grad_norm': 0.2224773579265206, 'learning_rate': 9.936698889966595e-05, 'epoch': 0.7867712014134276}
{'eval_valid_loss': 0.12843532860279083, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.554, 'eval_valid_steps_per_second': 17.846, 'epoch': 0.7867712014134276}
{'loss': 0.1432, 'grad_norm': 0.2256327204889179, 'learning_rate': 9.936123348667387e-05, 'epoch': 0.7902219522968198}
{'loss': 0.1414, 'grad_norm': 0.2504825423781852, 'learning_rate': 9.935545219569705e-05, 'epoch': 0.793672703180212}
{'eval_valid_loss': 0.12770819664001465, 'eval_valid_runtime': 0.3946, 'eval_valid_samples_per_second': 413.118, 'eval_valid_steps_per_second': 17.741, 'epoch': 0.793672703180212}
{'loss': 0.143, 'grad_norm': 0.2728515045017305, 'learning_rate': 9.93496450297664e-05, 'epoch': 0.7971234540636042}
{'loss': 0.1411, 'grad_norm': 0.24859261922871156, 'learning_rate': 9.934381199192638e-05, 'epoch': 0.8005742049469965}
{'eval_valid_loss': 0.12626829743385315, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.604, 'eval_valid_steps_per_second': 17.977, 'epoch': 0.8005742049469965}
{'loss': 0.1409, 'grad_norm': 0.23489513507729082, 'learning_rate': 9.933795308523498e-05, 'epoch': 0.8040249558303887}
{'loss': 0.1411, 'grad_norm': 0.22480811535783027, 'learning_rate': 9.933206831276376e-05, 'epoch': 0.8074757067137809}
{'eval_valid_loss': 0.126267209649086, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.174, 'eval_valid_steps_per_second': 17.958, 'epoch': 0.8074757067137809}
{'loss': 0.1418, 'grad_norm': 0.18162913145485618, 'learning_rate': 9.93261576775979e-05, 'epoch': 0.8109264575971732}
{'loss': 0.1396, 'grad_norm': 0.20626979814434063, 'learning_rate': 9.932022118283608e-05, 'epoch': 0.8143772084805654}
{'eval_valid_loss': 0.1250820904970169, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.178, 'eval_valid_steps_per_second': 17.959, 'epoch': 0.8143772084805654}
{'loss': 0.1393, 'grad_norm': 0.25560753034433403, 'learning_rate': 9.931425883159051e-05, 'epoch': 0.8178279593639576}
{'loss': 0.1384, 'grad_norm': 0.23995611823516622, 'learning_rate': 9.930827062698704e-05, 'epoch': 0.8212787102473498}
{'eval_valid_loss': 0.12433837354183197, 'eval_valid_runtime': 0.3916, 'eval_valid_samples_per_second': 416.252, 'eval_valid_steps_per_second': 17.876, 'epoch': 0.8212787102473498}
{'loss': 0.1392, 'grad_norm': 0.22775529002254727, 'learning_rate': 9.930225657216504e-05, 'epoch': 0.8247294611307421}
{'loss': 0.1374, 'grad_norm': 0.23574272661524745, 'learning_rate': 9.929621667027737e-05, 'epoch': 0.8281802120141343}
{'eval_valid_loss': 0.12422001361846924, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.911, 'eval_valid_steps_per_second': 17.904, 'epoch': 0.8281802120141343}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1394, 'grad_norm': 0.24992428950192683, 'learning_rate': 9.929015092449052e-05, 'epoch': 0.8316309628975265}
{'loss': 0.1373, 'grad_norm': 0.2015712350186981, 'learning_rate': 9.928405933798452e-05, 'epoch': 0.8350817137809188}
{'eval_valid_loss': 0.12261810898780823, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 417.028, 'eval_valid_steps_per_second': 17.909, 'epoch': 0.8350817137809188}
{'loss': 0.1346, 'grad_norm': 0.21833220044652982, 'learning_rate': 9.92779419139529e-05, 'epoch': 0.838532464664311}
{'loss': 0.1369, 'grad_norm': 0.27420218678906383, 'learning_rate': 9.927179865560277e-05, 'epoch': 0.8419832155477032}
{'eval_valid_loss': 0.1218625158071518, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.124, 'eval_valid_steps_per_second': 17.913, 'epoch': 0.8419832155477032}
{'loss': 0.1349, 'grad_norm': 0.5994768990413842, 'learning_rate': 9.926562956615479e-05, 'epoch': 0.8454339664310954}
{'loss': 0.1364, 'grad_norm': 0.20343864951467272, 'learning_rate': 9.925943464884316e-05, 'epoch': 0.8488847173144877}
{'eval_valid_loss': 0.12101534754037857, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.552, 'eval_valid_steps_per_second': 17.932, 'epoch': 0.8488847173144877}
{'loss': 0.1336, 'grad_norm': 0.18747995352932573, 'learning_rate': 9.925321390691556e-05, 'epoch': 0.8523354681978799}
{'loss': 0.1345, 'grad_norm': 0.21017446167601367, 'learning_rate': 9.92469673436333e-05, 'epoch': 0.8557862190812721}
{'eval_valid_loss': 0.11972382664680481, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.742, 'eval_valid_steps_per_second': 17.94, 'epoch': 0.8557862190812721}
{'loss': 0.1324, 'grad_norm': 0.2127686409312657, 'learning_rate': 9.924069496227118e-05, 'epoch': 0.8592369699646644}
{'loss': 0.1331, 'grad_norm': 0.18000531895984484, 'learning_rate': 9.923439676611754e-05, 'epoch': 0.8626877208480566}
{'eval_valid_loss': 0.11960534751415253, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.057, 'eval_valid_steps_per_second': 17.953, 'epoch': 0.8626877208480566}
{'loss': 0.1326, 'grad_norm': 0.22326578127202995, 'learning_rate': 9.922807275847426e-05, 'epoch': 0.8661384717314488}
{'loss': 0.1322, 'grad_norm': 0.19045828560979117, 'learning_rate': 9.922172294265673e-05, 'epoch': 0.869589222614841}
{'eval_valid_loss': 0.11908610910177231, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.122, 'eval_valid_steps_per_second': 17.913, 'epoch': 0.869589222614841}
{'loss': 0.1319, 'grad_norm': 0.2053470171766441, 'learning_rate': 9.92153473219939e-05, 'epoch': 0.8730399734982333}
{'loss': 0.1327, 'grad_norm': 0.21370975815598692, 'learning_rate': 9.920894589982823e-05, 'epoch': 0.8764907243816255}
{'eval_valid_loss': 0.11735024303197861, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.182, 'eval_valid_steps_per_second': 17.916, 'epoch': 0.8764907243816255}
{'loss': 0.132, 'grad_norm': 0.2259448141778464, 'learning_rate': 9.920251867951574e-05, 'epoch': 0.8799414752650176}
{'loss': 0.1325, 'grad_norm': 0.22805486220495094, 'learning_rate': 9.91960656644259e-05, 'epoch': 0.8833922261484098}
{'eval_valid_loss': 0.11837159842252731, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.917, 'eval_valid_steps_per_second': 17.947, 'epoch': 0.8833922261484098}
{'loss': 0.1329, 'grad_norm': 0.19465707956873127, 'learning_rate': 9.918958685794176e-05, 'epoch': 0.8868429770318021}
{'loss': 0.1303, 'grad_norm': 0.3643930445183799, 'learning_rate': 9.918308226345991e-05, 'epoch': 0.8902937279151943}
{'eval_valid_loss': 0.11695583164691925, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.374, 'eval_valid_steps_per_second': 17.967, 'epoch': 0.8902937279151943}
{'loss': 0.1308, 'grad_norm': 0.2498823684615872, 'learning_rate': 9.917655188439041e-05, 'epoch': 0.8937444787985865}
{'loss': 0.1307, 'grad_norm': 0.24942680071999757, 'learning_rate': 9.916999572415687e-05, 'epoch': 0.8971952296819788}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.11650487780570984, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.694, 'eval_valid_steps_per_second': 17.938, 'epoch': 0.8971952296819788}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1301, 'grad_norm': 0.1623225561493827, 'learning_rate': 9.916341378619639e-05, 'epoch': 0.900645980565371}
{'loss': 0.1293, 'grad_norm': 0.19517993432832753, 'learning_rate': 9.915680607395961e-05, 'epoch': 0.9040967314487632}
{'eval_valid_loss': 0.11589767783880234, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.746, 'eval_valid_steps_per_second': 17.983, 'epoch': 0.9040967314487632}
{'loss': 0.1287, 'grad_norm': 0.2264688731333608, 'learning_rate': 9.915017259091066e-05, 'epoch': 0.9075474823321554}
{'loss': 0.1291, 'grad_norm': 0.19759303909616732, 'learning_rate': 9.91435133405272e-05, 'epoch': 0.9109982332155477}
{'eval_valid_loss': 0.11443769931793213, 'eval_valid_runtime': 0.3927, 'eval_valid_samples_per_second': 415.048, 'eval_valid_steps_per_second': 17.824, 'epoch': 0.9109982332155477}
{'loss': 0.1287, 'grad_norm': 0.1557244028118129, 'learning_rate': 9.913682832630041e-05, 'epoch': 0.9144489840989399}
{'loss': 0.1287, 'grad_norm': 0.3234343156295727, 'learning_rate': 9.913011755173492e-05, 'epoch': 0.9178997349823321}
{'eval_valid_loss': 0.11509880423545837, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.694, 'eval_valid_steps_per_second': 17.895, 'epoch': 0.9178997349823321}
{'loss': 0.1285, 'grad_norm': 0.19257507053091905, 'learning_rate': 9.91233810203489e-05, 'epoch': 0.9213504858657244}
{'loss': 0.1264, 'grad_norm': 0.16990810299639508, 'learning_rate': 9.911661873567406e-05, 'epoch': 0.9248012367491166}
{'eval_valid_loss': 0.11356589198112488, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.1, 'eval_valid_steps_per_second': 17.955, 'epoch': 0.9248012367491166}
{'loss': 0.1256, 'grad_norm': 0.2038584626336856, 'learning_rate': 9.910983070125557e-05, 'epoch': 0.9282519876325088}
{'loss': 0.1272, 'grad_norm': 0.17999317446669025, 'learning_rate': 9.910301692065208e-05, 'epoch': 0.931702738515901}
{'eval_valid_loss': 0.11315218359231949, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.311, 'eval_valid_steps_per_second': 17.921, 'epoch': 0.931702738515901}
{'loss': 0.1269, 'grad_norm': 0.1999052299559682, 'learning_rate': 9.90961773974358e-05, 'epoch': 0.9351534893992933}
{'loss': 0.1256, 'grad_norm': 0.15010250299547132, 'learning_rate': 9.908931213519237e-05, 'epoch': 0.9386042402826855}
{'eval_valid_loss': 0.11231939494609833, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.272, 'eval_valid_steps_per_second': 17.963, 'epoch': 0.9386042402826855}
{'loss': 0.1259, 'grad_norm': 0.17640228822783635, 'learning_rate': 9.908242113752096e-05, 'epoch': 0.9420549911660777}
{'loss': 0.1255, 'grad_norm': 0.23163229809653624, 'learning_rate': 9.907550440803423e-05, 'epoch': 0.9455057420494699}
{'eval_valid_loss': 0.11154714226722717, 'eval_valid_runtime': 0.4005, 'eval_valid_samples_per_second': 406.986, 'eval_valid_steps_per_second': 17.478, 'epoch': 0.9455057420494699}
{'loss': 0.1267, 'grad_norm': 0.23767396568436122, 'learning_rate': 9.906856195035832e-05, 'epoch': 0.9489564929328622}
{'loss': 0.125, 'grad_norm': 0.20596224679669287, 'learning_rate': 9.90615937681329e-05, 'epoch': 0.9524072438162544}
{'eval_valid_loss': 0.11075093597173691, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.329, 'eval_valid_steps_per_second': 17.879, 'epoch': 0.9524072438162544}
{'loss': 0.1248, 'grad_norm': 0.19560959052770696, 'learning_rate': 9.905459986501102e-05, 'epoch': 0.9558579946996466}
{'loss': 0.1256, 'grad_norm': 0.17775737382271453, 'learning_rate': 9.904758024465934e-05, 'epoch': 0.9593087455830389}
{'eval_valid_loss': 0.11014334857463837, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.611, 'eval_valid_steps_per_second': 17.977, 'epoch': 0.9593087455830389}
{'loss': 0.1239, 'grad_norm': 0.3019742521739674, 'learning_rate': 9.904053491075793e-05, 'epoch': 0.9627594964664311}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1222, 'grad_norm': 0.20375462750343096, 'learning_rate': 9.903346386700037e-05, 'epoch': 0.9662102473498233}
{'eval_valid_loss': 0.11016010493040085, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.905, 'eval_valid_steps_per_second': 18.033, 'epoch': 0.9662102473498233}
{'loss': 0.1233, 'grad_norm': 0.19727271657120143, 'learning_rate': 9.902636711709368e-05, 'epoch': 0.9696609982332155}
{'loss': 0.1238, 'grad_norm': 0.1596061233674084, 'learning_rate': 9.901924466475839e-05, 'epoch': 0.9731117491166078}
{'eval_valid_loss': 0.10868629813194275, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 418.989, 'eval_valid_steps_per_second': 17.993, 'epoch': 0.9731117491166078}
{'loss': 0.1235, 'grad_norm': 0.196311865808748, 'learning_rate': 9.901209651372851e-05, 'epoch': 0.9765625}
{'loss': 0.1233, 'grad_norm': 0.16839331163815574, 'learning_rate': 9.900492266775152e-05, 'epoch': 0.9800132508833922}
{'eval_valid_loss': 0.10898208618164062, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.552, 'eval_valid_steps_per_second': 17.889, 'epoch': 0.9800132508833922}
{'loss': 0.1239, 'grad_norm': 0.17173921558120978, 'learning_rate': 9.899772313058833e-05, 'epoch': 0.9834640017667845}
{'loss': 0.1213, 'grad_norm': 0.18733315730899794, 'learning_rate': 9.899049790601336e-05, 'epoch': 0.9869147526501767}
{'eval_valid_loss': 0.10779544711112976, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.267, 'eval_valid_steps_per_second': 17.962, 'epoch': 0.9869147526501767}
{'loss': 0.1209, 'grad_norm': 0.3546476023864729, 'learning_rate': 9.898324699781449e-05, 'epoch': 0.9903655035335689}
{'loss': 0.1229, 'grad_norm': 0.2638896118175161, 'learning_rate': 9.897597040979307e-05, 'epoch': 0.9938162544169611}
{'eval_valid_loss': 0.10749480128288269, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.604, 'eval_valid_steps_per_second': 17.977, 'epoch': 0.9938162544169611}
{'loss': 0.1215, 'grad_norm': 0.2325687625801124, 'learning_rate': 9.896866814576389e-05, 'epoch': 0.9972670053003534}
{'loss': 0.1214, 'grad_norm': 0.19059875533852103, 'learning_rate': 9.896134020955523e-05, 'epoch': 1.0007177561837455}
{'eval_valid_loss': 0.10768371820449829, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.245, 'eval_valid_steps_per_second': 17.961, 'epoch': 1.0007177561837455}
{'loss': 0.1194, 'grad_norm': 0.1850372088959538, 'learning_rate': 9.89539866050088e-05, 'epoch': 1.0041685070671378}
{'loss': 0.1194, 'grad_norm': 0.1979849254257582, 'learning_rate': 9.894660733597978e-05, 'epoch': 1.00761925795053}
{'eval_valid_loss': 0.10678291320800781, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.147, 'eval_valid_steps_per_second': 17.914, 'epoch': 1.00761925795053}
{'loss': 0.1196, 'grad_norm': 0.3223902540365363, 'learning_rate': 9.89392024063368e-05, 'epoch': 1.0110700088339222}
{'loss': 0.1202, 'grad_norm': 0.16699057821040741, 'learning_rate': 9.893177181996198e-05, 'epoch': 1.0145207597173145}
{'eval_valid_loss': 0.10730283707380295, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.489, 'eval_valid_steps_per_second': 17.929, 'epoch': 1.0145207597173145}
{'loss': 0.1196, 'grad_norm': 0.16621466047490627, 'learning_rate': 9.892431558075084e-05, 'epoch': 1.0179715106007068}
{'loss': 0.119, 'grad_norm': 0.17333174729831052, 'learning_rate': 9.891683369261234e-05, 'epoch': 1.0214222614840989}
{'eval_valid_loss': 0.10673069953918457, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.945, 'eval_valid_steps_per_second': 17.949, 'epoch': 1.0214222614840989}
{'loss': 0.1184, 'grad_norm': 0.20004123586075956, 'learning_rate': 9.890932615946895e-05, 'epoch': 1.0248730123674912}
{'loss': 0.1188, 'grad_norm': 0.181521361335087, 'learning_rate': 9.890179298525654e-05, 'epoch': 1.0283237632508835}
{'eval_valid_loss': 0.10644549876451492, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 415.979, 'eval_valid_steps_per_second': 17.864, 'epoch': 1.0283237632508835}
{'loss': 0.1189, 'grad_norm': 0.1851558118550432, 'learning_rate': 9.889423417392442e-05, 'epoch': 1.0317745141342756}
{'loss': 0.1174, 'grad_norm': 0.16848797466450202, 'learning_rate': 9.888664972943538e-05, 'epoch': 1.0352252650176679}
{'eval_valid_loss': 0.10501798242330551, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.656, 'eval_valid_steps_per_second': 17.936, 'epoch': 1.0352252650176679}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1183, 'grad_norm': 0.1574877610504396, 'learning_rate': 9.88790396557656e-05, 'epoch': 1.0386760159010602}
{'loss': 0.1195, 'grad_norm': 0.16909242192398494, 'learning_rate': 9.887140395690469e-05, 'epoch': 1.0421267667844523}
{'eval_valid_loss': 0.10477102547883987, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.786, 'eval_valid_steps_per_second': 17.985, 'epoch': 1.0421267667844523}
{'loss': 0.1186, 'grad_norm': 0.15832046499057176, 'learning_rate': 9.886374263685576e-05, 'epoch': 1.0455775176678446}
{'loss': 0.1169, 'grad_norm': 0.1704072460796058, 'learning_rate': 9.885605569963531e-05, 'epoch': 1.0490282685512367}
{'eval_valid_loss': 0.10420721024274826, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.542, 'eval_valid_steps_per_second': 17.931, 'epoch': 1.0490282685512367}
{'loss': 0.1169, 'grad_norm': 0.20061332450293096, 'learning_rate': 9.884834314927325e-05, 'epoch': 1.052479019434629}
{'loss': 0.1167, 'grad_norm': 0.20002429655044968, 'learning_rate': 9.884060498981296e-05, 'epoch': 1.0559297703180213}
{'eval_valid_loss': 0.10423988103866577, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.751, 'eval_valid_steps_per_second': 17.983, 'epoch': 1.0559297703180213}
{'loss': 0.116, 'grad_norm': 0.17193818171410094, 'learning_rate': 9.883284122531122e-05, 'epoch': 1.0593805212014133}
{'loss': 0.117, 'grad_norm': 0.2827242096566761, 'learning_rate': 9.882505185983823e-05, 'epoch': 1.0628312720848057}
{'eval_valid_loss': 0.1038566306233406, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.284, 'eval_valid_steps_per_second': 18.006, 'epoch': 1.0628312720848057}
{'loss': 0.1177, 'grad_norm': 0.2129594112157141, 'learning_rate': 9.881723689747764e-05, 'epoch': 1.066282022968198}
{'loss': 0.1164, 'grad_norm': 0.16367132426913736, 'learning_rate': 9.88093963423265e-05, 'epoch': 1.06973277385159}
{'eval_valid_loss': 0.10331481695175171, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.048, 'eval_valid_steps_per_second': 17.996, 'epoch': 1.06973277385159}
{'loss': 0.1157, 'grad_norm': 0.17457393727429288, 'learning_rate': 9.880153019849525e-05, 'epoch': 1.0731835247349824}
{'loss': 0.1168, 'grad_norm': 0.18142167272833734, 'learning_rate': 9.879363847010778e-05, 'epoch': 1.0766342756183747}
{'eval_valid_loss': 0.10394928604364395, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.266, 'eval_valid_steps_per_second': 17.962, 'epoch': 1.0766342756183747}
{'loss': 0.1158, 'grad_norm': 0.16193132908447816, 'learning_rate': 9.878572116130142e-05, 'epoch': 1.0800850265017667}
{'loss': 0.1155, 'grad_norm': 0.334911285366494, 'learning_rate': 9.877777827622686e-05, 'epoch': 1.083535777385159}
{'eval_valid_loss': 0.10316754877567291, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.273, 'eval_valid_steps_per_second': 17.92, 'epoch': 1.083535777385159}
{'loss': 0.114, 'grad_norm': 0.18592210907119988, 'learning_rate': 9.87698098190482e-05, 'epoch': 1.0869865282685511}
{'loss': 0.1148, 'grad_norm': 0.19042051832731327, 'learning_rate': 9.876181579394296e-05, 'epoch': 1.0904372791519434}
{'eval_valid_loss': 0.1013283059000969, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.411, 'eval_valid_steps_per_second': 17.969, 'epoch': 1.0904372791519434}
{'loss': 0.1164, 'grad_norm': 0.14594890618227796, 'learning_rate': 9.87537962051021e-05, 'epoch': 1.0938880300353357}
{'loss': 0.1149, 'grad_norm': 0.19878304411239398, 'learning_rate': 9.87457510567299e-05, 'epoch': 1.0973387809187278}
{'eval_valid_loss': 0.10238852351903915, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.521, 'eval_valid_steps_per_second': 18.016, 'epoch': 1.0973387809187278}
{'loss': 0.1131, 'grad_norm': 0.14530297847494378, 'learning_rate': 9.873768035304414e-05, 'epoch': 1.1007895318021201}
{'loss': 0.1149, 'grad_norm': 0.13326422955794318, 'learning_rate': 9.872958409827589e-05, 'epoch': 1.1042402826855124}
{'eval_valid_loss': 0.10133620351552963, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.244, 'eval_valid_steps_per_second': 17.918, 'epoch': 1.1042402826855124}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1129, 'grad_norm': 0.16858018954876866, 'learning_rate': 9.872146229666971e-05, 'epoch': 1.1076910335689045}
{'loss': 0.1131, 'grad_norm': 0.17644501827248368, 'learning_rate': 9.871331495248349e-05, 'epoch': 1.1111417844522968}
{'eval_valid_loss': 0.10081102699041367, 'eval_valid_runtime': 0.3923, 'eval_valid_samples_per_second': 415.51, 'eval_valid_steps_per_second': 17.844, 'epoch': 1.1111417844522968}
{'loss': 0.114, 'grad_norm': 0.15503874138914234, 'learning_rate': 9.870514206998856e-05, 'epoch': 1.1145925353356891}
{'loss': 0.1146, 'grad_norm': 0.18195254379914547, 'learning_rate': 9.869694365346958e-05, 'epoch': 1.1180432862190812}
{'eval_valid_loss': 0.1011626347899437, 'eval_valid_runtime': 0.392, 'eval_valid_samples_per_second': 415.801, 'eval_valid_steps_per_second': 17.856, 'epoch': 1.1180432862190812}
{'loss': 0.1137, 'grad_norm': 0.19538478472959586, 'learning_rate': 9.868871970722466e-05, 'epoch': 1.1214940371024735}
{'loss': 0.1123, 'grad_norm': 0.20440535517828617, 'learning_rate': 9.868047023556525e-05, 'epoch': 1.1249447879858656}
{'eval_valid_loss': 0.10096123069524765, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.42, 'eval_valid_steps_per_second': 17.926, 'epoch': 1.1249447879858656}
{'loss': 0.1131, 'grad_norm': 0.14174947499961166, 'learning_rate': 9.867219524281618e-05, 'epoch': 1.128395538869258}
{'loss': 0.1121, 'grad_norm': 0.20340845766157, 'learning_rate': 9.86638947333157e-05, 'epoch': 1.1318462897526502}
{'eval_valid_loss': 0.09982309490442276, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.44, 'eval_valid_steps_per_second': 18.013, 'epoch': 1.1318462897526502}
{'loss': 0.1136, 'grad_norm': 0.18360747767691107, 'learning_rate': 9.865556871141541e-05, 'epoch': 1.1352970406360423}
{'loss': 0.1111, 'grad_norm': 0.16119565454027873, 'learning_rate': 9.864721718148028e-05, 'epoch': 1.1387477915194346}
{'eval_valid_loss': 0.09915829449892044, 'eval_valid_runtime': 0.3994, 'eval_valid_samples_per_second': 408.097, 'eval_valid_steps_per_second': 17.526, 'epoch': 1.1387477915194346}
{'loss': 0.1127, 'grad_norm': 0.18869279097390623, 'learning_rate': 9.863884014788865e-05, 'epoch': 1.142198542402827}
{'loss': 0.111, 'grad_norm': 0.14810243203978093, 'learning_rate': 9.863043761503226e-05, 'epoch': 1.145649293286219}
{'eval_valid_loss': 0.09904789179563522, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.667, 'eval_valid_steps_per_second': 17.98, 'epoch': 1.145649293286219}
{'loss': 0.1123, 'grad_norm': 0.25479682154861266, 'learning_rate': 9.862200958731619e-05, 'epoch': 1.1491000441696113}
{'loss': 0.1109, 'grad_norm': 0.17504503520842654, 'learning_rate': 9.86135560691589e-05, 'epoch': 1.1525507950530036}
{'eval_valid_loss': 0.09943567961454391, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.34, 'eval_valid_steps_per_second': 17.966, 'epoch': 1.1525507950530036}
{'loss': 0.1109, 'grad_norm': 0.23924961094277086, 'learning_rate': 9.860507706499217e-05, 'epoch': 1.1560015459363957}
{'loss': 0.1116, 'grad_norm': 0.17232029891563153, 'learning_rate': 9.859657257926124e-05, 'epoch': 1.159452296819788}
{'eval_valid_loss': 0.09973792731761932, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.283, 'eval_valid_steps_per_second': 17.963, 'epoch': 1.159452296819788}
{'loss': 0.1111, 'grad_norm': 0.19155085186023554, 'learning_rate': 9.858804261642463e-05, 'epoch': 1.16290304770318}
{'loss': 0.1106, 'grad_norm': 0.13935607077649642, 'learning_rate': 9.857948718095421e-05, 'epoch': 1.1663537985865724}
{'eval_valid_loss': 0.09903784096240997, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.863, 'eval_valid_steps_per_second': 17.945, 'epoch': 1.1663537985865724}
{'loss': 0.1096, 'grad_norm': 0.19255247811648535, 'learning_rate': 9.857090627733525e-05, 'epoch': 1.1698045494699647}
{'loss': 0.1095, 'grad_norm': 0.16155044284216416, 'learning_rate': 9.856229991006634e-05, 'epoch': 1.173255300353357}
{'eval_valid_loss': 0.09880084544420242, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.444, 'eval_valid_steps_per_second': 17.927, 'epoch': 1.173255300353357}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1098, 'grad_norm': 0.16962532472882053, 'learning_rate': 9.855366808365944e-05, 'epoch': 1.176706051236749}
{'loss': 0.1121, 'grad_norm': 0.13583716921912398, 'learning_rate': 9.854501080263984e-05, 'epoch': 1.1801568021201414}
{'eval_valid_loss': 0.09756634384393692, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.988, 'eval_valid_steps_per_second': 17.95, 'epoch': 1.1801568021201414}
{'loss': 0.1099, 'grad_norm': 0.151020858558399, 'learning_rate': 9.853632807154619e-05, 'epoch': 1.1836075530035335}
{'loss': 0.1102, 'grad_norm': 0.15308720834183542, 'learning_rate': 9.852761989493047e-05, 'epoch': 1.1870583038869258}
{'eval_valid_loss': 0.09770330041646957, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.194, 'eval_valid_steps_per_second': 17.959, 'epoch': 1.1870583038869258}
{'loss': 0.1082, 'grad_norm': 0.1697958234704882, 'learning_rate': 9.851888627735799e-05, 'epoch': 1.190509054770318}
{'loss': 0.1106, 'grad_norm': 0.17116356183993217, 'learning_rate': 9.851012722340744e-05, 'epoch': 1.1939598056537102}
{'eval_valid_loss': 0.09764977544546127, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.741, 'eval_valid_steps_per_second': 17.983, 'epoch': 1.1939598056537102}
{'loss': 0.1106, 'grad_norm': 0.16137480700536727, 'learning_rate': 9.850134273767082e-05, 'epoch': 1.1974105565371025}
{'loss': 0.1087, 'grad_norm': 0.17474244704748543, 'learning_rate': 9.849253282475344e-05, 'epoch': 1.2008613074204948}
{'eval_valid_loss': 0.09632017463445663, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.672, 'eval_valid_steps_per_second': 18.066, 'epoch': 1.2008613074204948}
{'loss': 0.1098, 'grad_norm': 0.137182394395998, 'learning_rate': 9.848369748927395e-05, 'epoch': 1.2043120583038869}
{'loss': 0.1091, 'grad_norm': 0.22471931089082717, 'learning_rate': 9.847483673586437e-05, 'epoch': 1.2077628091872792}
{'eval_valid_loss': 0.09608945995569229, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.78, 'eval_valid_steps_per_second': 17.984, 'epoch': 1.2077628091872792}
{'loss': 0.1078, 'grad_norm': 0.17874082819532547, 'learning_rate': 9.846595056916998e-05, 'epoch': 1.2112135600706715}
{'loss': 0.109, 'grad_norm': 0.2101791876927049, 'learning_rate': 9.845703899384946e-05, 'epoch': 1.2146643109540636}
{'eval_valid_loss': 0.09687365591526031, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.154, 'eval_valid_steps_per_second': 17.958, 'epoch': 1.2146643109540636}
{'loss': 0.1094, 'grad_norm': 0.1481134661422571, 'learning_rate': 9.844810201457474e-05, 'epoch': 1.2181150618374559}
{'loss': 0.1093, 'grad_norm': 0.1574349968418078, 'learning_rate': 9.84391396360311e-05, 'epoch': 1.221565812720848}
{'eval_valid_loss': 0.09621462225914001, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.76, 'eval_valid_steps_per_second': 17.984, 'epoch': 1.221565812720848}
{'loss': 0.1058, 'grad_norm': 0.18026305495176007, 'learning_rate': 9.843015186291713e-05, 'epoch': 1.2250165636042403}
{'loss': 0.1079, 'grad_norm': 0.17373839134421198, 'learning_rate': 9.842113869994474e-05, 'epoch': 1.2284673144876326}
{'eval_valid_loss': 0.09548346698284149, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.665, 'eval_valid_steps_per_second': 17.937, 'epoch': 1.2284673144876326}
{'loss': 0.1064, 'grad_norm': 0.16756801866607698, 'learning_rate': 9.841210015183914e-05, 'epoch': 1.2319180653710247}
{'loss': 0.1068, 'grad_norm': 0.1512054030367352, 'learning_rate': 9.840303622333886e-05, 'epoch': 1.235368816254417}
{'eval_valid_loss': 0.09445657581090927, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.331, 'eval_valid_steps_per_second': 18.008, 'epoch': 1.235368816254417}
{'loss': 0.1084, 'grad_norm': 0.3636059338771462, 'learning_rate': 9.839394691919573e-05, 'epoch': 1.2388195671378093}
{'loss': 0.1065, 'grad_norm': 0.17211588153053187, 'learning_rate': 9.838483224417489e-05, 'epoch': 1.2422703180212014}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.09480858594179153, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.313, 'eval_valid_steps_per_second': 18.05, 'epoch': 1.2422703180212014}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1084, 'grad_norm': 0.14781218211516328, 'learning_rate': 9.837569220305476e-05, 'epoch': 1.2457210689045937}
{'loss': 0.108, 'grad_norm': 0.17792159344841235, 'learning_rate': 9.836652680062707e-05, 'epoch': 1.249171819787986}
{'eval_valid_loss': 0.09485969692468643, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.574, 'eval_valid_steps_per_second': 18.061, 'epoch': 1.249171819787986}
{'loss': 0.1063, 'grad_norm': 0.16953524442293266, 'learning_rate': 9.835733604169688e-05, 'epoch': 1.252622570671378}
{'loss': 0.1076, 'grad_norm': 0.1287351340449259, 'learning_rate': 9.834811993108248e-05, 'epoch': 1.2560733215547704}
{'eval_valid_loss': 0.09547892957925797, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.121, 'eval_valid_steps_per_second': 17.956, 'epoch': 1.2560733215547704}
{'loss': 0.1059, 'grad_norm': 0.16987592970739374, 'learning_rate': 9.83388784736155e-05, 'epoch': 1.2595240724381624}
{'loss': 0.1066, 'grad_norm': 0.2116501814361075, 'learning_rate': 9.832961167414081e-05, 'epoch': 1.2629748233215548}
{'eval_valid_loss': 0.09339410066604614, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.765, 'eval_valid_steps_per_second': 18.113, 'epoch': 1.2629748233215548}
{'loss': 0.106, 'grad_norm': 0.23201596792445914, 'learning_rate': 9.832031953751665e-05, 'epoch': 1.266425574204947}
{'loss': 0.1064, 'grad_norm': 0.17396045660823012, 'learning_rate': 9.831100206861446e-05, 'epoch': 1.2698763250883391}
{'eval_valid_loss': 0.0941174104809761, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.787, 'eval_valid_steps_per_second': 18.071, 'epoch': 1.2698763250883391}
{'loss': 0.1075, 'grad_norm': 0.15411019632710582, 'learning_rate': 9.830165927231898e-05, 'epoch': 1.2733270759717314}
{'loss': 0.1062, 'grad_norm': 0.25574151214334107, 'learning_rate': 9.829229115352825e-05, 'epoch': 1.2767778268551238}
{'eval_valid_loss': 0.09317243844270706, 'eval_valid_runtime': 0.3859, 'eval_valid_samples_per_second': 422.355, 'eval_valid_steps_per_second': 18.138, 'epoch': 1.2767778268551238}
{'loss': 0.1051, 'grad_norm': 0.15871226038447933, 'learning_rate': 9.828289771715358e-05, 'epoch': 1.2802285777385158}
{'loss': 0.1062, 'grad_norm': 0.15319025590681104, 'learning_rate': 9.827347896811953e-05, 'epoch': 1.2836793286219081}
{'eval_valid_loss': 0.09365333616733551, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.406, 'eval_valid_steps_per_second': 18.054, 'epoch': 1.2836793286219081}
{'loss': 0.1054, 'grad_norm': 0.12938224699306192, 'learning_rate': 9.826403491136398e-05, 'epoch': 1.2871300795053005}
{'loss': 0.1044, 'grad_norm': 0.24088659607726343, 'learning_rate': 9.825456555183801e-05, 'epoch': 1.2905808303886925}
{'eval_valid_loss': 0.09269048273563385, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.413, 'eval_valid_steps_per_second': 18.055, 'epoch': 1.2905808303886925}
{'loss': 0.1058, 'grad_norm': 0.14686031369532365, 'learning_rate': 9.824507089450604e-05, 'epoch': 1.2940315812720848}
{'loss': 0.1051, 'grad_norm': 0.12787309914279038, 'learning_rate': 9.823555094434567e-05, 'epoch': 1.297482332155477}
{'eval_valid_loss': 0.09330055117607117, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.099, 'eval_valid_steps_per_second': 18.084, 'epoch': 1.297482332155477}
{'loss': 0.1059, 'grad_norm': 0.1536304125832071, 'learning_rate': 9.82260057063478e-05, 'epoch': 1.3009330830388692}
{'loss': 0.1047, 'grad_norm': 0.1457643312211307, 'learning_rate': 9.821643518551665e-05, 'epoch': 1.3043838339222615}
{'eval_valid_loss': 0.09295915812253952, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.081, 'eval_valid_steps_per_second': 18.083, 'epoch': 1.3043838339222615}
{'loss': 0.1041, 'grad_norm': 0.1249509649070747, 'learning_rate': 9.820683938686958e-05, 'epoch': 1.3078345848056538}
{'loss': 0.1042, 'grad_norm': 0.20181057660377935, 'learning_rate': 9.819721831543728e-05, 'epoch': 1.311285335689046}
{'eval_valid_loss': 0.09255238622426987, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.692, 'eval_valid_steps_per_second': 18.067, 'epoch': 1.311285335689046}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1045, 'grad_norm': 0.1398661135129565, 'learning_rate': 9.818757197626365e-05, 'epoch': 1.3147360865724382}
{'loss': 0.1055, 'grad_norm': 0.24332051098864904, 'learning_rate': 9.817790037440587e-05, 'epoch': 1.3181868374558303}
{'eval_valid_loss': 0.09241299331188202, 'eval_valid_runtime': 0.3855, 'eval_valid_samples_per_second': 422.778, 'eval_valid_steps_per_second': 18.156, 'epoch': 1.3181868374558303}
{'loss': 0.1019, 'grad_norm': 0.14494517363011786, 'learning_rate': 9.816820351493434e-05, 'epoch': 1.3216375883392226}
{'loss': 0.105, 'grad_norm': 0.1800366092092577, 'learning_rate': 9.815848140293271e-05, 'epoch': 1.325088339222615}
{'eval_valid_loss': 0.09170760214328766, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.732, 'eval_valid_steps_per_second': 18.111, 'epoch': 1.325088339222615}
{'loss': 0.1049, 'grad_norm': 0.15835958269988656, 'learning_rate': 9.814873404349787e-05, 'epoch': 1.328539090106007}
{'loss': 0.1038, 'grad_norm': 0.114451623956267, 'learning_rate': 9.813896144173994e-05, 'epoch': 1.3319898409893993}
{'eval_valid_loss': 0.09139649569988251, 'eval_valid_runtime': 0.395, 'eval_valid_samples_per_second': 412.681, 'eval_valid_steps_per_second': 17.723, 'epoch': 1.3319898409893993}
{'loss': 0.1035, 'grad_norm': 0.12752242582816797, 'learning_rate': 9.812916360278228e-05, 'epoch': 1.3354405918727914}
{'loss': 0.1034, 'grad_norm': 0.1428424563665371, 'learning_rate': 9.811934053176147e-05, 'epoch': 1.3388913427561837}
{'eval_valid_loss': 0.09164691716432571, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.543, 'eval_valid_steps_per_second': 18.103, 'epoch': 1.3388913427561837}
{'loss': 0.1026, 'grad_norm': 0.16293777567697612, 'learning_rate': 9.810949223382734e-05, 'epoch': 1.342342093639576}
{'loss': 0.1045, 'grad_norm': 0.14740804043609948, 'learning_rate': 9.809961871414293e-05, 'epoch': 1.3457928445229683}
{'eval_valid_loss': 0.09137078374624252, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.296, 'eval_valid_steps_per_second': 18.05, 'epoch': 1.3457928445229683}
{'loss': 0.1024, 'grad_norm': 0.11993889303058392, 'learning_rate': 9.808971997788447e-05, 'epoch': 1.3492435954063604}
{'loss': 0.1028, 'grad_norm': 0.15214116074179368, 'learning_rate': 9.807979603024151e-05, 'epoch': 1.3526943462897527}
{'eval_valid_loss': 0.09100376814603806, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.176, 'eval_valid_steps_per_second': 17.958, 'epoch': 1.3526943462897527}
{'loss': 0.1039, 'grad_norm': 0.15599351573482578, 'learning_rate': 9.806984687641669e-05, 'epoch': 1.3561450971731448}
{'loss': 0.1025, 'grad_norm': 0.14991311695095624, 'learning_rate': 9.805987252162597e-05, 'epoch': 1.359595848056537}
{'eval_valid_loss': 0.09065356850624084, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.729, 'eval_valid_steps_per_second': 17.982, 'epoch': 1.359595848056537}
{'loss': 0.1035, 'grad_norm': 0.15711001133246014, 'learning_rate': 9.804987297109844e-05, 'epoch': 1.3630465989399294}
{'loss': 0.1029, 'grad_norm': 0.16682159253997506, 'learning_rate': 9.803984823007648e-05, 'epoch': 1.3664973498233215}
{'eval_valid_loss': 0.09140968322753906, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.362, 'eval_valid_steps_per_second': 18.052, 'epoch': 1.3664973498233215}
{'loss': 0.1032, 'grad_norm': 0.1667206205486107, 'learning_rate': 9.80297983038156e-05, 'epoch': 1.3699481007067138}
{'loss': 0.1015, 'grad_norm': 0.1333631549534522, 'learning_rate': 9.801972319758454e-05, 'epoch': 1.3733988515901059}
{'eval_valid_loss': 0.09034436196088791, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.454, 'eval_valid_steps_per_second': 17.927, 'epoch': 1.3733988515901059}
{'loss': 0.1021, 'grad_norm': 0.13693685834581068, 'learning_rate': 9.800962291666527e-05, 'epoch': 1.3768496024734982}
{'loss': 0.1022, 'grad_norm': 0.12122910835868118, 'learning_rate': 9.799949746635294e-05, 'epoch': 1.3803003533568905}
{'eval_valid_loss': 0.09084061533212662, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.38, 'eval_valid_steps_per_second': 18.01, 'epoch': 1.3803003533568905}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.1017, 'grad_norm': 0.16088305605166786, 'learning_rate': 9.798934685195588e-05, 'epoch': 1.3837511042402828}
{'loss': 0.1023, 'grad_norm': 0.13938769485763922, 'learning_rate': 9.797917107879561e-05, 'epoch': 1.3872018551236749}
{'eval_valid_loss': 0.08912831544876099, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.677, 'eval_valid_steps_per_second': 18.023, 'epoch': 1.3872018551236749}
{'loss': 0.1007, 'grad_norm': 0.1574748714675272, 'learning_rate': 9.796897015220687e-05, 'epoch': 1.3906526060070672}
{'loss': 0.1022, 'grad_norm': 0.11609363494410142, 'learning_rate': 9.795874407753757e-05, 'epoch': 1.3941033568904593}
{'eval_valid_loss': 0.08978042006492615, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.193, 'eval_valid_steps_per_second': 17.959, 'epoch': 1.3941033568904593}
{'loss': 0.1018, 'grad_norm': 0.13883531952618522, 'learning_rate': 9.79484928601488e-05, 'epoch': 1.3975541077738516}
{'loss': 0.1009, 'grad_norm': 0.13972159282226954, 'learning_rate': 9.793821650541483e-05, 'epoch': 1.401004858657244}
{'eval_valid_loss': 0.08925811201334, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.272, 'eval_valid_steps_per_second': 17.963, 'epoch': 1.401004858657244}
{'loss': 0.0994, 'grad_norm': 0.11994480071206198, 'learning_rate': 9.792791501872312e-05, 'epoch': 1.404455609540636}
{'loss': 0.1016, 'grad_norm': 0.14593416536892234, 'learning_rate': 9.791758840547429e-05, 'epoch': 1.4079063604240283}
{'eval_valid_loss': 0.08958417922258377, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.29, 'eval_valid_steps_per_second': 18.092, 'epoch': 1.4079063604240283}
{'loss': 0.1026, 'grad_norm': 0.1683963340402968, 'learning_rate': 9.790723667108214e-05, 'epoch': 1.4113571113074204}
{'loss': 0.1017, 'grad_norm': 0.13699291318758108, 'learning_rate': 9.789685982097367e-05, 'epoch': 1.4148078621908127}
{'eval_valid_loss': 0.08923902362585068, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.943, 'eval_valid_steps_per_second': 17.991, 'epoch': 1.4148078621908127}
{'loss': 0.1011, 'grad_norm': 0.18472268068145184, 'learning_rate': 9.7886457860589e-05, 'epoch': 1.418258613074205}
{'loss': 0.1015, 'grad_norm': 0.11991857990876553, 'learning_rate': 9.787603079538143e-05, 'epoch': 1.4217093639575973}
{'eval_valid_loss': 0.08931553363800049, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.085, 'eval_valid_steps_per_second': 17.955, 'epoch': 1.4217093639575973}
{'loss': 0.0999, 'grad_norm': 0.13983879069011335, 'learning_rate': 9.786557863081743e-05, 'epoch': 1.4251601148409894}
{'loss': 0.1006, 'grad_norm': 0.1452387037226976, 'learning_rate': 9.785510137237662e-05, 'epoch': 1.4286108657243817}
{'eval_valid_loss': 0.089290551841259, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.558, 'eval_valid_steps_per_second': 17.932, 'epoch': 1.4286108657243817}
{'loss': 0.1006, 'grad_norm': 0.1321937466949605, 'learning_rate': 9.784459902555176e-05, 'epoch': 1.4320616166077738}
{'loss': 0.1008, 'grad_norm': 0.15914840352887902, 'learning_rate': 9.783407159584884e-05, 'epoch': 1.435512367491166}
{'eval_valid_loss': 0.08934677392244339, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.244, 'eval_valid_steps_per_second': 18.09, 'epoch': 1.435512367491166}
{'loss': 0.1013, 'grad_norm': 0.18127671434567771, 'learning_rate': 9.782351908878686e-05, 'epoch': 1.4389631183745584}
{'loss': 0.1002, 'grad_norm': 0.13442725654943227, 'learning_rate': 9.781294150989811e-05, 'epoch': 1.4424138692579505}
{'eval_valid_loss': 0.08853746205568314, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.904, 'eval_valid_steps_per_second': 17.99, 'epoch': 1.4424138692579505}
{'loss': 0.0997, 'grad_norm': 0.13167399880736017, 'learning_rate': 9.780233886472795e-05, 'epoch': 1.4458646201413428}
{'loss': 0.0992, 'grad_norm': 0.11080845253604468, 'learning_rate': 9.779171115883488e-05, 'epoch': 1.4493153710247348}
{'eval_valid_loss': 0.08859323710203171, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.388, 'eval_valid_steps_per_second': 18.011, 'epoch': 1.4493153710247348}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0998, 'grad_norm': 0.12953385282633914, 'learning_rate': 9.778105839779055e-05, 'epoch': 1.4527661219081272}
{'loss': 0.0994, 'grad_norm': 0.1546324378572617, 'learning_rate': 9.777038058717977e-05, 'epoch': 1.4562168727915195}
{'eval_valid_loss': 0.08819360285997391, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.075, 'eval_valid_steps_per_second': 17.997, 'epoch': 1.4562168727915195}
{'loss': 0.0984, 'grad_norm': 0.13266620934763226, 'learning_rate': 9.775967773260044e-05, 'epoch': 1.4596676236749118}
{'loss': 0.1011, 'grad_norm': 0.16034284217776787, 'learning_rate': 9.77489498396636e-05, 'epoch': 1.4631183745583038}
{'eval_valid_loss': 0.08889780193567276, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.029, 'eval_valid_steps_per_second': 17.995, 'epoch': 1.4631183745583038}
{'loss': 0.0983, 'grad_norm': 0.13087287678494844, 'learning_rate': 9.773819691399346e-05, 'epoch': 1.4665691254416962}
{'loss': 0.1005, 'grad_norm': 0.12000514790253704, 'learning_rate': 9.77274189612273e-05, 'epoch': 1.4700198763250882}
{'eval_valid_loss': 0.08886322379112244, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.06, 'eval_valid_steps_per_second': 17.953, 'epoch': 1.4700198763250882}
{'loss': 0.0993, 'grad_norm': 0.13211469463264613, 'learning_rate': 9.771661598701553e-05, 'epoch': 1.4734706272084805}
{'loss': 0.1001, 'grad_norm': 0.18084124375742278, 'learning_rate': 9.77057879970217e-05, 'epoch': 1.4769213780918728}
{'eval_valid_loss': 0.08742225915193558, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.987, 'eval_valid_steps_per_second': 17.95, 'epoch': 1.4769213780918728}
{'loss': 0.0989, 'grad_norm': 0.12005792530369554, 'learning_rate': 9.769493499692246e-05, 'epoch': 1.4803721289752652}
{'loss': 0.0994, 'grad_norm': 0.15686515140240337, 'learning_rate': 9.768405699240757e-05, 'epoch': 1.4838228798586572}
{'eval_valid_loss': 0.08797120302915573, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.369, 'eval_valid_steps_per_second': 18.096, 'epoch': 1.4838228798586572}
{'loss': 0.0997, 'grad_norm': 0.16225055841847194, 'learning_rate': 9.767315398917991e-05, 'epoch': 1.4872736307420495}
{'loss': 0.0999, 'grad_norm': 0.15175187650250976, 'learning_rate': 9.766222599295544e-05, 'epoch': 1.4907243816254416}
{'eval_valid_loss': 0.08739881217479706, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.6, 'eval_valid_steps_per_second': 17.977, 'epoch': 1.4907243816254416}
{'loss': 0.0986, 'grad_norm': 0.14865736085838985, 'learning_rate': 9.765127300946328e-05, 'epoch': 1.494175132508834}
{'loss': 0.0984, 'grad_norm': 0.11723015196535767, 'learning_rate': 9.764029504444559e-05, 'epoch': 1.4976258833922262}
{'eval_valid_loss': 0.08746781945228577, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.479, 'eval_valid_steps_per_second': 18.014, 'epoch': 1.4976258833922262}
{'loss': 0.0992, 'grad_norm': 0.18144667657507785, 'learning_rate': 9.762929210365764e-05, 'epoch': 1.5010766342756183}
{'loss': 0.099, 'grad_norm': 0.16286590588401975, 'learning_rate': 9.761826419286778e-05, 'epoch': 1.5045273851590106}
{'eval_valid_loss': 0.08764509111642838, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.989, 'eval_valid_steps_per_second': 17.95, 'epoch': 1.5045273851590106}
{'loss': 0.0993, 'grad_norm': 0.17040129960649142, 'learning_rate': 9.760721131785753e-05, 'epoch': 1.5079781360424027}
{'loss': 0.0993, 'grad_norm': 0.10895334858514019, 'learning_rate': 9.759613348442138e-05, 'epoch': 1.511428886925795}
{'eval_valid_loss': 0.0874795988202095, 'eval_valid_runtime': 0.388, 'eval_valid_samples_per_second': 420.146, 'eval_valid_steps_per_second': 18.043, 'epoch': 1.511428886925795}
{'loss': 0.099, 'grad_norm': 0.1326563419940375, 'learning_rate': 9.758503069836702e-05, 'epoch': 1.5148796378091873}
{'loss': 0.0986, 'grad_norm': 0.14583099738991426, 'learning_rate': 9.757390296551511e-05, 'epoch': 1.5183303886925796}
{'eval_valid_loss': 0.08742367476224899, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.809, 'eval_valid_steps_per_second': 17.943, 'epoch': 1.5183303886925796}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0981, 'grad_norm': 0.17182403974485327, 'learning_rate': 9.75627502916995e-05, 'epoch': 1.5217811395759717}
{'loss': 0.0975, 'grad_norm': 0.13035116096039864, 'learning_rate': 9.755157268276703e-05, 'epoch': 1.5252318904593638}
{'eval_valid_loss': 0.08647104352712631, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.696, 'eval_valid_steps_per_second': 17.981, 'epoch': 1.5252318904593638}
{'loss': 0.0974, 'grad_norm': 0.15817484968142814, 'learning_rate': 9.754037014457764e-05, 'epoch': 1.528682641342756}
{'loss': 0.0985, 'grad_norm': 0.12555477554565203, 'learning_rate': 9.752914268300435e-05, 'epoch': 1.5321333922261484}
{'eval_valid_loss': 0.08609168976545334, 'eval_valid_runtime': 0.3981, 'eval_valid_samples_per_second': 409.461, 'eval_valid_steps_per_second': 17.584, 'epoch': 1.5321333922261484}
{'loss': 0.0979, 'grad_norm': 0.15686041768421458, 'learning_rate': 9.751789030393325e-05, 'epoch': 1.5355841431095407}
{'loss': 0.0975, 'grad_norm': 0.15010506525799341, 'learning_rate': 9.750661301326345e-05, 'epoch': 1.539034893992933}
{'eval_valid_loss': 0.08580253273248672, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.619, 'eval_valid_steps_per_second': 18.063, 'epoch': 1.539034893992933}
{'loss': 0.0987, 'grad_norm': 0.12036894316333782, 'learning_rate': 9.749531081690717e-05, 'epoch': 1.5424856448763251}
{'loss': 0.0962, 'grad_norm': 0.11556755158998307, 'learning_rate': 9.748398372078968e-05, 'epoch': 1.5459363957597172}
{'eval_valid_loss': 0.08673170208930969, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.344, 'eval_valid_steps_per_second': 18.052, 'epoch': 1.5459363957597172}
{'loss': 0.0983, 'grad_norm': 0.10977118937148131, 'learning_rate': 9.747263173084928e-05, 'epoch': 1.5493871466431095}
{'loss': 0.0984, 'grad_norm': 0.11622992021680509, 'learning_rate': 9.746125485303732e-05, 'epoch': 1.5528378975265018}
{'eval_valid_loss': 0.08740266412496567, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.742, 'eval_valid_steps_per_second': 18.112, 'epoch': 1.5528378975265018}
{'loss': 0.0976, 'grad_norm': 0.12076366109449922, 'learning_rate': 9.744985309331822e-05, 'epoch': 1.5562886484098941}
{'loss': 0.0971, 'grad_norm': 0.14855457330710348, 'learning_rate': 9.743842645766946e-05, 'epoch': 1.5597393992932862}
{'eval_valid_loss': 0.0863780826330185, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.351, 'eval_valid_steps_per_second': 18.052, 'epoch': 1.5597393992932862}
{'loss': 0.097, 'grad_norm': 0.12771311815514041, 'learning_rate': 9.742697495208151e-05, 'epoch': 1.5631901501766783}
{'loss': 0.0955, 'grad_norm': 0.12745788195844404, 'learning_rate': 9.741549858255789e-05, 'epoch': 1.5666409010600706}
{'eval_valid_loss': 0.08669047057628632, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.571, 'eval_valid_steps_per_second': 17.933, 'epoch': 1.5666409010600706}
{'loss': 0.0989, 'grad_norm': 0.12368835571541642, 'learning_rate': 9.740399735511523e-05, 'epoch': 1.570091651943463}
{'loss': 0.0972, 'grad_norm': 0.22793360121871897, 'learning_rate': 9.739247127578307e-05, 'epoch': 1.5735424028268552}
{'eval_valid_loss': 0.08568866550922394, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.134, 'eval_valid_steps_per_second': 18.0, 'epoch': 1.5735424028268552}
{'loss': 0.0972, 'grad_norm': 0.21760199727546606, 'learning_rate': 9.738092035060406e-05, 'epoch': 1.5769931537102475}
{'loss': 0.0969, 'grad_norm': 0.16389047544815735, 'learning_rate': 9.736934458563385e-05, 'epoch': 1.5804439045936396}
{'eval_valid_loss': 0.08673437684774399, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.427, 'eval_valid_steps_per_second': 18.055, 'epoch': 1.5804439045936396}
{'loss': 0.0973, 'grad_norm': 0.14208553630180024, 'learning_rate': 9.735774398694116e-05, 'epoch': 1.5838946554770317}
{'loss': 0.098, 'grad_norm': 0.11296245665094179, 'learning_rate': 9.734611856060762e-05, 'epoch': 1.587345406360424}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.08602974563837051, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.546, 'eval_valid_steps_per_second': 17.974, 'epoch': 1.587345406360424}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0978, 'grad_norm': 0.15226844327021538, 'learning_rate': 9.733446831272801e-05, 'epoch': 1.5907961572438163}
{'loss': 0.0984, 'grad_norm': 0.14765274188595978, 'learning_rate': 9.732279324941001e-05, 'epoch': 1.5942469081272086}
{'eval_valid_loss': 0.08602888882160187, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.036, 'eval_valid_steps_per_second': 17.995, 'epoch': 1.5942469081272086}
{'loss': 0.0975, 'grad_norm': 0.16864234481585033, 'learning_rate': 9.731109337677437e-05, 'epoch': 1.5976976590106007}
{'loss': 0.0965, 'grad_norm': 0.1338333582771751, 'learning_rate': 9.729936870095486e-05, 'epoch': 1.601148409893993}
{'eval_valid_loss': 0.08560239523649216, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.841, 'eval_valid_steps_per_second': 18.073, 'epoch': 1.601148409893993}
{'loss': 0.0973, 'grad_norm': 0.1405604430399128, 'learning_rate': 9.728761922809819e-05, 'epoch': 1.604599160777385}
{'loss': 0.097, 'grad_norm': 0.20445939434732122, 'learning_rate': 9.727584496436412e-05, 'epoch': 1.6080499116607774}
{'eval_valid_loss': 0.08548945933580399, 'eval_valid_runtime': 0.3911, 'eval_valid_samples_per_second': 416.806, 'eval_valid_steps_per_second': 17.9, 'epoch': 1.6080499116607774}
{'loss': 0.0975, 'grad_norm': 0.1685551997218894, 'learning_rate': 9.72640459159254e-05, 'epoch': 1.6115006625441697}
{'loss': 0.0966, 'grad_norm': 0.14532089525045783, 'learning_rate': 9.725222208896775e-05, 'epoch': 1.614951413427562}
{'eval_valid_loss': 0.08570302277803421, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.958, 'eval_valid_steps_per_second': 17.992, 'epoch': 1.614951413427562}
{'loss': 0.0976, 'grad_norm': 0.12002637873779592, 'learning_rate': 9.724037348968991e-05, 'epoch': 1.618402164310954}
{'loss': 0.0956, 'grad_norm': 0.13237360052041264, 'learning_rate': 9.72285001243036e-05, 'epoch': 1.6218529151943462}
{'eval_valid_loss': 0.08578162640333176, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.169, 'eval_valid_steps_per_second': 17.958, 'epoch': 1.6218529151943462}
{'loss': 0.0957, 'grad_norm': 0.10863488259143693, 'learning_rate': 9.721660199903348e-05, 'epoch': 1.6253036660777385}
{'loss': 0.0974, 'grad_norm': 0.14285112585077325, 'learning_rate': 9.720467912011728e-05, 'epoch': 1.6287544169611308}
{'eval_valid_loss': 0.08477852493524551, 'eval_valid_runtime': 0.3862, 'eval_valid_samples_per_second': 422.11, 'eval_valid_steps_per_second': 18.127, 'epoch': 1.6287544169611308}
{'loss': 0.0961, 'grad_norm': 0.13010667081234364, 'learning_rate': 9.719273149380563e-05, 'epoch': 1.632205167844523}
{'loss': 0.0978, 'grad_norm': 0.1376731579222758, 'learning_rate': 9.718075912636218e-05, 'epoch': 1.6356559187279152}
{'eval_valid_loss': 0.08540190756320953, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.434, 'eval_valid_steps_per_second': 17.927, 'epoch': 1.6356559187279152}
{'loss': 0.0966, 'grad_norm': 0.12966840725377998, 'learning_rate': 9.716876202406348e-05, 'epoch': 1.6391066696113075}
{'loss': 0.0977, 'grad_norm': 0.15264919146377767, 'learning_rate': 9.715674019319916e-05, 'epoch': 1.6425574204946995}
{'eval_valid_loss': 0.08535050600767136, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.246, 'eval_valid_steps_per_second': 18.09, 'epoch': 1.6425574204946995}
{'loss': 0.0966, 'grad_norm': 0.15450335768573792, 'learning_rate': 9.714469364007171e-05, 'epoch': 1.6460081713780919}
{'loss': 0.0959, 'grad_norm': 0.11613896501856275, 'learning_rate': 9.713262237099664e-05, 'epoch': 1.6494589222614842}
{'eval_valid_loss': 0.08462035655975342, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.055, 'eval_valid_steps_per_second': 17.996, 'epoch': 1.6494589222614842}
{'loss': 0.0969, 'grad_norm': 0.1412835790182782, 'learning_rate': 9.712052639230239e-05, 'epoch': 1.6529096731448765}
{'loss': 0.0957, 'grad_norm': 0.15841016338227842, 'learning_rate': 9.710840571033037e-05, 'epoch': 1.6563604240282686}
{'eval_valid_loss': 0.08465024828910828, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.5, 'eval_valid_steps_per_second': 18.015, 'epoch': 1.6563604240282686}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0953, 'grad_norm': 0.15024270005015133, 'learning_rate': 9.709626033143495e-05, 'epoch': 1.6598111749116606}
{'loss': 0.0958, 'grad_norm': 0.14315823811325154, 'learning_rate': 9.708409026198341e-05, 'epoch': 1.663261925795053}
{'eval_valid_loss': 0.08483460545539856, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.261, 'eval_valid_steps_per_second': 18.005, 'epoch': 1.663261925795053}
{'loss': 0.0958, 'grad_norm': 0.1805733182796167, 'learning_rate': 9.7071895508356e-05, 'epoch': 1.6667126766784452}
{'loss': 0.0952, 'grad_norm': 0.1420280509442054, 'learning_rate': 9.705967607694593e-05, 'epoch': 1.6701634275618376}
{'eval_valid_loss': 0.08479676395654678, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.131, 'eval_valid_steps_per_second': 17.957, 'epoch': 1.6701634275618376}
{'loss': 0.0957, 'grad_norm': 0.16348299920936654, 'learning_rate': 9.70474319741593e-05, 'epoch': 1.6736141784452296}
{'loss': 0.0954, 'grad_norm': 0.12201950649129241, 'learning_rate': 9.703516320641519e-05, 'epoch': 1.677064929328622}
{'eval_valid_loss': 0.0849422737956047, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.084, 'eval_valid_steps_per_second': 17.912, 'epoch': 1.677064929328622}
{'loss': 0.0955, 'grad_norm': 0.12975192359652563, 'learning_rate': 9.702286978014558e-05, 'epoch': 1.680515680212014}
{'loss': 0.0962, 'grad_norm': 0.126881438112599, 'learning_rate': 9.701055170179538e-05, 'epoch': 1.6839664310954063}
{'eval_valid_loss': 0.08523432910442352, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.308, 'eval_valid_steps_per_second': 18.007, 'epoch': 1.6839664310954063}
{'loss': 0.0949, 'grad_norm': 0.11216309699486035, 'learning_rate': 9.699820897782244e-05, 'epoch': 1.6874171819787986}
{'loss': 0.0954, 'grad_norm': 0.13630136822475783, 'learning_rate': 9.698584161469752e-05, 'epoch': 1.690867932862191}
{'eval_valid_loss': 0.08507043123245239, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.205, 'eval_valid_steps_per_second': 17.917, 'epoch': 1.690867932862191}
{'loss': 0.0963, 'grad_norm': 0.11930667774858388, 'learning_rate': 9.69734496189043e-05, 'epoch': 1.694318683745583}
{'loss': 0.0943, 'grad_norm': 0.13010756996747175, 'learning_rate': 9.69610329969394e-05, 'epoch': 1.6977694346289751}
{'eval_valid_loss': 0.08442811667919159, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.558, 'eval_valid_steps_per_second': 18.018, 'epoch': 1.6977694346289751}
{'loss': 0.0949, 'grad_norm': 0.14050126737610497, 'learning_rate': 9.69485917553123e-05, 'epoch': 1.7012201855123674}
{'loss': 0.0953, 'grad_norm': 0.12856949589144823, 'learning_rate': 9.69361259005454e-05, 'epoch': 1.7046709363957597}
{'eval_valid_loss': 0.08498713374137878, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.367, 'eval_valid_steps_per_second': 18.01, 'epoch': 1.7046709363957597}
{'loss': 0.0943, 'grad_norm': 0.11976678436003772, 'learning_rate': 9.692363543917401e-05, 'epoch': 1.708121687279152}
{'loss': 0.0952, 'grad_norm': 0.15371182684019302, 'learning_rate': 9.691112037774638e-05, 'epoch': 1.7115724381625441}
{'eval_valid_loss': 0.08417906612157822, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.82, 'eval_valid_steps_per_second': 17.986, 'epoch': 1.7115724381625441}
{'loss': 0.0945, 'grad_norm': 0.10316225317964048, 'learning_rate': 9.689858072282361e-05, 'epoch': 1.7150231890459364}
{'loss': 0.094, 'grad_norm': 0.14632405697211318, 'learning_rate': 9.688601648097967e-05, 'epoch': 1.7184739399293285}
{'eval_valid_loss': 0.08395927399396896, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.067, 'eval_valid_steps_per_second': 17.997, 'epoch': 1.7184739399293285}
{'loss': 0.0935, 'grad_norm': 0.19184228468548717, 'learning_rate': 9.687342765880151e-05, 'epoch': 1.7219246908127208}
{'loss': 0.0956, 'grad_norm': 0.10892307313484874, 'learning_rate': 9.686081426288886e-05, 'epoch': 1.7253754416961131}
{'eval_valid_loss': 0.08373758941888809, 'eval_valid_runtime': 0.3983, 'eval_valid_samples_per_second': 409.271, 'eval_valid_steps_per_second': 17.576, 'epoch': 1.7253754416961131}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0956, 'grad_norm': 0.1595632816617231, 'learning_rate': 9.684817629985443e-05, 'epoch': 1.7288261925795054}
{'loss': 0.0943, 'grad_norm': 0.13688842638587564, 'learning_rate': 9.683551377632373e-05, 'epoch': 1.7322769434628975}
{'eval_valid_loss': 0.0836397036910057, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.278, 'eval_valid_steps_per_second': 18.006, 'epoch': 1.7322769434628975}
{'loss': 0.0941, 'grad_norm': 0.12957032242158087, 'learning_rate': 9.682282669893521e-05, 'epoch': 1.7357276943462896}
{'loss': 0.095, 'grad_norm': 0.09839218090647181, 'learning_rate': 9.681011507434014e-05, 'epoch': 1.739178445229682}
{'eval_valid_loss': 0.0834062397480011, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.348, 'eval_valid_steps_per_second': 17.966, 'epoch': 1.739178445229682}
{'loss': 0.0942, 'grad_norm': 0.09904447145059402, 'learning_rate': 9.679737890920268e-05, 'epoch': 1.7426291961130742}
{'loss': 0.0948, 'grad_norm': 0.14541411620918854, 'learning_rate': 9.678461821019986e-05, 'epoch': 1.7460799469964665}
{'eval_valid_loss': 0.08322294801473618, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.522, 'eval_valid_steps_per_second': 17.93, 'epoch': 1.7460799469964665}
{'loss': 0.0938, 'grad_norm': 0.13928526109019287, 'learning_rate': 9.677183298402159e-05, 'epoch': 1.7495306978798588}
{'loss': 0.0948, 'grad_norm': 0.11658648015415753, 'learning_rate': 9.675902323737058e-05, 'epoch': 1.752981448763251}
{'eval_valid_loss': 0.08335375785827637, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.396, 'eval_valid_steps_per_second': 18.054, 'epoch': 1.752981448763251}
{'loss': 0.0952, 'grad_norm': 0.1610565309782037, 'learning_rate': 9.674618897696245e-05, 'epoch': 1.756432199646643}
{'loss': 0.0955, 'grad_norm': 0.10607749783219464, 'learning_rate': 9.673333020952567e-05, 'epoch': 1.7598829505300353}
{'eval_valid_loss': 0.08334082365036011, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.236, 'eval_valid_steps_per_second': 17.918, 'epoch': 1.7598829505300353}
{'loss': 0.0947, 'grad_norm': 0.12099511879280121, 'learning_rate': 9.672044694180153e-05, 'epoch': 1.7633337014134276}
{'loss': 0.0943, 'grad_norm': 0.1118176808776523, 'learning_rate': 9.670753918054416e-05, 'epoch': 1.76678445229682}
{'eval_valid_loss': 0.08296030759811401, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.636, 'eval_valid_steps_per_second': 17.935, 'epoch': 1.76678445229682}
{'loss': 0.0938, 'grad_norm': 0.11638065765886518, 'learning_rate': 9.669460693252058e-05, 'epoch': 1.770235203180212}
{'loss': 0.0933, 'grad_norm': 0.13387197292051423, 'learning_rate': 9.668165020451059e-05, 'epoch': 1.773685954063604}
{'eval_valid_loss': 0.08351598680019379, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.699, 'eval_valid_steps_per_second': 17.938, 'epoch': 1.773685954063604}
{'loss': 0.0948, 'grad_norm': 0.1396536353425008, 'learning_rate': 9.666866900330686e-05, 'epoch': 1.7771367049469964}
{'loss': 0.0934, 'grad_norm': 0.13134806085190975, 'learning_rate': 9.665566333571486e-05, 'epoch': 1.7805874558303887}
{'eval_valid_loss': 0.08306671679019928, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.665, 'eval_valid_steps_per_second': 18.022, 'epoch': 1.7805874558303887}
{'loss': 0.0926, 'grad_norm': 0.17694327117490705, 'learning_rate': 9.664263320855293e-05, 'epoch': 1.784038206713781}
{'loss': 0.0933, 'grad_norm': 0.13942358056665524, 'learning_rate': 9.662957862865221e-05, 'epoch': 1.7874889575971733}
{'eval_valid_loss': 0.08317755162715912, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.812, 'eval_valid_steps_per_second': 17.986, 'epoch': 1.7874889575971733}
{'loss': 0.0931, 'grad_norm': 0.10213420009296094, 'learning_rate': 9.661649960285664e-05, 'epoch': 1.7909397084805654}
{'loss': 0.0946, 'grad_norm': 0.13352829765512714, 'learning_rate': 9.660339613802299e-05, 'epoch': 1.7943904593639575}
{'eval_valid_loss': 0.08311200141906738, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.848, 'eval_valid_steps_per_second': 17.944, 'epoch': 1.7943904593639575}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0934, 'grad_norm': 0.12507729136111287, 'learning_rate': 9.659026824102088e-05, 'epoch': 1.7978412102473498}
{'loss': 0.0932, 'grad_norm': 0.11194610985674214, 'learning_rate': 9.657711591873267e-05, 'epoch': 1.801291961130742}
{'eval_valid_loss': 0.08350503444671631, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.463, 'eval_valid_steps_per_second': 17.885, 'epoch': 1.801291961130742}
{'loss': 0.0938, 'grad_norm': 0.13338561666768448, 'learning_rate': 9.656393917805358e-05, 'epoch': 1.8047427120141344}
{'loss': 0.0936, 'grad_norm': 0.11258165592895443, 'learning_rate': 9.65507380258916e-05, 'epoch': 1.8081934628975265}
{'eval_valid_loss': 0.08293336629867554, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.915, 'eval_valid_steps_per_second': 17.99, 'epoch': 1.8081934628975265}
{'loss': 0.0935, 'grad_norm': 0.13751774617007323, 'learning_rate': 9.653751246916754e-05, 'epoch': 1.8116442137809188}
{'loss': 0.0947, 'grad_norm': 0.13217356123204912, 'learning_rate': 9.652426251481498e-05, 'epoch': 1.8150949646643109}
{'eval_valid_loss': 0.08349037915468216, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.532, 'eval_valid_steps_per_second': 17.888, 'epoch': 1.8150949646643109}
{'loss': 0.0936, 'grad_norm': 0.10538609201606029, 'learning_rate': 9.651098816978032e-05, 'epoch': 1.8185457155477032}
{'loss': 0.093, 'grad_norm': 0.13996935264939891, 'learning_rate': 9.649768944102273e-05, 'epoch': 1.8219964664310955}
{'eval_valid_loss': 0.08181292563676834, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.723, 'eval_valid_steps_per_second': 17.939, 'epoch': 1.8219964664310955}
{'loss': 0.0939, 'grad_norm': 0.10271750566767011, 'learning_rate': 9.648436633551415e-05, 'epoch': 1.8254472173144878}
{'loss': 0.0925, 'grad_norm': 0.11892812585556581, 'learning_rate': 9.647101886023933e-05, 'epoch': 1.8288979681978799}
{'eval_valid_loss': 0.08212292194366455, 'eval_valid_runtime': 0.3911, 'eval_valid_samples_per_second': 416.747, 'eval_valid_steps_per_second': 17.897, 'epoch': 1.8288979681978799}
{'loss': 0.091, 'grad_norm': 0.18243855090903902, 'learning_rate': 9.645764702219578e-05, 'epoch': 1.832348719081272}
{'loss': 0.0933, 'grad_norm': 0.12864711182524452, 'learning_rate': 9.644425082839378e-05, 'epoch': 1.8357994699646643}
{'eval_valid_loss': 0.0821724385023117, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.697, 'eval_valid_steps_per_second': 17.981, 'epoch': 1.8357994699646643}
{'loss': 0.0934, 'grad_norm': 0.13613939400101369, 'learning_rate': 9.643083028585638e-05, 'epoch': 1.8392502208480566}
{'loss': 0.0931, 'grad_norm': 0.10048183443485768, 'learning_rate': 9.64173854016194e-05, 'epoch': 1.8427009717314489}
{'eval_valid_loss': 0.0826864093542099, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.265, 'eval_valid_steps_per_second': 18.005, 'epoch': 1.8427009717314489}
{'loss': 0.093, 'grad_norm': 0.12681957404941785, 'learning_rate': 9.640391618273141e-05, 'epoch': 1.846151722614841}
{'loss': 0.0934, 'grad_norm': 0.12765296624418238, 'learning_rate': 9.639042263625376e-05, 'epoch': 1.8496024734982333}
{'eval_valid_loss': 0.08175505697727203, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.088, 'eval_valid_steps_per_second': 17.955, 'epoch': 1.8496024734982333}
{'loss': 0.0945, 'grad_norm': 0.12211925225913403, 'learning_rate': 9.637690476926052e-05, 'epoch': 1.8530532243816253}
{'loss': 0.0927, 'grad_norm': 0.13435299327312375, 'learning_rate': 9.636336258883855e-05, 'epoch': 1.8565039752650176}
{'eval_valid_loss': 0.08212175965309143, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.616, 'eval_valid_steps_per_second': 17.891, 'epoch': 1.8565039752650176}
{'loss': 0.0921, 'grad_norm': 0.09590190553157536, 'learning_rate': 9.634979610208743e-05, 'epoch': 1.85995472614841}
{'loss': 0.0942, 'grad_norm': 0.17261154795089592, 'learning_rate': 9.633620531611947e-05, 'epoch': 1.8634054770318023}
{'eval_valid_loss': 0.08233774453401566, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.016, 'eval_valid_steps_per_second': 17.995, 'epoch': 1.8634054770318023}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.094, 'grad_norm': 0.10465153839588111, 'learning_rate': 9.632259023805978e-05, 'epoch': 1.8668562279151943}
{'loss': 0.0915, 'grad_norm': 0.11673022411905232, 'learning_rate': 9.630895087504613e-05, 'epoch': 1.8703069787985864}
{'eval_valid_loss': 0.08187685906887054, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.482, 'eval_valid_steps_per_second': 17.929, 'epoch': 1.8703069787985864}
{'loss': 0.0927, 'grad_norm': 0.16663825200350318, 'learning_rate': 9.629528723422905e-05, 'epoch': 1.8737577296819787}
{'loss': 0.0938, 'grad_norm': 0.11221633012562247, 'learning_rate': 9.628159932277181e-05, 'epoch': 1.877208480565371}
{'eval_valid_loss': 0.08211115002632141, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.16, 'eval_valid_steps_per_second': 17.915, 'epoch': 1.877208480565371}
{'loss': 0.0923, 'grad_norm': 0.11981784214392645, 'learning_rate': 9.626788714785043e-05, 'epoch': 1.8806592314487633}
{'loss': 0.0917, 'grad_norm': 0.0859081419625972, 'learning_rate': 9.625415071665357e-05, 'epoch': 1.8841099823321554}
{'eval_valid_loss': 0.08211760967969894, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.647, 'eval_valid_steps_per_second': 17.893, 'epoch': 1.8841099823321554}
{'loss': 0.0932, 'grad_norm': 0.08967312768063239, 'learning_rate': 9.624039003638268e-05, 'epoch': 1.8875607332155477}
{'loss': 0.0939, 'grad_norm': 0.13970061667210454, 'learning_rate': 9.62266051142519e-05, 'epoch': 1.8910114840989398}
{'eval_valid_loss': 0.08204711973667145, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.808, 'eval_valid_steps_per_second': 17.986, 'epoch': 1.8910114840989398}
{'loss': 0.0927, 'grad_norm': 0.11365344187574362, 'learning_rate': 9.621279595748805e-05, 'epoch': 1.8944622349823321}
{'loss': 0.093, 'grad_norm': 0.10874630993394545, 'learning_rate': 9.61989625733307e-05, 'epoch': 1.8979129858657244}
{'eval_valid_loss': 0.08206992596387863, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.808, 'eval_valid_steps_per_second': 17.986, 'epoch': 1.8979129858657244}
{'loss': 0.0934, 'grad_norm': 0.10952524234219115, 'learning_rate': 9.61851049690321e-05, 'epoch': 1.9013637367491167}
{'loss': 0.092, 'grad_norm': 0.1264978739589001, 'learning_rate': 9.61712231518572e-05, 'epoch': 1.9048144876325088}
{'eval_valid_loss': 0.0817275121808052, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.394, 'eval_valid_steps_per_second': 17.925, 'epoch': 1.9048144876325088}
{'loss': 0.0919, 'grad_norm': 0.10335979582941988, 'learning_rate': 9.615731712908364e-05, 'epoch': 1.908265238515901}
{'loss': 0.0921, 'grad_norm': 0.11758542423781365, 'learning_rate': 9.614338690800175e-05, 'epoch': 1.9117159893992932}
{'eval_valid_loss': 0.08145349472761154, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.895, 'eval_valid_steps_per_second': 17.946, 'epoch': 1.9117159893992932}
{'loss': 0.0923, 'grad_norm': 0.12042390587764135, 'learning_rate': 9.612943249591456e-05, 'epoch': 1.9151667402826855}
{'loss': 0.0922, 'grad_norm': 0.12995788386200824, 'learning_rate': 9.611545390013777e-05, 'epoch': 1.9186174911660778}
{'eval_valid_loss': 0.08132269233465195, 'eval_valid_runtime': 0.4034, 'eval_valid_samples_per_second': 404.109, 'eval_valid_steps_per_second': 17.354, 'epoch': 1.9186174911660778}
{'loss': 0.0908, 'grad_norm': 0.22054840324122277, 'learning_rate': 9.610145112799974e-05, 'epoch': 1.92206824204947}
{'loss': 0.091, 'grad_norm': 0.1917274971082162, 'learning_rate': 9.608742418684155e-05, 'epoch': 1.9255189929328622}
{'eval_valid_loss': 0.08171604573726654, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.607, 'eval_valid_steps_per_second': 18.063, 'epoch': 1.9255189929328622}
{'loss': 0.0925, 'grad_norm': 0.12131983808436861, 'learning_rate': 9.607337308401691e-05, 'epoch': 1.9289697438162543}
{'loss': 0.0918, 'grad_norm': 0.12273565801632845, 'learning_rate': 9.605929782689223e-05, 'epoch': 1.9324204946996466}
{'eval_valid_loss': 0.08154526352882385, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.01, 'eval_valid_steps_per_second': 17.994, 'epoch': 1.9324204946996466}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0909, 'grad_norm': 0.13281365283538477, 'learning_rate': 9.604519842284655e-05, 'epoch': 1.935871245583039}
{'loss': 0.0908, 'grad_norm': 0.12243524787362939, 'learning_rate': 9.603107487927158e-05, 'epoch': 1.9393219964664312}
{'eval_valid_loss': 0.08185604959726334, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.04, 'eval_valid_steps_per_second': 17.91, 'epoch': 1.9393219964664312}
{'loss': 0.0914, 'grad_norm': 0.11853981137757144, 'learning_rate': 9.601692720357172e-05, 'epoch': 1.9427727473498233}
{'loss': 0.0914, 'grad_norm': 0.1226649726552081, 'learning_rate': 9.600275540316396e-05, 'epoch': 1.9462234982332154}
{'eval_valid_loss': 0.08165061473846436, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.412, 'eval_valid_steps_per_second': 17.926, 'epoch': 1.9462234982332154}
{'loss': 0.0913, 'grad_norm': 0.10376162849885735, 'learning_rate': 9.598855948547798e-05, 'epoch': 1.9496742491166077}
{'loss': 0.0915, 'grad_norm': 0.10728057565207468, 'learning_rate': 9.59743394579561e-05, 'epoch': 1.953125}
{'eval_valid_loss': 0.08110746741294861, 'eval_valid_runtime': 0.3925, 'eval_valid_samples_per_second': 415.312, 'eval_valid_steps_per_second': 17.836, 'epoch': 1.953125}
{'loss': 0.0916, 'grad_norm': 0.13905251555696344, 'learning_rate': 9.596009532805325e-05, 'epoch': 1.9565757508833923}
{'loss': 0.0897, 'grad_norm': 0.09766081817939459, 'learning_rate': 9.594582710323705e-05, 'epoch': 1.9600265017667846}
{'eval_valid_loss': 0.08121834695339203, 'eval_valid_runtime': 0.3913, 'eval_valid_samples_per_second': 416.602, 'eval_valid_steps_per_second': 17.891, 'epoch': 1.9600265017667846}
{'loss': 0.093, 'grad_norm': 0.12985003061203046, 'learning_rate': 9.59315347909877e-05, 'epoch': 1.9634772526501767}
{'loss': 0.0921, 'grad_norm': 0.10986989198438556, 'learning_rate': 9.591721839879805e-05, 'epoch': 1.9669280035335688}
{'eval_valid_loss': 0.08129185438156128, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.877, 'eval_valid_steps_per_second': 17.903, 'epoch': 1.9669280035335688}
{'loss': 0.092, 'grad_norm': 0.1260002914184692, 'learning_rate': 9.590287793417358e-05, 'epoch': 1.970378754416961}
{'loss': 0.0909, 'grad_norm': 0.10916343685155018, 'learning_rate': 9.588851340463237e-05, 'epoch': 1.9738295053003534}
{'eval_valid_loss': 0.08077531307935715, 'eval_valid_runtime': 0.3916, 'eval_valid_samples_per_second': 416.259, 'eval_valid_steps_per_second': 17.876, 'epoch': 1.9738295053003534}
{'loss': 0.0914, 'grad_norm': 0.11311444697972166, 'learning_rate': 9.587412481770515e-05, 'epoch': 1.9772802561837457}
{'loss': 0.0912, 'grad_norm': 0.13880190959083383, 'learning_rate': 9.585971218093522e-05, 'epoch': 1.9807310070671378}
{'eval_valid_loss': 0.08090337365865707, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.101, 'eval_valid_steps_per_second': 17.955, 'epoch': 1.9807310070671378}
{'loss': 0.0914, 'grad_norm': 0.12004169475602743, 'learning_rate': 9.584527550187851e-05, 'epoch': 1.98418175795053}
{'loss': 0.0903, 'grad_norm': 0.108979427334321, 'learning_rate': 9.583081478810356e-05, 'epoch': 1.9876325088339222}
{'eval_valid_loss': 0.08085267245769501, 'eval_valid_runtime': 0.3917, 'eval_valid_samples_per_second': 416.157, 'eval_valid_steps_per_second': 17.872, 'epoch': 1.9876325088339222}
{'loss': 0.0914, 'grad_norm': 0.09677373991299891, 'learning_rate': 9.581633004719153e-05, 'epoch': 1.9910832597173145}
{'loss': 0.0914, 'grad_norm': 0.12144682177565422, 'learning_rate': 9.580182128673609e-05, 'epoch': 1.9945340106007068}
{'eval_valid_loss': 0.08201703429222107, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.388, 'eval_valid_steps_per_second': 17.968, 'epoch': 1.9945340106007068}
{'loss': 0.0903, 'grad_norm': 0.0868528937672508, 'learning_rate': 9.578728851434362e-05, 'epoch': 1.997984761484099}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0912, 'grad_norm': 0.11744199627405887, 'learning_rate': 9.577273173763301e-05, 'epoch': 2.001435512367491}
{'eval_valid_loss': 0.08053387701511383, 'eval_valid_runtime': 0.3926, 'eval_valid_samples_per_second': 415.175, 'eval_valid_steps_per_second': 17.83, 'epoch': 2.001435512367491}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0904, 'grad_norm': 0.09140513827189, 'learning_rate': 9.575815096423576e-05, 'epoch': 2.0048862632508833}
{'loss': 0.0901, 'grad_norm': 0.13903372748231949, 'learning_rate': 9.574354620179593e-05, 'epoch': 2.0083370141342756}
{'eval_valid_loss': 0.08048912137746811, 'eval_valid_runtime': 0.3921, 'eval_valid_samples_per_second': 415.671, 'eval_valid_steps_per_second': 17.851, 'epoch': 2.0083370141342756}
{'loss': 0.0907, 'grad_norm': 0.09379927941035168, 'learning_rate': 9.57289174579702e-05, 'epoch': 2.011787765017668}
{'loss': 0.0919, 'grad_norm': 0.09988642795901788, 'learning_rate': 9.571426474042777e-05, 'epoch': 2.01523851590106}
{'eval_valid_loss': 0.08081042766571045, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.065, 'eval_valid_steps_per_second': 17.911, 'epoch': 2.01523851590106}
{'loss': 0.0919, 'grad_norm': 0.10543903420912187, 'learning_rate': 9.569958805685043e-05, 'epoch': 2.0186892667844525}
{'loss': 0.091, 'grad_norm': 0.12580397428087123, 'learning_rate': 9.568488741493255e-05, 'epoch': 2.0221400176678443}
{'eval_valid_loss': 0.08024320006370544, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.039, 'eval_valid_steps_per_second': 17.953, 'epoch': 2.0221400176678443}
{'loss': 0.0909, 'grad_norm': 0.11873350970245596, 'learning_rate': 9.567016282238108e-05, 'epoch': 2.0255907685512367}
{'loss': 0.0908, 'grad_norm': 0.10195799816557298, 'learning_rate': 9.565541428691545e-05, 'epoch': 2.029041519434629}
{'eval_valid_loss': 0.08081082999706268, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.379, 'eval_valid_steps_per_second': 17.881, 'epoch': 2.029041519434629}
{'loss': 0.0899, 'grad_norm': 0.14406637844093725, 'learning_rate': 9.564064181626768e-05, 'epoch': 2.0324922703180213}
{'loss': 0.0903, 'grad_norm': 0.1017741243324877, 'learning_rate': 9.562584541818238e-05, 'epoch': 2.0359430212014136}
{'eval_valid_loss': 0.08017314970493317, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.86, 'eval_valid_steps_per_second': 17.902, 'epoch': 2.0359430212014136}
{'loss': 0.0904, 'grad_norm': 0.13533695241522442, 'learning_rate': 9.561102510041666e-05, 'epoch': 2.0393937720848054}
{'loss': 0.0909, 'grad_norm': 0.10004362917622575, 'learning_rate': 9.559618087074016e-05, 'epoch': 2.0428445229681977}
{'eval_valid_loss': 0.08023053407669067, 'eval_valid_runtime': 0.3931, 'eval_valid_samples_per_second': 414.687, 'eval_valid_steps_per_second': 17.809, 'epoch': 2.0428445229681977}
{'loss': 0.0907, 'grad_norm': 0.10616400795679162, 'learning_rate': 9.558131273693511e-05, 'epoch': 2.04629527385159}
{'loss': 0.0896, 'grad_norm': 0.14634641011417884, 'learning_rate': 9.55664207067962e-05, 'epoch': 2.0497460247349824}
{'eval_valid_loss': 0.08004400134086609, 'eval_valid_runtime': 0.3931, 'eval_valid_samples_per_second': 414.615, 'eval_valid_steps_per_second': 17.806, 'epoch': 2.0497460247349824}
{'loss': 0.0902, 'grad_norm': 0.10786530950552826, 'learning_rate': 9.55515047881307e-05, 'epoch': 2.0531967756183747}
{'loss': 0.0902, 'grad_norm': 0.11780837010823941, 'learning_rate': 9.553656498875838e-05, 'epoch': 2.056647526501767}
{'eval_valid_loss': 0.08053779602050781, 'eval_valid_runtime': 0.3934, 'eval_valid_samples_per_second': 414.299, 'eval_valid_steps_per_second': 17.792, 'epoch': 2.056647526501767}
{'loss': 0.0919, 'grad_norm': 0.1972836309405907, 'learning_rate': 9.552160131651155e-05, 'epoch': 2.060098277385159}
{'loss': 0.0905, 'grad_norm': 0.135758092351763, 'learning_rate': 9.550661377923504e-05, 'epoch': 2.063549028268551}
{'eval_valid_loss': 0.08042377978563309, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.355, 'eval_valid_steps_per_second': 17.88, 'epoch': 2.063549028268551}
{'loss': 0.0899, 'grad_norm': 0.1049907833468687, 'learning_rate': 9.549160238478613e-05, 'epoch': 2.0669997791519434}
{'loss': 0.0908, 'grad_norm': 0.12190181515878497, 'learning_rate': 9.54765671410347e-05, 'epoch': 2.0704505300353357}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.07990135997533798, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.556, 'eval_valid_steps_per_second': 17.846, 'epoch': 2.0704505300353357}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0915, 'grad_norm': 0.10166810448419682, 'learning_rate': 9.546150805586306e-05, 'epoch': 2.073901280918728}
{'loss': 0.0897, 'grad_norm': 0.2051560651884069, 'learning_rate': 9.544642513716604e-05, 'epoch': 2.0773520318021204}
{'eval_valid_loss': 0.0803958922624588, 'eval_valid_runtime': 0.3925, 'eval_valid_samples_per_second': 415.241, 'eval_valid_steps_per_second': 17.832, 'epoch': 2.0773520318021204}
{'loss': 0.0912, 'grad_norm': 0.12085008336646152, 'learning_rate': 9.543131839285097e-05, 'epoch': 2.080802782685512}
{'loss': 0.0916, 'grad_norm': 0.10713888277236244, 'learning_rate': 9.54161878308377e-05, 'epoch': 2.0842535335689045}
{'eval_valid_loss': 0.07988809049129486, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.24, 'eval_valid_steps_per_second': 17.918, 'epoch': 2.0842535335689045}
{'loss': 0.0898, 'grad_norm': 0.10517850974312883, 'learning_rate': 9.540103345905851e-05, 'epoch': 2.087704284452297}
{'loss': 0.0893, 'grad_norm': 0.09690861111830584, 'learning_rate': 9.538585528545817e-05, 'epoch': 2.091155035335689}
{'eval_valid_loss': 0.07974619418382645, 'eval_valid_runtime': 0.393, 'eval_valid_samples_per_second': 414.741, 'eval_valid_steps_per_second': 17.811, 'epoch': 2.091155035335689}
{'loss': 0.0904, 'grad_norm': 0.1094612903502563, 'learning_rate': 9.537065331799401e-05, 'epoch': 2.0946057862190814}
{'loss': 0.0896, 'grad_norm': 0.09750282683857961, 'learning_rate': 9.535542756463571e-05, 'epoch': 2.0980565371024733}
{'eval_valid_loss': 0.07945582270622253, 'eval_valid_runtime': 0.3916, 'eval_valid_samples_per_second': 416.25, 'eval_valid_steps_per_second': 17.876, 'epoch': 2.0980565371024733}
{'loss': 0.0892, 'grad_norm': 0.10423637475619629, 'learning_rate': 9.534017803336551e-05, 'epoch': 2.1015072879858656}
{'loss': 0.0909, 'grad_norm': 0.0875271611222346, 'learning_rate': 9.532490473217809e-05, 'epoch': 2.104958038869258}
{'eval_valid_loss': 0.08030394464731216, 'eval_valid_runtime': 0.3917, 'eval_valid_samples_per_second': 416.1, 'eval_valid_steps_per_second': 17.869, 'epoch': 2.104958038869258}
{'loss': 0.0899, 'grad_norm': 0.12912359899483847, 'learning_rate': 9.530960766908057e-05, 'epoch': 2.1084087897526502}
{'loss': 0.0907, 'grad_norm': 0.12261363125357917, 'learning_rate': 9.529428685209256e-05, 'epoch': 2.1118595406360425}
{'eval_valid_loss': 0.07995554804801941, 'eval_valid_runtime': 0.4006, 'eval_valid_samples_per_second': 406.926, 'eval_valid_steps_per_second': 17.475, 'epoch': 2.1118595406360425}
{'loss': 0.0901, 'grad_norm': 0.11213368078067637, 'learning_rate': 9.527894228924612e-05, 'epoch': 2.115310291519435}
{'loss': 0.0894, 'grad_norm': 0.1174700994599547, 'learning_rate': 9.526357398858572e-05, 'epoch': 2.1187610424028267}
{'eval_valid_loss': 0.0796593502163887, 'eval_valid_runtime': 0.3934, 'eval_valid_samples_per_second': 414.309, 'eval_valid_steps_per_second': 17.792, 'epoch': 2.1187610424028267}
{'loss': 0.0897, 'grad_norm': 0.10361392706024061, 'learning_rate': 9.524818195816832e-05, 'epoch': 2.122211793286219}
{'loss': 0.0901, 'grad_norm': 0.12520669009241797, 'learning_rate': 9.523276620606332e-05, 'epoch': 2.1256625441696113}
{'eval_valid_loss': 0.07954331487417221, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.398, 'eval_valid_steps_per_second': 17.882, 'epoch': 2.1256625441696113}
{'loss': 0.0902, 'grad_norm': 0.09804861197468262, 'learning_rate': 9.521732674035251e-05, 'epoch': 2.1291132950530036}
{'loss': 0.0902, 'grad_norm': 0.09222774284305689, 'learning_rate': 9.520186356913014e-05, 'epoch': 2.132564045936396}
{'eval_valid_loss': 0.07964546978473663, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 417.013, 'eval_valid_steps_per_second': 17.909, 'epoch': 2.132564045936396}
{'loss': 0.0899, 'grad_norm': 0.11985032324245724, 'learning_rate': 9.518637670050292e-05, 'epoch': 2.136014796819788}
{'loss': 0.0897, 'grad_norm': 0.11756503645043892, 'learning_rate': 9.517086614258994e-05, 'epoch': 2.13946554770318}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.07971237599849701, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.552, 'eval_valid_steps_per_second': 17.932, 'epoch': 2.13946554770318}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0893, 'grad_norm': 0.12186551832319167, 'learning_rate': 9.515533190352272e-05, 'epoch': 2.1429162985865724}
{'loss': 0.09, 'grad_norm': 0.15035303161425492, 'learning_rate': 9.513977399144519e-05, 'epoch': 2.1463670494699647}
{'eval_valid_loss': 0.0796641930937767, 'eval_valid_runtime': 0.3927, 'eval_valid_samples_per_second': 415.124, 'eval_valid_steps_per_second': 17.827, 'epoch': 2.1463670494699647}
{'loss': 0.0907, 'grad_norm': 0.11424858674858987, 'learning_rate': 9.512419241451372e-05, 'epoch': 2.149817800353357}
{'loss': 0.0888, 'grad_norm': 0.1270793676550233, 'learning_rate': 9.510858718089703e-05, 'epoch': 2.1532685512367493}
{'eval_valid_loss': 0.07954620569944382, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.249, 'eval_valid_steps_per_second': 17.962, 'epoch': 2.1532685512367493}
{'loss': 0.0897, 'grad_norm': 0.09994621571035144, 'learning_rate': 9.50929582987763e-05, 'epoch': 2.156719302120141}
{'loss': 0.0892, 'grad_norm': 0.13557090219581677, 'learning_rate': 9.507730577634509e-05, 'epoch': 2.1601700530035335}
{'eval_valid_loss': 0.07942433655261993, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.011, 'eval_valid_steps_per_second': 17.994, 'epoch': 2.1601700530035335}
{'loss': 0.0894, 'grad_norm': 0.12037647503347054, 'learning_rate': 9.506162962180934e-05, 'epoch': 2.163620803886926}
{'loss': 0.0889, 'grad_norm': 0.07391903488040127, 'learning_rate': 9.504592984338738e-05, 'epoch': 2.167071554770318}
{'eval_valid_loss': 0.07962237298488617, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.983, 'eval_valid_steps_per_second': 17.95, 'epoch': 2.167071554770318}
{'loss': 0.0886, 'grad_norm': 0.08615423615621572, 'learning_rate': 9.503020644930996e-05, 'epoch': 2.1705223056537104}
{'loss': 0.09, 'grad_norm': 0.15414742142510324, 'learning_rate': 9.501445944782014e-05, 'epoch': 2.1739730565371023}
{'eval_valid_loss': 0.079620361328125, 'eval_valid_runtime': 0.3911, 'eval_valid_samples_per_second': 416.751, 'eval_valid_steps_per_second': 17.897, 'epoch': 2.1739730565371023}
{'loss': 0.0897, 'grad_norm': 0.13479511179302106, 'learning_rate': 9.499868884717345e-05, 'epoch': 2.1774238074204946}
{'loss': 0.0902, 'grad_norm': 0.1134648671248967, 'learning_rate': 9.498289465563769e-05, 'epoch': 2.180874558303887}
{'eval_valid_loss': 0.0790877565741539, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.223, 'eval_valid_steps_per_second': 17.918, 'epoch': 2.180874558303887}
{'loss': 0.0876, 'grad_norm': 0.1195730525389116, 'learning_rate': 9.496707688149312e-05, 'epoch': 2.184325309187279}
{'loss': 0.0892, 'grad_norm': 0.11815960459807352, 'learning_rate': 9.49512355330323e-05, 'epoch': 2.1877760600706715}
{'eval_valid_loss': 0.07931135594844818, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.627, 'eval_valid_steps_per_second': 17.978, 'epoch': 2.1877760600706715}
{'loss': 0.0904, 'grad_norm': 0.06973021268702595, 'learning_rate': 9.493537061856019e-05, 'epoch': 2.191226810954064}
{'loss': 0.0902, 'grad_norm': 0.15847455421227308, 'learning_rate': 9.491948214639406e-05, 'epoch': 2.1946775618374557}
{'eval_valid_loss': 0.07875032722949982, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.364, 'eval_valid_steps_per_second': 18.095, 'epoch': 2.1946775618374557}
{'loss': 0.0893, 'grad_norm': 0.07994003019295655, 'learning_rate': 9.490357012486359e-05, 'epoch': 2.198128312720848}
{'loss': 0.0891, 'grad_norm': 0.08952262877992087, 'learning_rate': 9.488763456231074e-05, 'epoch': 2.2015790636042403}
{'eval_valid_loss': 0.07914099842309952, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.333, 'eval_valid_steps_per_second': 18.094, 'epoch': 2.2015790636042403}
{'loss': 0.0896, 'grad_norm': 0.08792986981871224, 'learning_rate': 9.487167546708989e-05, 'epoch': 2.2050298144876326}
{'loss': 0.0894, 'grad_norm': 0.11912294013136657, 'learning_rate': 9.485569284756766e-05, 'epoch': 2.208480565371025}
{'eval_valid_loss': 0.07893712818622589, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.827, 'eval_valid_steps_per_second': 18.115, 'epoch': 2.208480565371025}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0902, 'grad_norm': 0.10965179877364298, 'learning_rate': 9.483968671212307e-05, 'epoch': 2.211931316254417}
{'loss': 0.0892, 'grad_norm': 0.0919870350822835, 'learning_rate': 9.482365706914746e-05, 'epoch': 2.215382067137809}
{'eval_valid_loss': 0.07867946475744247, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.516, 'eval_valid_steps_per_second': 18.016, 'epoch': 2.215382067137809}
{'loss': 0.0889, 'grad_norm': 0.09199851865106935, 'learning_rate': 9.48076039270445e-05, 'epoch': 2.2188328180212014}
{'loss': 0.0894, 'grad_norm': 0.09863233912880773, 'learning_rate': 9.479152729423014e-05, 'epoch': 2.2222835689045937}
{'eval_valid_loss': 0.07905836403369904, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.172, 'eval_valid_steps_per_second': 18.087, 'epoch': 2.2222835689045937}
{'loss': 0.0897, 'grad_norm': 0.12436160989057377, 'learning_rate': 9.477542717913268e-05, 'epoch': 2.225734319787986}
{'loss': 0.0879, 'grad_norm': 0.09998852722236366, 'learning_rate': 9.475930359019274e-05, 'epoch': 2.2291850706713783}
{'eval_valid_loss': 0.07925206422805786, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.081, 'eval_valid_steps_per_second': 18.083, 'epoch': 2.2291850706713783}
{'loss': 0.0889, 'grad_norm': 0.10934439242431404, 'learning_rate': 9.474315653586318e-05, 'epoch': 2.23263582155477}
{'loss': 0.0895, 'grad_norm': 0.10338935835090565, 'learning_rate': 9.472698602460928e-05, 'epoch': 2.2360865724381624}
{'eval_valid_loss': 0.07939084619283676, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.672, 'eval_valid_steps_per_second': 18.023, 'epoch': 2.2360865724381624}
{'loss': 0.0888, 'grad_norm': 0.09657259724981064, 'learning_rate': 9.47107920649085e-05, 'epoch': 2.2395373233215548}
{'loss': 0.0891, 'grad_norm': 0.116241120718903, 'learning_rate': 9.469457466525065e-05, 'epoch': 2.242988074204947}
{'eval_valid_loss': 0.07867179065942764, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.134, 'eval_valid_steps_per_second': 18.085, 'epoch': 2.242988074204947}
{'loss': 0.0896, 'grad_norm': 0.12118337639781261, 'learning_rate': 9.467833383413783e-05, 'epoch': 2.2464388250883394}
{'loss': 0.0883, 'grad_norm': 0.12742123727402066, 'learning_rate': 9.466206958008439e-05, 'epoch': 2.2498895759717312}
{'eval_valid_loss': 0.07875095307826996, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.126, 'eval_valid_steps_per_second': 18.128, 'epoch': 2.2498895759717312}
{'loss': 0.0888, 'grad_norm': 0.13434795709349365, 'learning_rate': 9.464578191161701e-05, 'epoch': 2.2533403268551235}
{'loss': 0.088, 'grad_norm': 0.08657049935209085, 'learning_rate': 9.462947083727461e-05, 'epoch': 2.256791077738516}
{'eval_valid_loss': 0.07838032394647598, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.286, 'eval_valid_steps_per_second': 18.092, 'epoch': 2.256791077738516}
{'loss': 0.0879, 'grad_norm': 0.09341002822016532, 'learning_rate': 9.461313636560836e-05, 'epoch': 2.260241828621908}
{'loss': 0.0889, 'grad_norm': 0.10041242062008202, 'learning_rate': 9.459677850518179e-05, 'epoch': 2.2636925795053005}
{'eval_valid_loss': 0.07853825390338898, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.472, 'eval_valid_steps_per_second': 18.057, 'epoch': 2.2636925795053005}
{'loss': 0.0892, 'grad_norm': 0.10945343081702928, 'learning_rate': 9.458039726457056e-05, 'epoch': 2.2671433303886928}
{'loss': 0.0881, 'grad_norm': 0.07098710381039394, 'learning_rate': 9.456399265236269e-05, 'epoch': 2.2705940812720846}
{'eval_valid_loss': 0.0789405032992363, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.144, 'eval_valid_steps_per_second': 18.129, 'epoch': 2.2705940812720846}
{'loss': 0.089, 'grad_norm': 0.100412423391705, 'learning_rate': 9.45475646771584e-05, 'epoch': 2.274044832155477}
{'loss': 0.089, 'grad_norm': 0.09783371028495898, 'learning_rate': 9.453111334757019e-05, 'epoch': 2.2774955830388692}
{'eval_valid_loss': 0.07890027016401291, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.098, 'eval_valid_steps_per_second': 17.998, 'epoch': 2.2774955830388692}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0893, 'grad_norm': 0.23750909999176392, 'learning_rate': 9.451463867222278e-05, 'epoch': 2.2809463339222615}
{'loss': 0.0894, 'grad_norm': 0.10112812426316606, 'learning_rate': 9.449814065975315e-05, 'epoch': 2.284397084805654}
{'eval_valid_loss': 0.07827772945165634, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.219, 'eval_valid_steps_per_second': 18.046, 'epoch': 2.284397084805654}
{'loss': 0.0895, 'grad_norm': 0.12344323271376251, 'learning_rate': 9.44816193188105e-05, 'epoch': 2.287847835689046}
{'loss': 0.0893, 'grad_norm': 0.11930709580231733, 'learning_rate': 9.446507465805625e-05, 'epoch': 2.291298586572438}
{'eval_valid_loss': 0.07880791276693344, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.284, 'eval_valid_steps_per_second': 18.092, 'epoch': 2.291298586572438}
{'loss': 0.0883, 'grad_norm': 0.08374182441806835, 'learning_rate': 9.444850668616406e-05, 'epoch': 2.2947493374558303}
{'loss': 0.0887, 'grad_norm': 0.1011294971099867, 'learning_rate': 9.443191541181981e-05, 'epoch': 2.2982000883392226}
{'eval_valid_loss': 0.0788826122879982, 'eval_valid_runtime': 0.3858, 'eval_valid_samples_per_second': 422.542, 'eval_valid_steps_per_second': 18.146, 'epoch': 2.2982000883392226}
{'loss': 0.0878, 'grad_norm': 0.19475488494113677, 'learning_rate': 9.441530084372161e-05, 'epoch': 2.301650839222615}
{'loss': 0.0881, 'grad_norm': 0.14234764672945271, 'learning_rate': 9.439866299057975e-05, 'epoch': 2.3051015901060072}
{'eval_valid_loss': 0.07857280224561691, 'eval_valid_runtime': 0.3978, 'eval_valid_samples_per_second': 409.768, 'eval_valid_steps_per_second': 17.597, 'epoch': 2.3051015901060072}
{'loss': 0.0887, 'grad_norm': 0.09849490629820476, 'learning_rate': 9.438200186111678e-05, 'epoch': 2.308552340989399}
{'loss': 0.088, 'grad_norm': 0.10584706165575973, 'learning_rate': 9.436531746406736e-05, 'epoch': 2.3120030918727914}
{'eval_valid_loss': 0.07809308916330338, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.486, 'eval_valid_steps_per_second': 18.101, 'epoch': 2.3120030918727914}
{'loss': 0.0873, 'grad_norm': 0.08480236040726503, 'learning_rate': 9.434860980817845e-05, 'epoch': 2.3154538427561837}
{'loss': 0.0892, 'grad_norm': 0.09616121234479162, 'learning_rate': 9.433187890220917e-05, 'epoch': 2.318904593639576}
{'eval_valid_loss': 0.0782993882894516, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.51, 'eval_valid_steps_per_second': 18.059, 'epoch': 2.318904593639576}
{'loss': 0.0883, 'grad_norm': 0.09933969251561336, 'learning_rate': 9.431512475493076e-05, 'epoch': 2.3223553445229683}
{'loss': 0.0877, 'grad_norm': 0.0827756346208984, 'learning_rate': 9.429834737512675e-05, 'epoch': 2.32580609540636}
{'eval_valid_loss': 0.0778539702296257, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.494, 'eval_valid_steps_per_second': 18.101, 'epoch': 2.32580609540636}
{'loss': 0.0879, 'grad_norm': 0.10067689143988827, 'learning_rate': 9.42815467715928e-05, 'epoch': 2.3292568462897525}
{'loss': 0.087, 'grad_norm': 0.08653832455134942, 'learning_rate': 9.426472295313673e-05, 'epoch': 2.332707597173145}
{'eval_valid_loss': 0.07809324562549591, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.102, 'eval_valid_steps_per_second': 17.998, 'epoch': 2.332707597173145}
{'loss': 0.0889, 'grad_norm': 0.10285161742528065, 'learning_rate': 9.424787592857858e-05, 'epoch': 2.336158348056537}
{'loss': 0.0886, 'grad_norm': 0.08183651006444681, 'learning_rate': 9.423100570675047e-05, 'epoch': 2.3396090989399294}
{'eval_valid_loss': 0.07821538299322128, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.585, 'eval_valid_steps_per_second': 18.062, 'epoch': 2.3396090989399294}
{'loss': 0.0888, 'grad_norm': 0.12781981048082075, 'learning_rate': 9.42141122964968e-05, 'epoch': 2.3430598498233217}
{'loss': 0.0889, 'grad_norm': 0.09129477456663487, 'learning_rate': 9.419719570667403e-05, 'epoch': 2.346510600706714}
{'eval_valid_loss': 0.07768175005912781, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.874, 'eval_valid_steps_per_second': 18.074, 'epoch': 2.346510600706714}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0884, 'grad_norm': 0.07684547775813663, 'learning_rate': 9.418025594615081e-05, 'epoch': 2.349961351590106}
{'loss': 0.0887, 'grad_norm': 0.1011258200330126, 'learning_rate': 9.416329302380792e-05, 'epoch': 2.353412102473498}
{'eval_valid_loss': 0.07859021425247192, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.07, 'eval_valid_steps_per_second': 17.997, 'epoch': 2.353412102473498}
{'loss': 0.0873, 'grad_norm': 0.1128657979176849, 'learning_rate': 9.414630694853833e-05, 'epoch': 2.3568628533568905}
{'loss': 0.0873, 'grad_norm': 0.0954190414303464, 'learning_rate': 9.412929772924705e-05, 'epoch': 2.360313604240283}
{'eval_valid_loss': 0.07786238938570023, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.731, 'eval_valid_steps_per_second': 18.111, 'epoch': 2.360313604240283}
{'loss': 0.0889, 'grad_norm': 0.11048393352970468, 'learning_rate': 9.411226537485136e-05, 'epoch': 2.363764355123675}
{'loss': 0.0874, 'grad_norm': 0.11278312213604376, 'learning_rate': 9.409520989428053e-05, 'epoch': 2.367215106007067}
{'eval_valid_loss': 0.0775274783372879, 'eval_valid_runtime': 0.3854, 'eval_valid_samples_per_second': 422.941, 'eval_valid_steps_per_second': 18.163, 'epoch': 2.367215106007067}
{'loss': 0.088, 'grad_norm': 0.13358769732056144, 'learning_rate': 9.407813129647608e-05, 'epoch': 2.3706658568904593}
{'loss': 0.0872, 'grad_norm': 0.07293941027994937, 'learning_rate': 9.406102959039154e-05, 'epoch': 2.3741166077738516}
{'eval_valid_loss': 0.07808004319667816, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.53, 'eval_valid_steps_per_second': 18.103, 'epoch': 2.3741166077738516}
{'loss': 0.0877, 'grad_norm': 0.09671410967719936, 'learning_rate': 9.404390478499264e-05, 'epoch': 2.377567358657244}
{'loss': 0.0882, 'grad_norm': 0.11688432501905593, 'learning_rate': 9.402675688925715e-05, 'epoch': 2.381018109540636}
{'eval_valid_loss': 0.07795602083206177, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.965, 'eval_valid_steps_per_second': 17.992, 'epoch': 2.381018109540636}
{'loss': 0.0883, 'grad_norm': 0.0865641994612055, 'learning_rate': 9.400958591217502e-05, 'epoch': 2.384468860424028}
{'loss': 0.0877, 'grad_norm': 0.08044496719931397, 'learning_rate': 9.399239186274821e-05, 'epoch': 2.3879196113074204}
{'eval_valid_loss': 0.07841358333826065, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.524, 'eval_valid_steps_per_second': 18.102, 'epoch': 2.3879196113074204}
{'loss': 0.0868, 'grad_norm': 0.08134622956623895, 'learning_rate': 9.397517474999085e-05, 'epoch': 2.3913703621908127}
{'loss': 0.0875, 'grad_norm': 0.1115985981190686, 'learning_rate': 9.395793458292913e-05, 'epoch': 2.394821113074205}
{'eval_valid_loss': 0.07803381234407425, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.183, 'eval_valid_steps_per_second': 18.045, 'epoch': 2.394821113074205}
{'loss': 0.0878, 'grad_norm': 0.10678605804691133, 'learning_rate': 9.394067137060136e-05, 'epoch': 2.3982718639575973}
{'loss': 0.0872, 'grad_norm': 0.10975904394085245, 'learning_rate': 9.392338512205788e-05, 'epoch': 2.4017226148409896}
{'eval_valid_loss': 0.07811698317527771, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.874, 'eval_valid_steps_per_second': 18.117, 'epoch': 2.4017226148409896}
{'loss': 0.0882, 'grad_norm': 0.13139115152050154, 'learning_rate': 9.390607584636113e-05, 'epoch': 2.4051733657243815}
{'loss': 0.088, 'grad_norm': 0.13089191039311765, 'learning_rate': 9.388874355258562e-05, 'epoch': 2.4086241166077738}
{'eval_valid_loss': 0.07737796008586884, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.382, 'eval_valid_steps_per_second': 18.053, 'epoch': 2.4086241166077738}
{'loss': 0.0879, 'grad_norm': 0.07139595423934632, 'learning_rate': 9.387138824981794e-05, 'epoch': 2.412074867491166}
{'loss': 0.0875, 'grad_norm': 0.09815457754721353, 'learning_rate': 9.385400994715675e-05, 'epoch': 2.4155256183745584}
{'eval_valid_loss': 0.07773365825414658, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.412, 'eval_valid_steps_per_second': 18.054, 'epoch': 2.4155256183745584}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0867, 'grad_norm': 0.11183694720822163, 'learning_rate': 9.38366086537127e-05, 'epoch': 2.4189763692579507}
{'loss': 0.0878, 'grad_norm': 0.09158542583841572, 'learning_rate': 9.381918437860859e-05, 'epoch': 2.422427120141343}
{'eval_valid_loss': 0.0773201584815979, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.142, 'eval_valid_steps_per_second': 18.086, 'epoch': 2.422427120141343}
{'loss': 0.0863, 'grad_norm': 0.10352757258169623, 'learning_rate': 9.380173713097921e-05, 'epoch': 2.425877871024735}
{'loss': 0.0868, 'grad_norm': 0.07457055214705197, 'learning_rate': 9.378426691997142e-05, 'epoch': 2.429328621908127}
{'eval_valid_loss': 0.07751549035310745, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.73, 'eval_valid_steps_per_second': 17.982, 'epoch': 2.429328621908127}
{'loss': 0.0883, 'grad_norm': 0.12791786336559371, 'learning_rate': 9.376677375474407e-05, 'epoch': 2.4327793727915195}
{'loss': 0.0874, 'grad_norm': 0.09192565797125003, 'learning_rate': 9.374925764446811e-05, 'epoch': 2.4362301236749118}
{'eval_valid_loss': 0.07772638648748398, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.513, 'eval_valid_steps_per_second': 18.059, 'epoch': 2.4362301236749118}
{'loss': 0.0885, 'grad_norm': 0.11755287077515375, 'learning_rate': 9.373171859832647e-05, 'epoch': 2.439680874558304}
{'loss': 0.0867, 'grad_norm': 0.10963866692402371, 'learning_rate': 9.371415662551414e-05, 'epoch': 2.443131625441696}
{'eval_valid_loss': 0.07769954204559326, 'eval_valid_runtime': 0.3849, 'eval_valid_samples_per_second': 423.454, 'eval_valid_steps_per_second': 18.185, 'epoch': 2.443131625441696}
{'loss': 0.0868, 'grad_norm': 0.1394663843296761, 'learning_rate': 9.36965717352381e-05, 'epoch': 2.4465823763250882}
{'loss': 0.0875, 'grad_norm': 0.09746672396274149, 'learning_rate': 9.367896393671735e-05, 'epoch': 2.4500331272084805}
{'eval_valid_loss': 0.0771389827132225, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.791, 'eval_valid_steps_per_second': 18.028, 'epoch': 2.4500331272084805}
{'loss': 0.0864, 'grad_norm': 0.12296629346895951, 'learning_rate': 9.366133323918291e-05, 'epoch': 2.453483878091873}
{'loss': 0.088, 'grad_norm': 0.08860340562483242, 'learning_rate': 9.364367965187781e-05, 'epoch': 2.456934628975265}
{'eval_valid_loss': 0.07727542519569397, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.216, 'eval_valid_steps_per_second': 18.046, 'epoch': 2.456934628975265}
{'loss': 0.0885, 'grad_norm': 0.10115899783252326, 'learning_rate': 9.362600318405706e-05, 'epoch': 2.460385379858657}
{'loss': 0.0875, 'grad_norm': 0.10678377370035379, 'learning_rate': 9.360830384498769e-05, 'epoch': 2.4638361307420493}
{'eval_valid_loss': 0.07735763490200043, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.277, 'eval_valid_steps_per_second': 18.049, 'epoch': 2.4638361307420493}
{'loss': 0.0869, 'grad_norm': 0.10322196580795549, 'learning_rate': 9.359058164394869e-05, 'epoch': 2.4672868816254416}
{'loss': 0.0867, 'grad_norm': 0.09283388030136262, 'learning_rate': 9.357283659023107e-05, 'epoch': 2.470737632508834}
{'eval_valid_loss': 0.07751009613275528, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.675, 'eval_valid_steps_per_second': 18.109, 'epoch': 2.470737632508834}
{'loss': 0.0869, 'grad_norm': 0.09316007795440764, 'learning_rate': 9.355506869313779e-05, 'epoch': 2.4741883833922262}
{'loss': 0.0868, 'grad_norm': 0.10399615706016475, 'learning_rate': 9.35372779619838e-05, 'epoch': 2.4776391342756185}
{'eval_valid_loss': 0.07754743844270706, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.994, 'eval_valid_steps_per_second': 18.037, 'epoch': 2.4776391342756185}
{'loss': 0.0864, 'grad_norm': 0.10858766291007509, 'learning_rate': 9.351946440609604e-05, 'epoch': 2.4810898851590104}
{'loss': 0.0875, 'grad_norm': 0.10668767971863458, 'learning_rate': 9.350162803481338e-05, 'epoch': 2.4845406360424027}
{'eval_valid_loss': 0.07764627784490585, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.726, 'eval_valid_steps_per_second': 18.111, 'epoch': 2.4845406360424027}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0863, 'grad_norm': 0.08438059468659165, 'learning_rate': 9.348376885748664e-05, 'epoch': 2.487991386925795}
{'loss': 0.0868, 'grad_norm': 0.083146429616347, 'learning_rate': 9.346588688347866e-05, 'epoch': 2.4914421378091873}
{'eval_valid_loss': 0.07727338373661041, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.844, 'eval_valid_steps_per_second': 17.987, 'epoch': 2.4914421378091873}
{'loss': 0.0866, 'grad_norm': 0.09333710551542107, 'learning_rate': 9.34479821221642e-05, 'epoch': 2.4948928886925796}
{'loss': 0.0873, 'grad_norm': 0.09580382401879446, 'learning_rate': 9.343005458292991e-05, 'epoch': 2.498343639575972}
{'eval_valid_loss': 0.07719951122999191, 'eval_valid_runtime': 0.3966, 'eval_valid_samples_per_second': 410.96, 'eval_valid_steps_per_second': 17.649, 'epoch': 2.498343639575972}
{'loss': 0.087, 'grad_norm': 0.1493849314692503, 'learning_rate': 9.34121042751745e-05, 'epoch': 2.501794390459364}
{'loss': 0.0895, 'grad_norm': 0.08973425264965659, 'learning_rate': 9.339413120830851e-05, 'epoch': 2.505245141342756}
{'eval_valid_loss': 0.07698144763708115, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.746, 'eval_valid_steps_per_second': 18.112, 'epoch': 2.505245141342756}
{'loss': 0.0875, 'grad_norm': 0.0925356860285685, 'learning_rate': 9.337613539175444e-05, 'epoch': 2.5086958922261484}
{'loss': 0.0862, 'grad_norm': 0.0906720620525884, 'learning_rate': 9.335811683494676e-05, 'epoch': 2.5121466431095407}
{'eval_valid_loss': 0.07684275507926941, 'eval_valid_runtime': 0.388, 'eval_valid_samples_per_second': 420.117, 'eval_valid_steps_per_second': 18.042, 'epoch': 2.5121466431095407}
{'loss': 0.0884, 'grad_norm': 0.07475368668015397, 'learning_rate': 9.334007554733182e-05, 'epoch': 2.515597393992933}
{'loss': 0.0861, 'grad_norm': 0.12470577057038416, 'learning_rate': 9.332201153836788e-05, 'epoch': 2.519048144876325}
{'eval_valid_loss': 0.07721436023712158, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.376, 'eval_valid_steps_per_second': 18.01, 'epoch': 2.519048144876325}
{'loss': 0.0867, 'grad_norm': 0.12554029054192492, 'learning_rate': 9.330392481752514e-05, 'epoch': 2.522498895759717}
{'loss': 0.0872, 'grad_norm': 0.10233408019745592, 'learning_rate': 9.328581539428569e-05, 'epoch': 2.5259496466431095}
{'eval_valid_loss': 0.07702786475419998, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.494, 'eval_valid_steps_per_second': 18.015, 'epoch': 2.5259496466431095}
{'loss': 0.0863, 'grad_norm': 0.07160300803660946, 'learning_rate': 9.326768327814352e-05, 'epoch': 2.529400397526502}
{'loss': 0.0858, 'grad_norm': 0.08472421314173191, 'learning_rate': 9.324952847860455e-05, 'epoch': 2.532851148409894}
{'eval_valid_loss': 0.07697427272796631, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.736, 'eval_valid_steps_per_second': 18.111, 'epoch': 2.532851148409894}
{'loss': 0.0855, 'grad_norm': 0.07691054671206034, 'learning_rate': 9.323135100518653e-05, 'epoch': 2.536301899293286}
{'loss': 0.0877, 'grad_norm': 0.096327951622356, 'learning_rate': 9.321315086741916e-05, 'epoch': 2.5397526501766783}
{'eval_valid_loss': 0.07695818692445755, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.438, 'eval_valid_steps_per_second': 17.97, 'epoch': 2.5397526501766783}
{'loss': 0.0863, 'grad_norm': 0.08672675362745888, 'learning_rate': 9.319492807484399e-05, 'epoch': 2.5432034010600706}
{'loss': 0.0874, 'grad_norm': 0.09216152939445173, 'learning_rate': 9.317668263701445e-05, 'epoch': 2.546654151943463}
{'eval_valid_loss': 0.07707482576370239, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.34, 'eval_valid_steps_per_second': 17.966, 'epoch': 2.546654151943463}
{'loss': 0.0869, 'grad_norm': 0.09053332278895611, 'learning_rate': 9.315841456349581e-05, 'epoch': 2.550104902826855}
{'loss': 0.087, 'grad_norm': 0.10050988018131966, 'learning_rate': 9.314012386386528e-05, 'epoch': 2.5535556537102475}
{'eval_valid_loss': 0.07684788107872009, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.586, 'eval_valid_steps_per_second': 18.062, 'epoch': 2.5535556537102475}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0869, 'grad_norm': 0.10087646734256063, 'learning_rate': 9.312181054771188e-05, 'epoch': 2.55700640459364}
{'loss': 0.0876, 'grad_norm': 0.20036484014073105, 'learning_rate': 9.310347462463651e-05, 'epoch': 2.5604571554770317}
{'eval_valid_loss': 0.07746999710798264, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.218, 'eval_valid_steps_per_second': 18.089, 'epoch': 2.5604571554770317}
{'loss': 0.0876, 'grad_norm': 0.1794010354102698, 'learning_rate': 9.308511610425188e-05, 'epoch': 2.563907906360424}
{'loss': 0.0862, 'grad_norm': 0.10359964132638387, 'learning_rate': 9.306673499618262e-05, 'epoch': 2.5673586572438163}
{'eval_valid_loss': 0.07754717022180557, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.209, 'eval_valid_steps_per_second': 18.046, 'epoch': 2.5673586572438163}
{'loss': 0.0864, 'grad_norm': 0.0724831078405096, 'learning_rate': 9.304833131006512e-05, 'epoch': 2.5708094081272086}
{'loss': 0.0873, 'grad_norm': 0.09105350048239888, 'learning_rate': 9.302990505554767e-05, 'epoch': 2.574260159010601}
{'eval_valid_loss': 0.0775027796626091, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.962, 'eval_valid_steps_per_second': 18.035, 'epoch': 2.574260159010601}
{'loss': 0.0866, 'grad_norm': 0.1139163914261725, 'learning_rate': 9.301145624229035e-05, 'epoch': 2.5777109098939928}
{'loss': 0.088, 'grad_norm': 0.08838326392953076, 'learning_rate': 9.299298487996512e-05, 'epoch': 2.581161660777385}
{'eval_valid_loss': 0.07653039693832397, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.41, 'eval_valid_steps_per_second': 18.097, 'epoch': 2.581161660777385}
{'loss': 0.0854, 'grad_norm': 0.08549772546205067, 'learning_rate': 9.297449097825569e-05, 'epoch': 2.5846124116607774}
{'loss': 0.0851, 'grad_norm': 0.07141624596927638, 'learning_rate': 9.295597454685761e-05, 'epoch': 2.5880631625441697}
{'eval_valid_loss': 0.07681562006473541, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.259, 'eval_valid_steps_per_second': 18.091, 'epoch': 2.5880631625441697}
{'loss': 0.0862, 'grad_norm': 0.08272645893588122, 'learning_rate': 9.293743559547829e-05, 'epoch': 2.591513913427562}
{'loss': 0.0864, 'grad_norm': 0.09715760509491272, 'learning_rate': 9.291887413383688e-05, 'epoch': 2.594964664310954}
{'eval_valid_loss': 0.0761510506272316, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.39, 'eval_valid_steps_per_second': 18.096, 'epoch': 2.594964664310954}
{'loss': 0.0865, 'grad_norm': 0.08754174302096777, 'learning_rate': 9.29002901716644e-05, 'epoch': 2.598415415194346}
{'loss': 0.0876, 'grad_norm': 0.08209452195071637, 'learning_rate': 9.28816837187036e-05, 'epoch': 2.6018661660777385}
{'eval_valid_loss': 0.07653160393238068, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.404, 'eval_valid_steps_per_second': 18.054, 'epoch': 2.6018661660777385}
{'loss': 0.0866, 'grad_norm': 0.10126603099080596, 'learning_rate': 9.286305478470903e-05, 'epoch': 2.6053169169611308}
{'loss': 0.0872, 'grad_norm': 0.12341849940621012, 'learning_rate': 9.284440337944708e-05, 'epoch': 2.608767667844523}
{'eval_valid_loss': 0.07669886201620102, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.965, 'eval_valid_steps_per_second': 18.121, 'epoch': 2.608767667844523}
{'loss': 0.0878, 'grad_norm': 0.11064946936621171, 'learning_rate': 9.282572951269588e-05, 'epoch': 2.612218418727915}
{'loss': 0.0866, 'grad_norm': 0.09870773940806357, 'learning_rate': 9.28070331942453e-05, 'epoch': 2.6156691696113077}
{'eval_valid_loss': 0.07657945156097412, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.127, 'eval_valid_steps_per_second': 17.999, 'epoch': 2.6156691696113077}
{'loss': 0.0869, 'grad_norm': 0.08572747000453142, 'learning_rate': 9.278831443389708e-05, 'epoch': 2.6191199204946995}
{'loss': 0.0866, 'grad_norm': 0.1236852771337471, 'learning_rate': 9.276957324146462e-05, 'epoch': 2.622570671378092}
{'eval_valid_loss': 0.07594998180866241, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.656, 'eval_valid_steps_per_second': 18.022, 'epoch': 2.622570671378092}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0872, 'grad_norm': 0.08647620890520352, 'learning_rate': 9.275080962677314e-05, 'epoch': 2.626021422261484}
{'loss': 0.0858, 'grad_norm': 0.08368494729370407, 'learning_rate': 9.273202359965961e-05, 'epoch': 2.6294721731448765}
{'eval_valid_loss': 0.07642592489719391, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.217, 'eval_valid_steps_per_second': 18.046, 'epoch': 2.6294721731448765}
{'loss': 0.0861, 'grad_norm': 0.1229590567232111, 'learning_rate': 9.271321516997273e-05, 'epoch': 2.6329229240282688}
{'loss': 0.0857, 'grad_norm': 0.12027359846645565, 'learning_rate': 9.269438434757296e-05, 'epoch': 2.6363736749116606}
{'eval_valid_loss': 0.07608409225940704, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.83, 'eval_valid_steps_per_second': 18.03, 'epoch': 2.6363736749116606}
{'loss': 0.0869, 'grad_norm': 0.09924546933517284, 'learning_rate': 9.26755311423325e-05, 'epoch': 2.639824425795053}
{'loss': 0.0852, 'grad_norm': 0.09787855007257105, 'learning_rate': 9.265665556413527e-05, 'epoch': 2.6432751766784452}
{'eval_valid_loss': 0.07629571855068207, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.706, 'eval_valid_steps_per_second': 18.024, 'epoch': 2.6432751766784452}
{'loss': 0.0879, 'grad_norm': 0.10160994526563355, 'learning_rate': 9.263775762287694e-05, 'epoch': 2.6467259275618376}
{'loss': 0.0856, 'grad_norm': 0.09952293548532282, 'learning_rate': 9.261883732846488e-05, 'epoch': 2.65017667844523}
{'eval_valid_loss': 0.07645216584205627, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.264, 'eval_valid_steps_per_second': 18.091, 'epoch': 2.65017667844523}
{'loss': 0.0859, 'grad_norm': 0.08350445427711749, 'learning_rate': 9.25998946908182e-05, 'epoch': 2.6536274293286217}
{'loss': 0.0879, 'grad_norm': 0.10908387510036723, 'learning_rate': 9.258092971986771e-05, 'epoch': 2.657078180212014}
{'eval_valid_loss': 0.0762690007686615, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.688, 'eval_valid_steps_per_second': 18.109, 'epoch': 2.657078180212014}
{'loss': 0.0872, 'grad_norm': 0.11860659894497451, 'learning_rate': 9.256194242555594e-05, 'epoch': 2.6605289310954063}
{'loss': 0.0862, 'grad_norm': 0.08963075096307999, 'learning_rate': 9.25429328178371e-05, 'epoch': 2.6639796819787986}
{'eval_valid_loss': 0.07620655000209808, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.193, 'eval_valid_steps_per_second': 18.131, 'epoch': 2.6639796819787986}
{'loss': 0.0863, 'grad_norm': 0.0945950688198859, 'learning_rate': 9.252390090667714e-05, 'epoch': 2.667430432862191}
{'loss': 0.0862, 'grad_norm': 0.0854164061599179, 'learning_rate': 9.250484670205366e-05, 'epoch': 2.670881183745583}
{'eval_valid_loss': 0.07612761855125427, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.667, 'eval_valid_steps_per_second': 18.065, 'epoch': 2.670881183745583}
{'loss': 0.0864, 'grad_norm': 0.07971732642319775, 'learning_rate': 9.248577021395597e-05, 'epoch': 2.674331934628975}
{'loss': 0.0872, 'grad_norm': 0.09415840137616019, 'learning_rate': 9.246667145238509e-05, 'epoch': 2.6777826855123674}
{'eval_valid_loss': 0.0769071877002716, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.888, 'eval_valid_steps_per_second': 18.032, 'epoch': 2.6777826855123674}
{'loss': 0.0852, 'grad_norm': 0.10774911149405524, 'learning_rate': 9.24475504273536e-05, 'epoch': 2.6812334363957597}
{'loss': 0.0859, 'grad_norm': 0.11079576943081394, 'learning_rate': 9.242840714888593e-05, 'epoch': 2.684684187279152}
{'eval_valid_loss': 0.07679013907909393, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.03, 'eval_valid_steps_per_second': 18.081, 'epoch': 2.684684187279152}
{'loss': 0.0862, 'grad_norm': 0.09114523412285404, 'learning_rate': 9.240924162701801e-05, 'epoch': 2.688134938162544}
{'loss': 0.0868, 'grad_norm': 0.1818864390277049, 'learning_rate': 9.239005387179755e-05, 'epoch': 2.6915856890459366}
{'eval_valid_loss': 0.07640169560909271, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 421.004, 'eval_valid_steps_per_second': 18.08, 'epoch': 2.6915856890459366}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0854, 'grad_norm': 0.08455911328977757, 'learning_rate': 9.237084389328385e-05, 'epoch': 2.6950364399293285}
{'loss': 0.0866, 'grad_norm': 0.07938660999964976, 'learning_rate': 9.235161170154789e-05, 'epoch': 2.698487190812721}
{'eval_valid_loss': 0.07613178342580795, 'eval_valid_runtime': 0.3949, 'eval_valid_samples_per_second': 412.732, 'eval_valid_steps_per_second': 17.725, 'epoch': 2.698487190812721}
{'loss': 0.0857, 'grad_norm': 0.08995356107843706, 'learning_rate': 9.233235730667227e-05, 'epoch': 2.701937941696113}
{'loss': 0.0859, 'grad_norm': 0.08878649274015929, 'learning_rate': 9.231308071875127e-05, 'epoch': 2.7053886925795054}
{'eval_valid_loss': 0.07601866126060486, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.527, 'eval_valid_steps_per_second': 18.059, 'epoch': 2.7053886925795054}
{'loss': 0.0865, 'grad_norm': 0.08177281400887468, 'learning_rate': 9.229378194789076e-05, 'epoch': 2.7088394434628977}
{'loss': 0.0855, 'grad_norm': 0.07967206091644327, 'learning_rate': 9.227446100420828e-05, 'epoch': 2.7122901943462896}
{'eval_valid_loss': 0.07595226168632507, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.431, 'eval_valid_steps_per_second': 18.055, 'epoch': 2.7122901943462896}
{'loss': 0.0863, 'grad_norm': 0.10516190166037237, 'learning_rate': 9.225511789783295e-05, 'epoch': 2.715740945229682}
{'loss': 0.0862, 'grad_norm': 0.08829597444405247, 'learning_rate': 9.223575263890556e-05, 'epoch': 2.719191696113074}
{'eval_valid_loss': 0.07600715756416321, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.503, 'eval_valid_steps_per_second': 18.101, 'epoch': 2.719191696113074}
{'loss': 0.0868, 'grad_norm': 0.10646615390320485, 'learning_rate': 9.221636523757846e-05, 'epoch': 2.7226424469964665}
{'loss': 0.0848, 'grad_norm': 0.1248669501224809, 'learning_rate': 9.219695570401566e-05, 'epoch': 2.726093197879859}
{'eval_valid_loss': 0.07624174654483795, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.661, 'eval_valid_steps_per_second': 18.108, 'epoch': 2.726093197879859}
{'loss': 0.0869, 'grad_norm': 0.120607017405071, 'learning_rate': 9.217752404839276e-05, 'epoch': 2.7295439487632507}
{'loss': 0.0856, 'grad_norm': 0.07920866551269354, 'learning_rate': 9.215807028089689e-05, 'epoch': 2.732994699646643}
{'eval_valid_loss': 0.0755845159292221, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.689, 'eval_valid_steps_per_second': 18.023, 'epoch': 2.732994699646643}
{'loss': 0.0856, 'grad_norm': 0.11468796814536439, 'learning_rate': 9.213859441172688e-05, 'epoch': 2.7364454505300353}
{'loss': 0.0851, 'grad_norm': 0.1118532218695155, 'learning_rate': 9.211909645109307e-05, 'epoch': 2.7398962014134276}
{'eval_valid_loss': 0.07572100311517715, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.969, 'eval_valid_steps_per_second': 17.95, 'epoch': 2.7398962014134276}
{'loss': 0.0872, 'grad_norm': 0.1298266628710932, 'learning_rate': 9.209957640921744e-05, 'epoch': 2.74334695229682}
{'loss': 0.0854, 'grad_norm': 0.08613525549637169, 'learning_rate': 9.208003429633347e-05, 'epoch': 2.7467977031802118}
{'eval_valid_loss': 0.07542240619659424, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.792, 'eval_valid_steps_per_second': 18.028, 'epoch': 2.7467977031802118}
{'loss': 0.0855, 'grad_norm': 0.10623824458032839, 'learning_rate': 9.206047012268629e-05, 'epoch': 2.750248454063604}
{'loss': 0.0851, 'grad_norm': 0.10016229765843063, 'learning_rate': 9.204088389853254e-05, 'epoch': 2.7536992049469964}
{'eval_valid_loss': 0.0758858323097229, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.738, 'eval_valid_steps_per_second': 18.111, 'epoch': 2.7536992049469964}
{'loss': 0.0855, 'grad_norm': 0.11071167920415041, 'learning_rate': 9.202127563414045e-05, 'epoch': 2.7571499558303887}
{'loss': 0.0859, 'grad_norm': 0.09759709470171825, 'learning_rate': 9.200164533978979e-05, 'epoch': 2.760600706713781}
{'eval_valid_loss': 0.07572127133607864, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.2, 'eval_valid_steps_per_second': 18.002, 'epoch': 2.760600706713781}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0864, 'grad_norm': 0.11582483496061519, 'learning_rate': 9.198199302577187e-05, 'epoch': 2.7640514575971733}
{'loss': 0.087, 'grad_norm': 0.07564838567710302, 'learning_rate': 9.196231870238958e-05, 'epoch': 2.7675022084805656}
{'eval_valid_loss': 0.07543695718050003, 'eval_valid_runtime': 0.3858, 'eval_valid_samples_per_second': 422.453, 'eval_valid_steps_per_second': 18.142, 'epoch': 2.7675022084805656}
{'loss': 0.0846, 'grad_norm': 0.0917911812720317, 'learning_rate': 9.194262237995733e-05, 'epoch': 2.7709529593639575}
{'loss': 0.0861, 'grad_norm': 0.15136409980370333, 'learning_rate': 9.192290406880104e-05, 'epoch': 2.7744037102473498}
{'eval_valid_loss': 0.07621344178915024, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.355, 'eval_valid_steps_per_second': 18.052, 'epoch': 2.7744037102473498}
{'loss': 0.086, 'grad_norm': 0.07334376044738146, 'learning_rate': 9.19031637792582e-05, 'epoch': 2.777854461130742}
{'loss': 0.086, 'grad_norm': 0.08092561396804938, 'learning_rate': 9.188340152167778e-05, 'epoch': 2.7813052120141344}
{'eval_valid_loss': 0.07591254264116287, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.443, 'eval_valid_steps_per_second': 18.013, 'epoch': 2.7813052120141344}
{'loss': 0.0853, 'grad_norm': 0.07346814177969993, 'learning_rate': 9.18636173064203e-05, 'epoch': 2.7847559628975267}
{'loss': 0.0843, 'grad_norm': 0.10602627725435583, 'learning_rate': 9.184381114385776e-05, 'epoch': 2.7882067137809186}
{'eval_valid_loss': 0.07579424232244492, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.881, 'eval_valid_steps_per_second': 17.989, 'epoch': 2.7882067137809186}
{'loss': 0.0855, 'grad_norm': 0.11589556397944732, 'learning_rate': 9.182398304437369e-05, 'epoch': 2.791657464664311}
{'loss': 0.0854, 'grad_norm': 0.08044155647243759, 'learning_rate': 9.180413301836315e-05, 'epoch': 2.795108215547703}
{'eval_valid_loss': 0.0757182389497757, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.501, 'eval_valid_steps_per_second': 17.93, 'epoch': 2.795108215547703}
{'loss': 0.0858, 'grad_norm': 0.10614723594635672, 'learning_rate': 9.178426107623261e-05, 'epoch': 2.7985589664310955}
{'loss': 0.0863, 'grad_norm': 0.08404998857293768, 'learning_rate': 9.176436722840011e-05, 'epoch': 2.802009717314488}
{'eval_valid_loss': 0.07616646587848663, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.109, 'eval_valid_steps_per_second': 18.084, 'epoch': 2.802009717314488}
{'loss': 0.0858, 'grad_norm': 0.09219772808056498, 'learning_rate': 9.174445148529513e-05, 'epoch': 2.8054604681978796}
{'loss': 0.0846, 'grad_norm': 0.14146207041028555, 'learning_rate': 9.172451385735865e-05, 'epoch': 2.808911219081272}
{'eval_valid_loss': 0.0757279321551323, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.627, 'eval_valid_steps_per_second': 18.021, 'epoch': 2.808911219081272}
{'loss': 0.0857, 'grad_norm': 0.09238243707503459, 'learning_rate': 9.170455435504311e-05, 'epoch': 2.8123619699646643}
{'loss': 0.0863, 'grad_norm': 0.090364940571237, 'learning_rate': 9.168457298881244e-05, 'epoch': 2.8158127208480566}
{'eval_valid_loss': 0.0760737732052803, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.98, 'eval_valid_steps_per_second': 18.036, 'epoch': 2.8158127208480566}
{'loss': 0.0867, 'grad_norm': 0.0758233095787777, 'learning_rate': 9.1664569769142e-05, 'epoch': 2.819263471731449}
{'loss': 0.0873, 'grad_norm': 0.09503578235312357, 'learning_rate': 9.164454470651862e-05, 'epoch': 2.8227142226148407}
{'eval_valid_loss': 0.07562180608510971, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.668, 'eval_valid_steps_per_second': 18.023, 'epoch': 2.8227142226148407}
{'loss': 0.0853, 'grad_norm': 0.07679192202224222, 'learning_rate': 9.162449781144062e-05, 'epoch': 2.8261649734982335}
{'loss': 0.0862, 'grad_norm': 0.07506835366000611, 'learning_rate': 9.160442909441767e-05, 'epoch': 2.8296157243816253}
{'eval_valid_loss': 0.07569146156311035, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.454, 'eval_valid_steps_per_second': 18.056, 'epoch': 2.8296157243816253}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0854, 'grad_norm': 0.08811803075454125, 'learning_rate': 9.158433856597099e-05, 'epoch': 2.8330664752650176}
{'loss': 0.0839, 'grad_norm': 0.09194193004260899, 'learning_rate': 9.156422623663317e-05, 'epoch': 2.83651722614841}
{'eval_valid_loss': 0.0753866583108902, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.333, 'eval_valid_steps_per_second': 18.051, 'epoch': 2.83651722614841}
{'loss': 0.0856, 'grad_norm': 0.0850069422711091, 'learning_rate': 9.154409211694823e-05, 'epoch': 2.8399679770318023}
{'loss': 0.0857, 'grad_norm': 0.07021041413285929, 'learning_rate': 9.152393621747166e-05, 'epoch': 2.8434187279151946}
{'eval_valid_loss': 0.07547236233949661, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.791, 'eval_valid_steps_per_second': 18.028, 'epoch': 2.8434187279151946}
{'loss': 0.085, 'grad_norm': 0.11707901832277257, 'learning_rate': 9.150375854877029e-05, 'epoch': 2.8468694787985864}
{'loss': 0.085, 'grad_norm': 0.0698490780844441, 'learning_rate': 9.148355912142245e-05, 'epoch': 2.8503202296819787}
{'eval_valid_loss': 0.07535998523235321, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.39, 'eval_valid_steps_per_second': 18.054, 'epoch': 2.8503202296819787}
{'loss': 0.0854, 'grad_norm': 0.06947705727762524, 'learning_rate': 9.146333794601782e-05, 'epoch': 2.853770980565371}
{'loss': 0.0858, 'grad_norm': 0.09864578692497435, 'learning_rate': 9.144309503315752e-05, 'epoch': 2.8572217314487633}
{'eval_valid_loss': 0.07605382055044174, 'eval_valid_runtime': 0.3853, 'eval_valid_samples_per_second': 423.031, 'eval_valid_steps_per_second': 18.167, 'epoch': 2.8572217314487633}
{'loss': 0.0862, 'grad_norm': 0.09203415126967977, 'learning_rate': 9.142283039345401e-05, 'epoch': 2.8606724823321557}
{'loss': 0.0861, 'grad_norm': 0.09955018563374918, 'learning_rate': 9.140254403753119e-05, 'epoch': 2.8641232332155475}
{'eval_valid_loss': 0.0751536637544632, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.768, 'eval_valid_steps_per_second': 18.027, 'epoch': 2.8641232332155475}
{'loss': 0.086, 'grad_norm': 0.10642954561324165, 'learning_rate': 9.138223597602432e-05, 'epoch': 2.86757398409894}
{'loss': 0.0836, 'grad_norm': 0.08660537898367954, 'learning_rate': 9.136190621958007e-05, 'epoch': 2.871024734982332}
{'eval_valid_loss': 0.07564134150743484, 'eval_valid_runtime': 0.3857, 'eval_valid_samples_per_second': 422.643, 'eval_valid_steps_per_second': 18.15, 'epoch': 2.871024734982332}
{'loss': 0.0872, 'grad_norm': 0.0915658002510396, 'learning_rate': 9.134155477885644e-05, 'epoch': 2.8744754858657244}
{'loss': 0.0865, 'grad_norm': 0.13218113230470863, 'learning_rate': 9.132118166452284e-05, 'epoch': 2.8779262367491167}
{'eval_valid_loss': 0.07578936219215393, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.344, 'eval_valid_steps_per_second': 18.052, 'epoch': 2.8779262367491167}
{'loss': 0.0852, 'grad_norm': 0.06970157457080374, 'learning_rate': 9.130078688726e-05, 'epoch': 2.8813769876325086}
{'loss': 0.0851, 'grad_norm': 0.07477659945549611, 'learning_rate': 9.128037045776004e-05, 'epoch': 2.884827738515901}
{'eval_valid_loss': 0.07478189468383789, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.207, 'eval_valid_steps_per_second': 18.089, 'epoch': 2.884827738515901}
{'loss': 0.0857, 'grad_norm': 0.09195660425074217, 'learning_rate': 9.125993238672644e-05, 'epoch': 2.888278489399293}
{'loss': 0.0845, 'grad_norm': 0.11156313820890833, 'learning_rate': 9.123947268487399e-05, 'epoch': 2.8917292402826855}
{'eval_valid_loss': 0.07494551688432693, 'eval_valid_runtime': 0.3959, 'eval_valid_samples_per_second': 411.748, 'eval_valid_steps_per_second': 17.682, 'epoch': 2.8917292402826855}
{'loss': 0.0848, 'grad_norm': 0.07795960908866313, 'learning_rate': 9.121899136292882e-05, 'epoch': 2.895179991166078}
{'loss': 0.0853, 'grad_norm': 0.1150050925935802, 'learning_rate': 9.119848843162844e-05, 'epoch': 2.8986307420494697}
{'eval_valid_loss': 0.0753757506608963, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.42, 'eval_valid_steps_per_second': 18.055, 'epoch': 2.8986307420494697}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0848, 'grad_norm': 0.09103395147208376, 'learning_rate': 9.117796390172165e-05, 'epoch': 2.9020814929328624}
{'loss': 0.087, 'grad_norm': 0.07685889803846895, 'learning_rate': 9.115741778396858e-05, 'epoch': 2.9055322438162543}
{'eval_valid_loss': 0.0760674849152565, 'eval_valid_runtime': 0.3851, 'eval_valid_samples_per_second': 423.221, 'eval_valid_steps_per_second': 18.175, 'epoch': 2.9055322438162543}
{'loss': 0.0859, 'grad_norm': 0.10635019119192071, 'learning_rate': 9.113685008914068e-05, 'epoch': 2.9089829946996466}
{'loss': 0.0852, 'grad_norm': 0.08501372567768722, 'learning_rate': 9.111626082802073e-05, 'epoch': 2.912433745583039}
{'eval_valid_loss': 0.07527758926153183, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.8, 'eval_valid_steps_per_second': 18.114, 'epoch': 2.912433745583039}
{'loss': 0.0854, 'grad_norm': 0.09149269599066197, 'learning_rate': 9.109565001140278e-05, 'epoch': 2.915884496466431}
{'loss': 0.0855, 'grad_norm': 0.09670127578102439, 'learning_rate': 9.107501765009224e-05, 'epoch': 2.9193352473498235}
{'eval_valid_loss': 0.0752505287528038, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.843, 'eval_valid_steps_per_second': 18.03, 'epoch': 2.9193352473498235}
{'loss': 0.084, 'grad_norm': 0.0927617280167761, 'learning_rate': 9.10543637549057e-05, 'epoch': 2.9227859982332154}
{'loss': 0.0854, 'grad_norm': 0.11991610756345128, 'learning_rate': 9.103368833667116e-05, 'epoch': 2.9262367491166077}
{'eval_valid_loss': 0.07524639368057251, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.197, 'eval_valid_steps_per_second': 18.088, 'epoch': 2.9262367491166077}
{'loss': 0.0847, 'grad_norm': 0.08520527820167441, 'learning_rate': 9.101299140622788e-05, 'epoch': 2.9296875}
{'loss': 0.0853, 'grad_norm': 0.07043052245198951, 'learning_rate': 9.099227297442635e-05, 'epoch': 2.9331382508833923}
{'eval_valid_loss': 0.07515662163496017, 'eval_valid_runtime': 0.3862, 'eval_valid_samples_per_second': 422.03, 'eval_valid_steps_per_second': 18.124, 'epoch': 2.9331382508833923}
{'loss': 0.0843, 'grad_norm': 0.07978841733622345, 'learning_rate': 9.097153305212834e-05, 'epoch': 2.9365890017667846}
{'loss': 0.0861, 'grad_norm': 0.10334199815379098, 'learning_rate': 9.095077165020692e-05, 'epoch': 2.9400397526501765}
{'eval_valid_loss': 0.0750560387969017, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.887, 'eval_valid_steps_per_second': 18.032, 'epoch': 2.9400397526501765}
{'loss': 0.0845, 'grad_norm': 0.09734354565547407, 'learning_rate': 9.092998877954641e-05, 'epoch': 2.943490503533569}
{'loss': 0.0847, 'grad_norm': 0.09253813124950988, 'learning_rate': 9.090918445104239e-05, 'epoch': 2.946941254416961}
{'eval_valid_loss': 0.0753040537238121, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.962, 'eval_valid_steps_per_second': 18.078, 'epoch': 2.946941254416961}
{'loss': 0.0853, 'grad_norm': 0.10029339688977192, 'learning_rate': 9.088835867560169e-05, 'epoch': 2.9503920053003534}
{'loss': 0.0853, 'grad_norm': 0.08891386743505066, 'learning_rate': 9.086751146414233e-05, 'epoch': 2.9538427561837457}
{'eval_valid_loss': 0.07486648112535477, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.82, 'eval_valid_steps_per_second': 18.115, 'epoch': 2.9538427561837457}
{'loss': 0.0854, 'grad_norm': 0.0840662004833259, 'learning_rate': 9.084664282759364e-05, 'epoch': 2.9572935070671376}
{'loss': 0.0845, 'grad_norm': 0.1061108805162085, 'learning_rate': 9.082575277689616e-05, 'epoch': 2.9607442579505303}
{'eval_valid_loss': 0.07516851276159286, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.779, 'eval_valid_steps_per_second': 18.027, 'epoch': 2.9607442579505303}
{'loss': 0.0847, 'grad_norm': 0.1302729736999737, 'learning_rate': 9.080484132300162e-05, 'epoch': 2.964195008833922}
{'loss': 0.0846, 'grad_norm': 0.11266754711166267, 'learning_rate': 9.078390847687304e-05, 'epoch': 2.9676457597173145}
{'eval_valid_loss': 0.07520927488803864, 'eval_valid_runtime': 0.3858, 'eval_valid_samples_per_second': 422.448, 'eval_valid_steps_per_second': 18.142, 'epoch': 2.9676457597173145}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0851, 'grad_norm': 0.11180607380197716, 'learning_rate': 9.076295424948459e-05, 'epoch': 2.971096510600707}
{'loss': 0.0852, 'grad_norm': 0.13143209598019306, 'learning_rate': 9.074197865182168e-05, 'epoch': 2.974547261484099}
{'eval_valid_loss': 0.07523307204246521, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.898, 'eval_valid_steps_per_second': 18.032, 'epoch': 2.974547261484099}
{'loss': 0.085, 'grad_norm': 0.10159089834143424, 'learning_rate': 9.072098169488094e-05, 'epoch': 2.9779980123674914}
{'loss': 0.0846, 'grad_norm': 0.10974526951443297, 'learning_rate': 9.069996338967016e-05, 'epoch': 2.9814487632508833}
{'eval_valid_loss': 0.07510316371917725, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.174, 'eval_valid_steps_per_second': 18.044, 'epoch': 2.9814487632508833}
{'loss': 0.0843, 'grad_norm': 0.08229935978562974, 'learning_rate': 9.067892374720833e-05, 'epoch': 2.9848995141342756}
{'loss': 0.0841, 'grad_norm': 0.09453418995954409, 'learning_rate': 9.065786277852563e-05, 'epoch': 2.988350265017668}
{'eval_valid_loss': 0.07533370703458786, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.373, 'eval_valid_steps_per_second': 18.01, 'epoch': 2.988350265017668}
{'loss': 0.0854, 'grad_norm': 0.0838757377567729, 'learning_rate': 9.063678049466346e-05, 'epoch': 2.99180101590106}
{'loss': 0.0862, 'grad_norm': 0.08502243246226636, 'learning_rate': 9.061567690667433e-05, 'epoch': 2.9952517667844525}
{'eval_valid_loss': 0.07541093975305557, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.603, 'eval_valid_steps_per_second': 18.063, 'epoch': 2.9952517667844525}
{'loss': 0.0853, 'grad_norm': 0.08251711231081302, 'learning_rate': 9.059455202562197e-05, 'epoch': 2.9987025176678443}
{'loss': 0.084, 'grad_norm': 0.08888510194584884, 'learning_rate': 9.057340586258123e-05, 'epoch': 3.0021532685512367}
{'eval_valid_loss': 0.07533086091279984, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.716, 'eval_valid_steps_per_second': 18.068, 'epoch': 3.0021532685512367}
{'loss': 0.0834, 'grad_norm': 0.08538187089194008, 'learning_rate': 9.055223842863816e-05, 'epoch': 3.005604019434629}
{'loss': 0.084, 'grad_norm': 0.08261143969585016, 'learning_rate': 9.053104973488993e-05, 'epoch': 3.0090547703180213}
{'eval_valid_loss': 0.07493014633655548, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.33, 'eval_valid_steps_per_second': 18.051, 'epoch': 3.0090547703180213}
{'loss': 0.085, 'grad_norm': 0.08768978062702452, 'learning_rate': 9.050983979244488e-05, 'epoch': 3.0125055212014136}
{'loss': 0.0845, 'grad_norm': 0.08775274663437206, 'learning_rate': 9.048860861242244e-05, 'epoch': 3.0159562720848054}
{'eval_valid_loss': 0.0751299262046814, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.768, 'eval_valid_steps_per_second': 18.027, 'epoch': 3.0159562720848054}
{'loss': 0.0849, 'grad_norm': 0.08299925497942051, 'learning_rate': 9.046735620595324e-05, 'epoch': 3.0194070229681977}
{'loss': 0.0844, 'grad_norm': 0.0829336709617917, 'learning_rate': 9.044608258417902e-05, 'epoch': 3.02285777385159}
{'eval_valid_loss': 0.07511260360479355, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.696, 'eval_valid_steps_per_second': 18.024, 'epoch': 3.02285777385159}
{'loss': 0.0841, 'grad_norm': 0.10773680030914524, 'learning_rate': 9.04247877582526e-05, 'epoch': 3.0263085247349824}
{'loss': 0.0834, 'grad_norm': 0.10249796860649928, 'learning_rate': 9.040347173933796e-05, 'epoch': 3.0297592756183747}
{'eval_valid_loss': 0.07550981640815735, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.296, 'eval_valid_steps_per_second': 17.964, 'epoch': 3.0297592756183747}
{'loss': 0.0841, 'grad_norm': 0.09828093091818116, 'learning_rate': 9.038213453861018e-05, 'epoch': 3.033210026501767}
{'loss': 0.0833, 'grad_norm': 0.07908563946653462, 'learning_rate': 9.036077616725545e-05, 'epoch': 3.036660777385159}
{'eval_valid_loss': 0.07453306764364243, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.262, 'eval_valid_steps_per_second': 17.962, 'epoch': 3.036660777385159}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0828, 'grad_norm': 0.10763055701767506, 'learning_rate': 9.033939663647101e-05, 'epoch': 3.040111528268551}
{'loss': 0.0849, 'grad_norm': 0.10471534398958693, 'learning_rate': 9.031799595746531e-05, 'epoch': 3.0435622791519434}
{'eval_valid_loss': 0.07523591816425323, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 417.01, 'eval_valid_steps_per_second': 17.908, 'epoch': 3.0435622791519434}
{'loss': 0.0834, 'grad_norm': 0.08211774001540084, 'learning_rate': 9.029657414145773e-05, 'epoch': 3.0470130300353357}
{'loss': 0.0841, 'grad_norm': 0.0699430375171436, 'learning_rate': 9.027513119967887e-05, 'epoch': 3.050463780918728}
{'eval_valid_loss': 0.07463356107473373, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.158, 'eval_valid_steps_per_second': 18.044, 'epoch': 3.050463780918728}
{'loss': 0.0839, 'grad_norm': 0.08995983872284699, 'learning_rate': 9.025366714337032e-05, 'epoch': 3.0539145318021204}
{'loss': 0.0853, 'grad_norm': 0.06829459074718575, 'learning_rate': 9.023218198378478e-05, 'epoch': 3.057365282685512}
{'eval_valid_loss': 0.07447081804275513, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.948, 'eval_valid_steps_per_second': 17.992, 'epoch': 3.057365282685512}
{'loss': 0.0835, 'grad_norm': 0.1009786516557744, 'learning_rate': 9.021067573218598e-05, 'epoch': 3.0608160335689045}
{'loss': 0.0841, 'grad_norm': 0.07210988185346744, 'learning_rate': 9.018914839984875e-05, 'epoch': 3.064266784452297}
{'eval_valid_loss': 0.0742071270942688, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.725, 'eval_valid_steps_per_second': 18.111, 'epoch': 3.064266784452297}
{'loss': 0.0834, 'grad_norm': 0.08581349724161316, 'learning_rate': 9.016759999805895e-05, 'epoch': 3.067717535335689}
{'loss': 0.085, 'grad_norm': 0.07970504067972452, 'learning_rate': 9.014603053811347e-05, 'epoch': 3.0711682862190814}
{'eval_valid_loss': 0.07453382760286331, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.771, 'eval_valid_steps_per_second': 18.027, 'epoch': 3.0711682862190814}
{'loss': 0.085, 'grad_norm': 0.09525273219521499, 'learning_rate': 9.012444003132028e-05, 'epoch': 3.0746190371024733}
{'loss': 0.0828, 'grad_norm': 0.0838072167611021, 'learning_rate': 9.010282848899832e-05, 'epoch': 3.0780697879858656}
{'eval_valid_loss': 0.07450199872255325, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.678, 'eval_valid_steps_per_second': 17.937, 'epoch': 3.0780697879858656}
{'loss': 0.084, 'grad_norm': 0.08484523611210389, 'learning_rate': 9.008119592247763e-05, 'epoch': 3.081520538869258}
{'loss': 0.0831, 'grad_norm': 0.08355858944674573, 'learning_rate': 9.005954234309926e-05, 'epoch': 3.0849712897526502}
{'eval_valid_loss': 0.07434830814599991, 'eval_valid_runtime': 0.3983, 'eval_valid_samples_per_second': 409.228, 'eval_valid_steps_per_second': 17.574, 'epoch': 3.0849712897526502}
{'loss': 0.0831, 'grad_norm': 0.08448232659315626, 'learning_rate': 9.00378677622152e-05, 'epoch': 3.0884220406360425}
{'loss': 0.0834, 'grad_norm': 0.0893515181246241, 'learning_rate': 9.001617219118854e-05, 'epoch': 3.091872791519435}
{'eval_valid_loss': 0.07474755495786667, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.422, 'eval_valid_steps_per_second': 17.883, 'epoch': 3.091872791519435}
{'loss': 0.0844, 'grad_norm': 0.07789168373248836, 'learning_rate': 8.999445564139334e-05, 'epoch': 3.0953235424028267}
{'loss': 0.0834, 'grad_norm': 0.10411403709559051, 'learning_rate': 8.997271812421465e-05, 'epoch': 3.098774293286219}
{'eval_valid_loss': 0.0744529664516449, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.653, 'eval_valid_steps_per_second': 17.936, 'epoch': 3.098774293286219}
{'loss': 0.0852, 'grad_norm': 0.1056613174115391, 'learning_rate': 8.995095965104853e-05, 'epoch': 3.1022250441696113}
{'loss': 0.0833, 'grad_norm': 0.11511742523203074, 'learning_rate': 8.992918023330201e-05, 'epoch': 3.1056757950530036}
{'eval_valid_loss': 0.07414604723453522, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.462, 'eval_valid_steps_per_second': 18.057, 'epoch': 3.1056757950530036}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0849, 'grad_norm': 0.07897053820092796, 'learning_rate': 8.990737988239311e-05, 'epoch': 3.109126545936396}
{'loss': 0.084, 'grad_norm': 0.09526851269400072, 'learning_rate': 8.988555860975082e-05, 'epoch': 3.112577296819788}
{'eval_valid_loss': 0.07432562857866287, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.35, 'eval_valid_steps_per_second': 18.052, 'epoch': 3.112577296819788}
{'loss': 0.0835, 'grad_norm': 0.07915790013548107, 'learning_rate': 8.98637164268151e-05, 'epoch': 3.11602804770318}
{'loss': 0.084, 'grad_norm': 0.08412348065367735, 'learning_rate': 8.984185334503688e-05, 'epoch': 3.1194787985865724}
{'eval_valid_loss': 0.0745454952120781, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.488, 'eval_valid_steps_per_second': 18.101, 'epoch': 3.1194787985865724}
{'loss': 0.085, 'grad_norm': 0.09409613855640324, 'learning_rate': 8.981996937587805e-05, 'epoch': 3.1229295494699647}
{'loss': 0.0846, 'grad_norm': 0.09615192342028633, 'learning_rate': 8.97980645308114e-05, 'epoch': 3.126380300353357}
{'eval_valid_loss': 0.07431701570749283, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.335, 'eval_valid_steps_per_second': 18.051, 'epoch': 3.126380300353357}
{'loss': 0.0835, 'grad_norm': 0.06719452758862779, 'learning_rate': 8.977613882132075e-05, 'epoch': 3.1298310512367493}
{'loss': 0.0833, 'grad_norm': 0.07243101249117954, 'learning_rate': 8.975419225890077e-05, 'epoch': 3.133281802120141}
{'eval_valid_loss': 0.07492674887180328, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.966, 'eval_valid_steps_per_second': 18.078, 'epoch': 3.133281802120141}
{'loss': 0.0842, 'grad_norm': 0.08961313663900045, 'learning_rate': 8.973222485505713e-05, 'epoch': 3.1367325530035335}
{'loss': 0.0837, 'grad_norm': 0.06187890561953254, 'learning_rate': 8.97102366213064e-05, 'epoch': 3.140183303886926}
{'eval_valid_loss': 0.07466467469930649, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.991, 'eval_valid_steps_per_second': 18.122, 'epoch': 3.140183303886926}
{'loss': 0.0842, 'grad_norm': 0.07860279389298776, 'learning_rate': 8.968822756917608e-05, 'epoch': 3.143634054770318}
{'loss': 0.0843, 'grad_norm': 0.0883870091258914, 'learning_rate': 8.966619771020455e-05, 'epoch': 3.1470848056537104}
{'eval_valid_loss': 0.07450679689645767, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.398, 'eval_valid_steps_per_second': 18.011, 'epoch': 3.1470848056537104}
{'loss': 0.0833, 'grad_norm': 0.06448945458711565, 'learning_rate': 8.964414705594113e-05, 'epoch': 3.1505355565371023}
{'loss': 0.0829, 'grad_norm': 0.08013889523745284, 'learning_rate': 8.962207561794604e-05, 'epoch': 3.1539863074204946}
{'eval_valid_loss': 0.0746195837855339, 'eval_valid_runtime': 0.3905, 'eval_valid_samples_per_second': 417.444, 'eval_valid_steps_per_second': 17.927, 'epoch': 3.1539863074204946}
{'loss': 0.0839, 'grad_norm': 0.08169201481889588, 'learning_rate': 8.959998340779042e-05, 'epoch': 3.157437058303887}
{'loss': 0.0843, 'grad_norm': 0.07981187662611494, 'learning_rate': 8.957787043705621e-05, 'epoch': 3.160887809187279}
{'eval_valid_loss': 0.07422835379838943, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.362, 'eval_valid_steps_per_second': 18.052, 'epoch': 3.160887809187279}
{'loss': 0.0832, 'grad_norm': 0.07552296221172751, 'learning_rate': 8.955573671733635e-05, 'epoch': 3.1643385600706715}
{'loss': 0.0834, 'grad_norm': 0.0808837891983331, 'learning_rate': 8.953358226023457e-05, 'epoch': 3.167789310954064}
{'eval_valid_loss': 0.07457252591848373, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.65, 'eval_valid_steps_per_second': 18.065, 'epoch': 3.167789310954064}
{'loss': 0.0842, 'grad_norm': 0.07484503705868843, 'learning_rate': 8.951140707736553e-05, 'epoch': 3.1712400618374557}
{'loss': 0.0828, 'grad_norm': 0.06411727140861435, 'learning_rate': 8.948921118035472e-05, 'epoch': 3.174690812720848}
{'eval_valid_loss': 0.07427624613046646, 'eval_valid_runtime': 0.3855, 'eval_valid_samples_per_second': 422.878, 'eval_valid_steps_per_second': 18.16, 'epoch': 3.174690812720848}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0842, 'grad_norm': 0.06147324224157969, 'learning_rate': 8.946699458083846e-05, 'epoch': 3.1781415636042403}
{'loss': 0.0834, 'grad_norm': 0.07576745165734775, 'learning_rate': 8.944475729046404e-05, 'epoch': 3.1815923144876326}
{'eval_valid_loss': 0.07449372112751007, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.96, 'eval_valid_steps_per_second': 18.035, 'epoch': 3.1815923144876326}
{'loss': 0.083, 'grad_norm': 0.07934528268189175, 'learning_rate': 8.942249932088947e-05, 'epoch': 3.185043065371025}
{'loss': 0.083, 'grad_norm': 0.08464010034217495, 'learning_rate': 8.940022068378367e-05, 'epoch': 3.188493816254417}
{'eval_valid_loss': 0.07410350441932678, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.17, 'eval_valid_steps_per_second': 18.044, 'epoch': 3.188493816254417}
{'loss': 0.0838, 'grad_norm': 0.07380396143333351, 'learning_rate': 8.937792139082637e-05, 'epoch': 3.191944567137809}
{'loss': 0.0837, 'grad_norm': 0.09350133162730795, 'learning_rate': 8.935560145370814e-05, 'epoch': 3.1953953180212014}
{'eval_valid_loss': 0.07434790581464767, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.851, 'eval_valid_steps_per_second': 17.945, 'epoch': 3.1953953180212014}
{'loss': 0.0833, 'grad_norm': 0.0726688257510752, 'learning_rate': 8.933326088413036e-05, 'epoch': 3.1988460689045937}
{'loss': 0.0833, 'grad_norm': 0.0693368020898892, 'learning_rate': 8.931089969380524e-05, 'epoch': 3.202296819787986}
{'eval_valid_loss': 0.07472487539052963, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.868, 'eval_valid_steps_per_second': 18.074, 'epoch': 3.202296819787986}
{'loss': 0.0839, 'grad_norm': 0.1267295327882589, 'learning_rate': 8.92885178944558e-05, 'epoch': 3.2057475706713783}
{'loss': 0.0843, 'grad_norm': 0.08172472070580244, 'learning_rate': 8.926611549781586e-05, 'epoch': 3.20919832155477}
{'eval_valid_loss': 0.07422049343585968, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.314, 'eval_valid_steps_per_second': 18.093, 'epoch': 3.20919832155477}
{'loss': 0.0841, 'grad_norm': 0.09007954813255836, 'learning_rate': 8.924369251563005e-05, 'epoch': 3.2126490724381624}
{'loss': 0.0828, 'grad_norm': 0.07145201651835517, 'learning_rate': 8.922124895965375e-05, 'epoch': 3.2160998233215548}
{'eval_valid_loss': 0.07375255972146988, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.229, 'eval_valid_steps_per_second': 18.004, 'epoch': 3.2160998233215548}
{'loss': 0.0841, 'grad_norm': 0.07589972861056013, 'learning_rate': 8.919878484165318e-05, 'epoch': 3.219550574204947}
{'loss': 0.0825, 'grad_norm': 0.08327456317860407, 'learning_rate': 8.917630017340531e-05, 'epoch': 3.2230013250883394}
{'eval_valid_loss': 0.07382627576589584, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.766, 'eval_valid_steps_per_second': 18.07, 'epoch': 3.2230013250883394}
{'loss': 0.0832, 'grad_norm': 0.08169889870734139, 'learning_rate': 8.91537949666979e-05, 'epoch': 3.2264520759717312}
{'loss': 0.084, 'grad_norm': 0.08261512167652543, 'learning_rate': 8.913126923332946e-05, 'epoch': 3.2299028268551235}
{'eval_valid_loss': 0.07404489815235138, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.876, 'eval_valid_steps_per_second': 18.074, 'epoch': 3.2299028268551235}
{'loss': 0.0836, 'grad_norm': 0.08253408831232652, 'learning_rate': 8.910872298510925e-05, 'epoch': 3.233353577738516}
{'loss': 0.0844, 'grad_norm': 0.10360582202268782, 'learning_rate': 8.908615623385736e-05, 'epoch': 3.236804328621908}
{'eval_valid_loss': 0.07405173778533936, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.688, 'eval_valid_steps_per_second': 18.066, 'epoch': 3.236804328621908}
{'loss': 0.0831, 'grad_norm': 0.07902107959173445, 'learning_rate': 8.906356899140453e-05, 'epoch': 3.2402550795053005}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0836, 'grad_norm': 0.08872967610951377, 'learning_rate': 8.904096126959227e-05, 'epoch': 3.2437058303886928}
{'eval_valid_loss': 0.07412571460008621, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.18, 'eval_valid_steps_per_second': 18.087, 'epoch': 3.2437058303886928}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0843, 'grad_norm': 0.059033313492091226, 'learning_rate': 8.901833308027287e-05, 'epoch': 3.2471565812720846}
{'loss': 0.0838, 'grad_norm': 0.06250377884352455, 'learning_rate': 8.899568443530934e-05, 'epoch': 3.250607332155477}
{'eval_valid_loss': 0.07362691313028336, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.848, 'eval_valid_steps_per_second': 17.987, 'epoch': 3.250607332155477}
{'loss': 0.0838, 'grad_norm': 0.09646171133021077, 'learning_rate': 8.897301534657536e-05, 'epoch': 3.2540580830388692}
{'loss': 0.0828, 'grad_norm': 0.08682693112350254, 'learning_rate': 8.895032582595538e-05, 'epoch': 3.2575088339222615}
{'eval_valid_loss': 0.07368093729019165, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.302, 'eval_valid_steps_per_second': 18.05, 'epoch': 3.2575088339222615}
{'loss': 0.0833, 'grad_norm': 0.07345569148606722, 'learning_rate': 8.892761588534454e-05, 'epoch': 3.260959584805654}
{'loss': 0.0835, 'grad_norm': 0.09041855979483553, 'learning_rate': 8.890488553664869e-05, 'epoch': 3.264410335689046}
{'eval_valid_loss': 0.07450123876333237, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.393, 'eval_valid_steps_per_second': 18.011, 'epoch': 3.264410335689046}
{'loss': 0.0837, 'grad_norm': 0.09828432644082241, 'learning_rate': 8.88821347917844e-05, 'epoch': 3.267861086572438}
{'loss': 0.0832, 'grad_norm': 0.0752635539140132, 'learning_rate': 8.885936366267888e-05, 'epoch': 3.2713118374558303}
{'eval_valid_loss': 0.07436097413301468, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.985, 'eval_valid_steps_per_second': 18.079, 'epoch': 3.2713118374558303}
{'loss': 0.0842, 'grad_norm': 0.07424846853350736, 'learning_rate': 8.88365721612701e-05, 'epoch': 3.2747625883392226}
{'loss': 0.0826, 'grad_norm': 0.08028336897727224, 'learning_rate': 8.881376029950663e-05, 'epoch': 3.278213339222615}
{'eval_valid_loss': 0.07408391684293747, 'eval_valid_runtime': 0.396, 'eval_valid_samples_per_second': 411.589, 'eval_valid_steps_per_second': 17.676, 'epoch': 3.278213339222615}
{'loss': 0.0822, 'grad_norm': 0.07189852590732873, 'learning_rate': 8.879092808934777e-05, 'epoch': 3.2816640901060072}
{'loss': 0.0846, 'grad_norm': 0.07858836725773824, 'learning_rate': 8.876807554276349e-05, 'epoch': 3.285114840989399}
{'eval_valid_loss': 0.07400358468294144, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.427, 'eval_valid_steps_per_second': 18.012, 'epoch': 3.285114840989399}
{'loss': 0.0827, 'grad_norm': 0.07172014888160158, 'learning_rate': 8.874520267173438e-05, 'epoch': 3.2885655918727914}
{'loss': 0.0835, 'grad_norm': 0.10770315548260483, 'learning_rate': 8.872230948825171e-05, 'epoch': 3.2920163427561837}
{'eval_valid_loss': 0.07424658536911011, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.367, 'eval_valid_steps_per_second': 18.053, 'epoch': 3.2920163427561837}
{'loss': 0.0831, 'grad_norm': 0.0787008079447203, 'learning_rate': 8.86993960043174e-05, 'epoch': 3.295467093639576}
{'loss': 0.0833, 'grad_norm': 0.07607622837076053, 'learning_rate': 8.867646223194403e-05, 'epoch': 3.2989178445229683}
{'eval_valid_loss': 0.07386104762554169, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.566, 'eval_valid_steps_per_second': 18.018, 'epoch': 3.2989178445229683}
{'loss': 0.0845, 'grad_norm': 0.09793764866396304, 'learning_rate': 8.865350818315477e-05, 'epoch': 3.30236859540636}
{'loss': 0.083, 'grad_norm': 0.08758761124152188, 'learning_rate': 8.863053386998346e-05, 'epoch': 3.3058193462897525}
{'eval_valid_loss': 0.07364606112241745, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.217, 'eval_valid_steps_per_second': 18.089, 'epoch': 3.3058193462897525}
{'loss': 0.0834, 'grad_norm': 0.09631176771088149, 'learning_rate': 8.860753930447455e-05, 'epoch': 3.309270097173145}
{'loss': 0.0833, 'grad_norm': 0.07576692665885275, 'learning_rate': 8.858452449868308e-05, 'epoch': 3.312720848056537}
{'eval_valid_loss': 0.07438761740922928, 'eval_valid_runtime': 0.3858, 'eval_valid_samples_per_second': 422.444, 'eval_valid_steps_per_second': 18.142, 'epoch': 3.312720848056537}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0828, 'grad_norm': 0.07168031391599225, 'learning_rate': 8.856148946467477e-05, 'epoch': 3.3161715989399294}
{'loss': 0.0836, 'grad_norm': 0.0740679349518153, 'learning_rate': 8.853843421452588e-05, 'epoch': 3.3196223498233217}
{'eval_valid_loss': 0.07369823753833771, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.44, 'eval_valid_steps_per_second': 18.056, 'epoch': 3.3196223498233217}
{'loss': 0.0828, 'grad_norm': 0.0844604754597791, 'learning_rate': 8.85153587603233e-05, 'epoch': 3.323073100706714}
{'loss': 0.0835, 'grad_norm': 0.07251010752305911, 'learning_rate': 8.849226311416452e-05, 'epoch': 3.326523851590106}
{'eval_valid_loss': 0.07439851760864258, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.216, 'eval_valid_steps_per_second': 18.089, 'epoch': 3.326523851590106}
{'loss': 0.0831, 'grad_norm': 0.10401438907337618, 'learning_rate': 8.846914728815758e-05, 'epoch': 3.329974602473498}
{'loss': 0.0841, 'grad_norm': 0.08542777671605153, 'learning_rate': 8.84460112944211e-05, 'epoch': 3.3334253533568905}
{'eval_valid_loss': 0.07419880479574203, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.574, 'eval_valid_steps_per_second': 18.104, 'epoch': 3.3334253533568905}
{'loss': 0.0836, 'grad_norm': 0.09467188200014423, 'learning_rate': 8.842285514508434e-05, 'epoch': 3.336876104240283}
{'loss': 0.083, 'grad_norm': 0.07484005221528879, 'learning_rate': 8.839967885228704e-05, 'epoch': 3.340326855123675}
{'eval_valid_loss': 0.07385430485010147, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.566, 'eval_valid_steps_per_second': 18.018, 'epoch': 3.340326855123675}
{'loss': 0.0849, 'grad_norm': 0.08954065635502388, 'learning_rate': 8.837648242817955e-05, 'epoch': 3.343777606007067}
{'loss': 0.083, 'grad_norm': 0.08998281373465215, 'learning_rate': 8.835326588492279e-05, 'epoch': 3.3472283568904593}
{'eval_valid_loss': 0.07401611655950546, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.677, 'eval_valid_steps_per_second': 17.937, 'epoch': 3.3472283568904593}
{'loss': 0.0824, 'grad_norm': 0.07487148817434197, 'learning_rate': 8.833002923468816e-05, 'epoch': 3.3506791077738516}
{'loss': 0.0838, 'grad_norm': 0.08631272491053316, 'learning_rate': 8.830677248965767e-05, 'epoch': 3.354129858657244}
{'eval_valid_loss': 0.07427363097667694, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.521, 'eval_valid_steps_per_second': 18.102, 'epoch': 3.354129858657244}
{'loss': 0.0843, 'grad_norm': 0.06585940818958835, 'learning_rate': 8.828349566202383e-05, 'epoch': 3.357580609540636}
{'loss': 0.0831, 'grad_norm': 0.08411814275406479, 'learning_rate': 8.826019876398968e-05, 'epoch': 3.361031360424028}
{'eval_valid_loss': 0.07365479320287704, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.681, 'eval_valid_steps_per_second': 17.98, 'epoch': 3.361031360424028}
{'loss': 0.0838, 'grad_norm': 0.09427901179802321, 'learning_rate': 8.823688180776879e-05, 'epoch': 3.3644821113074204}
{'loss': 0.0841, 'grad_norm': 0.09508291803714336, 'learning_rate': 8.821354480558524e-05, 'epoch': 3.3679328621908127}
{'eval_valid_loss': 0.07423754781484604, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.703, 'eval_valid_steps_per_second': 18.067, 'epoch': 3.3679328621908127}
{'loss': 0.0841, 'grad_norm': 0.11650301944392358, 'learning_rate': 8.819018776967365e-05, 'epoch': 3.371383613074205}
{'loss': 0.083, 'grad_norm': 0.08891748269890759, 'learning_rate': 8.816681071227907e-05, 'epoch': 3.3748343639575973}
{'eval_valid_loss': 0.07375698536634445, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.56, 'eval_valid_steps_per_second': 17.975, 'epoch': 3.3748343639575973}
{'loss': 0.0835, 'grad_norm': 0.08082543741296781, 'learning_rate': 8.814341364565713e-05, 'epoch': 3.3782851148409896}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0827, 'grad_norm': 0.09380235289393501, 'learning_rate': 8.811999658207388e-05, 'epoch': 3.3817358657243815}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'eval_valid_loss': 0.07412955909967422, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.907, 'eval_valid_steps_per_second': 18.119, 'epoch': 3.3817358657243815}
{'loss': 0.0845, 'grad_norm': 0.07743438304150657, 'learning_rate': 8.809655953380593e-05, 'epoch': 3.3851866166077738}
{'loss': 0.0833, 'grad_norm': 0.08361780478059196, 'learning_rate': 8.807310251314026e-05, 'epoch': 3.388637367491166}
{'eval_valid_loss': 0.07369600236415863, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.934, 'eval_valid_steps_per_second': 18.077, 'epoch': 3.388637367491166}
{'loss': 0.0839, 'grad_norm': 0.10309680212061499, 'learning_rate': 8.804962553237446e-05, 'epoch': 3.3920881183745584}
{'loss': 0.0828, 'grad_norm': 0.08766953053591738, 'learning_rate': 8.802612860381645e-05, 'epoch': 3.3955388692579507}
{'eval_valid_loss': 0.07414419949054718, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.843, 'eval_valid_steps_per_second': 18.073, 'epoch': 3.3955388692579507}
{'loss': 0.0837, 'grad_norm': 0.06962859538976635, 'learning_rate': 8.800261173978468e-05, 'epoch': 3.398989620141343}
{'loss': 0.0828, 'grad_norm': 0.07751873650433887, 'learning_rate': 8.797907495260804e-05, 'epoch': 3.402440371024735}
{'eval_valid_loss': 0.073426254093647, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.852, 'eval_valid_steps_per_second': 17.987, 'epoch': 3.402440371024735}
{'loss': 0.083, 'grad_norm': 0.07738050486887363, 'learning_rate': 8.795551825462584e-05, 'epoch': 3.405891121908127}
{'loss': 0.0826, 'grad_norm': 0.10587679686527693, 'learning_rate': 8.79319416581879e-05, 'epoch': 3.4093418727915195}
{'eval_valid_loss': 0.07374976575374603, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.804, 'eval_valid_steps_per_second': 18.028, 'epoch': 3.4093418727915195}
{'loss': 0.0824, 'grad_norm': 0.09318792746343758, 'learning_rate': 8.790834517565439e-05, 'epoch': 3.4127926236749118}
{'loss': 0.0826, 'grad_norm': 0.08994234557562802, 'learning_rate': 8.788472881939591e-05, 'epoch': 3.416243374558304}
{'eval_valid_loss': 0.0732342079281807, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.277, 'eval_valid_steps_per_second': 18.049, 'epoch': 3.416243374558304}
{'loss': 0.0836, 'grad_norm': 0.06981029308588729, 'learning_rate': 8.786109260179356e-05, 'epoch': 3.419694125441696}
{'loss': 0.0834, 'grad_norm': 0.12652225174054532, 'learning_rate': 8.783743653523875e-05, 'epoch': 3.4231448763250882}
{'eval_valid_loss': 0.07350342720746994, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.09, 'eval_valid_steps_per_second': 17.998, 'epoch': 3.4231448763250882}
{'loss': 0.0829, 'grad_norm': 0.06731851354557218, 'learning_rate': 8.781376063213339e-05, 'epoch': 3.4265956272084805}
{'loss': 0.0841, 'grad_norm': 0.10452902042146825, 'learning_rate': 8.77900649048897e-05, 'epoch': 3.430046378091873}
{'eval_valid_loss': 0.0732661634683609, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.829, 'eval_valid_steps_per_second': 18.029, 'epoch': 3.430046378091873}
{'loss': 0.0839, 'grad_norm': 0.07491420535517186, 'learning_rate': 8.776634936593038e-05, 'epoch': 3.433497128975265}
{'loss': 0.083, 'grad_norm': 0.09110939903628282, 'learning_rate': 8.774261402768844e-05, 'epoch': 3.436947879858657}
{'eval_valid_loss': 0.07355595380067825, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.126, 'eval_valid_steps_per_second': 18.128, 'epoch': 3.436947879858657}
{'loss': 0.0836, 'grad_norm': 0.12719029595217293, 'learning_rate': 8.771885890260731e-05, 'epoch': 3.4403986307420493}
{'loss': 0.0826, 'grad_norm': 0.09370710930343376, 'learning_rate': 8.769508400314081e-05, 'epoch': 3.4438493816254416}
{'eval_valid_loss': 0.07392829656600952, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.577, 'eval_valid_steps_per_second': 18.019, 'epoch': 3.4438493816254416}
{'loss': 0.083, 'grad_norm': 0.09310823184272954, 'learning_rate': 8.767128934175307e-05, 'epoch': 3.447300132508834}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0841, 'grad_norm': 0.08673337637562464, 'learning_rate': 8.764747493091863e-05, 'epoch': 3.4507508833922262}
{'eval_valid_loss': 0.0740794911980629, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.221, 'eval_valid_steps_per_second': 18.003, 'epoch': 3.4507508833922262}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0834, 'grad_norm': 0.07507976740104724, 'learning_rate': 8.762364078312236e-05, 'epoch': 3.4542016342756185}
{'loss': 0.0826, 'grad_norm': 0.08170823027246096, 'learning_rate': 8.75997869108595e-05, 'epoch': 3.4576523851590104}
{'eval_valid_loss': 0.07356762886047363, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 421.004, 'eval_valid_steps_per_second': 18.08, 'epoch': 3.4576523851590104}
{'loss': 0.0822, 'grad_norm': 0.08835717935344947, 'learning_rate': 8.757591332663562e-05, 'epoch': 3.4611031360424027}
{'loss': 0.0827, 'grad_norm': 0.09663915941785313, 'learning_rate': 8.755202004296659e-05, 'epoch': 3.464553886925795}
{'eval_valid_loss': 0.07332100719213486, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.305, 'eval_valid_steps_per_second': 18.093, 'epoch': 3.464553886925795}
{'loss': 0.0835, 'grad_norm': 0.09818902615064429, 'learning_rate': 8.752810707237865e-05, 'epoch': 3.4680046378091873}
{'loss': 0.0828, 'grad_norm': 0.06726918662683862, 'learning_rate': 8.750417442740836e-05, 'epoch': 3.4714553886925796}
{'eval_valid_loss': 0.07354889810085297, 'eval_valid_runtime': 0.3998, 'eval_valid_samples_per_second': 407.728, 'eval_valid_steps_per_second': 17.51, 'epoch': 3.4714553886925796}
{'loss': 0.0841, 'grad_norm': 0.09641944444872573, 'learning_rate': 8.748022212060257e-05, 'epoch': 3.474906139575972}
{'loss': 0.0822, 'grad_norm': 0.08424678937702111, 'learning_rate': 8.745625016451847e-05, 'epoch': 3.478356890459364}
{'eval_valid_loss': 0.07363463938236237, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.987, 'eval_valid_steps_per_second': 17.95, 'epoch': 3.478356890459364}
{'loss': 0.0835, 'grad_norm': 0.0744016428671374, 'learning_rate': 8.743225857172351e-05, 'epoch': 3.481807641342756}
{'loss': 0.083, 'grad_norm': 0.07033902355272396, 'learning_rate': 8.740824735479545e-05, 'epoch': 3.4852583922261484}
{'eval_valid_loss': 0.07346192747354507, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.797, 'eval_valid_steps_per_second': 17.985, 'epoch': 3.4852583922261484}
{'loss': 0.0829, 'grad_norm': 0.08150660305688757, 'learning_rate': 8.738421652632236e-05, 'epoch': 3.4887091431095407}
{'loss': 0.0819, 'grad_norm': 0.06823921976639348, 'learning_rate': 8.736016609890258e-05, 'epoch': 3.492159893992933}
{'eval_valid_loss': 0.0733572468161583, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.556, 'eval_valid_steps_per_second': 17.975, 'epoch': 3.492159893992933}
{'loss': 0.0827, 'grad_norm': 0.07301214290956633, 'learning_rate': 8.733609608514473e-05, 'epoch': 3.495610644876325}
{'loss': 0.083, 'grad_norm': 0.08902836062011148, 'learning_rate': 8.731200649766766e-05, 'epoch': 3.499061395759717}
{'eval_valid_loss': 0.07358254492282867, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.701, 'eval_valid_steps_per_second': 18.024, 'epoch': 3.499061395759717}
{'loss': 0.0833, 'grad_norm': 0.06966974545514322, 'learning_rate': 8.728789734910052e-05, 'epoch': 3.5025121466431095}
{'loss': 0.0837, 'grad_norm': 0.09028769743061747, 'learning_rate': 8.726376865208272e-05, 'epoch': 3.505962897526502}
{'eval_valid_loss': 0.07359098643064499, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 417.037, 'eval_valid_steps_per_second': 17.91, 'epoch': 3.505962897526502}
{'loss': 0.0825, 'grad_norm': 0.09865867944193717, 'learning_rate': 8.72396204192639e-05, 'epoch': 3.509413648409894}
{'loss': 0.0815, 'grad_norm': 0.08185486969015937, 'learning_rate': 8.721545266330396e-05, 'epoch': 3.512864399293286}
{'eval_valid_loss': 0.07280848920345306, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.84, 'eval_valid_steps_per_second': 17.901, 'epoch': 3.512864399293286}
{'loss': 0.0828, 'grad_norm': 0.07323617850926312, 'learning_rate': 8.719126539687296e-05, 'epoch': 3.5163151501766783}
{'loss': 0.0824, 'grad_norm': 0.12317508045068724, 'learning_rate': 8.716705863265133e-05, 'epoch': 3.5197659010600706}
{'eval_valid_loss': 0.07301662862300873, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.854, 'eval_valid_steps_per_second': 17.945, 'epoch': 3.5197659010600706}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0828, 'grad_norm': 0.08103971711565146, 'learning_rate': 8.71428323833296e-05, 'epoch': 3.523216651943463}
{'loss': 0.0829, 'grad_norm': 0.0840519299243024, 'learning_rate': 8.711858666160855e-05, 'epoch': 3.526667402826855}
{'eval_valid_loss': 0.07285109907388687, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.124, 'eval_valid_steps_per_second': 17.956, 'epoch': 3.526667402826855}
{'loss': 0.0837, 'grad_norm': 0.07249284754708739, 'learning_rate': 8.70943214801992e-05, 'epoch': 3.5301181537102475}
{'loss': 0.0825, 'grad_norm': 0.13448140147337076, 'learning_rate': 8.707003685182272e-05, 'epoch': 3.53356890459364}
{'eval_valid_loss': 0.07320859283208847, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.356, 'eval_valid_steps_per_second': 17.923, 'epoch': 3.53356890459364}
{'loss': 0.0826, 'grad_norm': 0.08481662187592587, 'learning_rate': 8.704573278921053e-05, 'epoch': 3.5370196554770317}
{'loss': 0.0847, 'grad_norm': 0.10375757695442189, 'learning_rate': 8.702140930510419e-05, 'epoch': 3.540470406360424}
{'eval_valid_loss': 0.07342736423015594, 'eval_valid_runtime': 0.3931, 'eval_valid_samples_per_second': 414.699, 'eval_valid_steps_per_second': 17.809, 'epoch': 3.540470406360424}
{'loss': 0.082, 'grad_norm': 0.07119386387612711, 'learning_rate': 8.699706641225549e-05, 'epoch': 3.5439211572438163}
{'loss': 0.0836, 'grad_norm': 0.060629391182881014, 'learning_rate': 8.697270412342635e-05, 'epoch': 3.5473719081272086}
{'eval_valid_loss': 0.07363083213567734, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.494, 'eval_valid_steps_per_second': 17.886, 'epoch': 3.5473719081272086}
{'loss': 0.0816, 'grad_norm': 0.08133217836174222, 'learning_rate': 8.694832245138885e-05, 'epoch': 3.550822659010601}
{'loss': 0.0827, 'grad_norm': 0.0757328043381323, 'learning_rate': 8.692392140892531e-05, 'epoch': 3.5542734098939928}
{'eval_valid_loss': 0.07325465232133865, 'eval_valid_runtime': 0.3912, 'eval_valid_samples_per_second': 416.676, 'eval_valid_steps_per_second': 17.894, 'epoch': 3.5542734098939928}
{'loss': 0.0831, 'grad_norm': 0.08495930970382352, 'learning_rate': 8.689950100882812e-05, 'epoch': 3.557724160777385}
{'loss': 0.0826, 'grad_norm': 0.0729899394704614, 'learning_rate': 8.687506126389986e-05, 'epoch': 3.5611749116607774}
{'eval_valid_loss': 0.0734269991517067, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.885, 'eval_valid_steps_per_second': 17.903, 'epoch': 3.5611749116607774}
{'loss': 0.0834, 'grad_norm': 0.08429885761257166, 'learning_rate': 8.685060218695324e-05, 'epoch': 3.5646256625441697}
{'loss': 0.0825, 'grad_norm': 0.07306377513630123, 'learning_rate': 8.682612379081112e-05, 'epoch': 3.568076413427562}
{'eval_valid_loss': 0.07329108566045761, 'eval_valid_runtime': 0.3921, 'eval_valid_samples_per_second': 415.701, 'eval_valid_steps_per_second': 17.852, 'epoch': 3.568076413427562}
{'loss': 0.0816, 'grad_norm': 0.08655200693212327, 'learning_rate': 8.680162608830647e-05, 'epoch': 3.571527164310954}
{'loss': 0.0834, 'grad_norm': 0.06789903976092831, 'learning_rate': 8.677710909228238e-05, 'epoch': 3.574977915194346}
{'eval_valid_loss': 0.07322881370782852, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.219, 'eval_valid_steps_per_second': 17.96, 'epoch': 3.574977915194346}
{'loss': 0.0822, 'grad_norm': 0.08156051269002694, 'learning_rate': 8.675257281559208e-05, 'epoch': 3.5784286660777385}
{'loss': 0.0829, 'grad_norm': 0.07214870256507151, 'learning_rate': 8.672801727109889e-05, 'epoch': 3.5818794169611308}
{'eval_valid_loss': 0.07346514612436295, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.628, 'eval_valid_steps_per_second': 17.935, 'epoch': 3.5818794169611308}
{'loss': 0.0825, 'grad_norm': 0.10404560120545774, 'learning_rate': 8.670344247167621e-05, 'epoch': 3.585330167844523}
{'loss': 0.0825, 'grad_norm': 0.08088480506163725, 'learning_rate': 8.667884843020757e-05, 'epoch': 3.588780918727915}
{'eval_valid_loss': 0.07348068803548813, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.77, 'eval_valid_steps_per_second': 17.941, 'epoch': 3.588780918727915}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0834, 'grad_norm': 0.08946337254755479, 'learning_rate': 8.665423515958657e-05, 'epoch': 3.5922316696113077}
{'loss': 0.0834, 'grad_norm': 0.07039104120999108, 'learning_rate': 8.662960267271691e-05, 'epoch': 3.5956824204946995}
{'eval_valid_loss': 0.07339248061180115, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 415.987, 'eval_valid_steps_per_second': 17.864, 'epoch': 3.5956824204946995}
{'loss': 0.0814, 'grad_norm': 0.08709080699777268, 'learning_rate': 8.660495098251236e-05, 'epoch': 3.599133171378092}
{'loss': 0.0825, 'grad_norm': 0.08148867843961435, 'learning_rate': 8.65802801018967e-05, 'epoch': 3.602583922261484}
{'eval_valid_loss': 0.07328521460294724, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.296, 'eval_valid_steps_per_second': 17.878, 'epoch': 3.602583922261484}
{'loss': 0.0818, 'grad_norm': 0.08472152582190827, 'learning_rate': 8.655559004380387e-05, 'epoch': 3.6060346731448765}
{'loss': 0.0821, 'grad_norm': 0.07216053793214504, 'learning_rate': 8.653088082117777e-05, 'epoch': 3.6094854240282688}
{'eval_valid_loss': 0.07361722737550735, 'eval_valid_runtime': 0.3944, 'eval_valid_samples_per_second': 413.268, 'eval_valid_steps_per_second': 17.748, 'epoch': 3.6094854240282688}
{'loss': 0.083, 'grad_norm': 0.0768040065783958, 'learning_rate': 8.65061524469724e-05, 'epoch': 3.6129361749116606}
{'loss': 0.0832, 'grad_norm': 0.07538698867767638, 'learning_rate': 8.648140493415182e-05, 'epoch': 3.616386925795053}
{'eval_valid_loss': 0.07322005927562714, 'eval_valid_runtime': 0.3919, 'eval_valid_samples_per_second': 415.934, 'eval_valid_steps_per_second': 17.862, 'epoch': 3.616386925795053}
{'loss': 0.082, 'grad_norm': 0.06189284491854769, 'learning_rate': 8.645663829569007e-05, 'epoch': 3.6198376766784452}
{'loss': 0.0823, 'grad_norm': 0.09157206255816377, 'learning_rate': 8.643185254457123e-05, 'epoch': 3.6232884275618376}
{'eval_valid_loss': 0.07316212356090546, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.851, 'eval_valid_steps_per_second': 17.902, 'epoch': 3.6232884275618376}
{'loss': 0.0829, 'grad_norm': 0.08068255772141326, 'learning_rate': 8.640704769378942e-05, 'epoch': 3.62673917844523}
{'loss': 0.0831, 'grad_norm': 0.09107145859852216, 'learning_rate': 8.638222375634876e-05, 'epoch': 3.6301899293286217}
{'eval_valid_loss': 0.07320178300142288, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.697, 'eval_valid_steps_per_second': 17.938, 'epoch': 3.6301899293286217}
{'loss': 0.0832, 'grad_norm': 0.09335978266043297, 'learning_rate': 8.63573807452634e-05, 'epoch': 3.633640680212014}
{'loss': 0.0819, 'grad_norm': 0.09277575034706229, 'learning_rate': 8.633251867355745e-05, 'epoch': 3.6370914310954063}
{'eval_valid_loss': 0.0732458308339119, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.983, 'eval_valid_steps_per_second': 17.95, 'epoch': 3.6370914310954063}
{'loss': 0.0816, 'grad_norm': 0.08181820343316758, 'learning_rate': 8.630763755426502e-05, 'epoch': 3.6405421819787986}
{'loss': 0.0818, 'grad_norm': 0.09080187460735356, 'learning_rate': 8.628273740043023e-05, 'epoch': 3.643992932862191}
{'eval_valid_loss': 0.0728597342967987, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.635, 'eval_valid_steps_per_second': 17.978, 'epoch': 3.643992932862191}
{'loss': 0.0825, 'grad_norm': 0.09213059198714822, 'learning_rate': 8.625781822510717e-05, 'epoch': 3.647443683745583}
{'loss': 0.0827, 'grad_norm': 0.087989758754708, 'learning_rate': 8.623288004135989e-05, 'epoch': 3.650894434628975}
{'eval_valid_loss': 0.07275950163602829, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.289, 'eval_valid_steps_per_second': 18.049, 'epoch': 3.650894434628975}
{'loss': 0.0828, 'grad_norm': 0.0643510421546913, 'learning_rate': 8.620792286226244e-05, 'epoch': 3.6543451855123674}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0828, 'grad_norm': 0.07102848194381779, 'learning_rate': 8.618294670089875e-05, 'epoch': 3.6577959363957597}
{'eval_valid_loss': 0.0730835571885109, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.383, 'eval_valid_steps_per_second': 17.967, 'epoch': 3.6577959363957597}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.081, 'grad_norm': 0.08406364486199018, 'learning_rate': 8.615795157036281e-05, 'epoch': 3.661246687279152}
{'loss': 0.0814, 'grad_norm': 0.05779712999666421, 'learning_rate': 8.613293748375846e-05, 'epoch': 3.664697438162544}
{'eval_valid_loss': 0.07332897931337357, 'eval_valid_runtime': 0.3975, 'eval_valid_samples_per_second': 410.013, 'eval_valid_steps_per_second': 17.608, 'epoch': 3.664697438162544}
{'loss': 0.0833, 'grad_norm': 0.07681176836589804, 'learning_rate': 8.610790445419954e-05, 'epoch': 3.6681481890459366}
{'loss': 0.0833, 'grad_norm': 0.09009357703555386, 'learning_rate': 8.608285249480978e-05, 'epoch': 3.6715989399293285}
{'eval_valid_loss': 0.07356831431388855, 'eval_valid_runtime': 0.3857, 'eval_valid_samples_per_second': 422.605, 'eval_valid_steps_per_second': 18.149, 'epoch': 3.6715989399293285}
{'loss': 0.0837, 'grad_norm': 0.10621218045360527, 'learning_rate': 8.605778161872285e-05, 'epoch': 3.675049690812721}
{'loss': 0.0831, 'grad_norm': 0.07014507907018769, 'learning_rate': 8.603269183908235e-05, 'epoch': 3.678500441696113}
{'eval_valid_loss': 0.07320554554462433, 'eval_valid_runtime': 0.3862, 'eval_valid_samples_per_second': 422.078, 'eval_valid_steps_per_second': 18.126, 'epoch': 3.678500441696113}
{'loss': 0.0819, 'grad_norm': 0.06677381748784181, 'learning_rate': 8.600758316904179e-05, 'epoch': 3.6819511925795054}
{'loss': 0.0833, 'grad_norm': 0.07615172546353381, 'learning_rate': 8.598245562176455e-05, 'epoch': 3.6854019434628977}
{'eval_valid_loss': 0.07390446960926056, 'eval_valid_runtime': 0.385, 'eval_valid_samples_per_second': 423.422, 'eval_valid_steps_per_second': 18.184, 'epoch': 3.6854019434628977}
{'loss': 0.0833, 'grad_norm': 0.084594809841243, 'learning_rate': 8.595730921042393e-05, 'epoch': 3.6888526943462896}
{'loss': 0.0826, 'grad_norm': 0.09448682608584742, 'learning_rate': 8.593214394820312e-05, 'epoch': 3.692303445229682}
{'eval_valid_loss': 0.07246210426092148, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.215, 'eval_valid_steps_per_second': 18.132, 'epoch': 3.692303445229682}
{'loss': 0.0833, 'grad_norm': 0.09331360591862574, 'learning_rate': 8.59069598482952e-05, 'epoch': 3.695754196113074}
{'loss': 0.0817, 'grad_norm': 0.09278954711916675, 'learning_rate': 8.588175692390314e-05, 'epoch': 3.6992049469964665}
{'eval_valid_loss': 0.07291564345359802, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.989, 'eval_valid_steps_per_second': 18.036, 'epoch': 3.6992049469964665}
{'loss': 0.0825, 'grad_norm': 0.07390512742324652, 'learning_rate': 8.585653518823971e-05, 'epoch': 3.702655697879859}
{'loss': 0.0825, 'grad_norm': 0.1052720361187089, 'learning_rate': 8.58312946545276e-05, 'epoch': 3.7061064487632507}
{'eval_valid_loss': 0.07294493168592453, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.607, 'eval_valid_steps_per_second': 18.063, 'epoch': 3.7061064487632507}
{'loss': 0.0828, 'grad_norm': 0.09836875421667235, 'learning_rate': 8.580603533599936e-05, 'epoch': 3.709557199646643}
{'loss': 0.0821, 'grad_norm': 0.09725649927433234, 'learning_rate': 8.578075724589736e-05, 'epoch': 3.7130079505300353}
{'eval_valid_loss': 0.07337024062871933, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.645, 'eval_valid_steps_per_second': 18.065, 'epoch': 3.7130079505300353}
{'loss': 0.082, 'grad_norm': 0.08583021837741543, 'learning_rate': 8.575546039747382e-05, 'epoch': 3.7164587014134276}
{'loss': 0.0819, 'grad_norm': 0.08899526410640071, 'learning_rate': 8.573014480399081e-05, 'epoch': 3.71990945229682}
{'eval_valid_loss': 0.07284742593765259, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.927, 'eval_valid_steps_per_second': 17.905, 'epoch': 3.71990945229682}
{'loss': 0.0824, 'grad_norm': 0.10582229790532659, 'learning_rate': 8.570481047872019e-05, 'epoch': 3.7233602031802118}
{'loss': 0.0829, 'grad_norm': 0.0809237000706484, 'learning_rate': 8.56794574349437e-05, 'epoch': 3.726810954063604}
{'eval_valid_loss': 0.07302237302064896, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 415.985, 'eval_valid_steps_per_second': 17.864, 'epoch': 3.726810954063604}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.082, 'grad_norm': 0.08670472072744483, 'learning_rate': 8.565408568595282e-05, 'epoch': 3.7302617049469964}
{'loss': 0.0831, 'grad_norm': 0.08113204640752616, 'learning_rate': 8.562869524504888e-05, 'epoch': 3.7337124558303887}
{'eval_valid_loss': 0.07290911674499512, 'eval_valid_runtime': 0.3906, 'eval_valid_samples_per_second': 417.354, 'eval_valid_steps_per_second': 17.923, 'epoch': 3.7337124558303887}
{'loss': 0.0818, 'grad_norm': 0.06697386114727283, 'learning_rate': 8.560328612554303e-05, 'epoch': 3.737163206713781}
{'loss': 0.082, 'grad_norm': 0.08483199801011311, 'learning_rate': 8.557785834075613e-05, 'epoch': 3.7406139575971733}
{'eval_valid_loss': 0.07229438424110413, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.597, 'eval_valid_steps_per_second': 18.02, 'epoch': 3.7406139575971733}
{'loss': 0.0818, 'grad_norm': 0.07029887886408595, 'learning_rate': 8.555241190401896e-05, 'epoch': 3.7440647084805656}
{'loss': 0.083, 'grad_norm': 0.07162895060071368, 'learning_rate': 8.552694682867192e-05, 'epoch': 3.7475154593639575}
{'eval_valid_loss': 0.07256888598203659, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 420.012, 'eval_valid_steps_per_second': 18.037, 'epoch': 3.7475154593639575}
{'loss': 0.082, 'grad_norm': 0.08457494380722863, 'learning_rate': 8.550146312806532e-05, 'epoch': 3.7509662102473498}
{'loss': 0.0827, 'grad_norm': 0.07004237322650697, 'learning_rate': 8.547596081555916e-05, 'epoch': 3.754416961130742}
{'eval_valid_loss': 0.07273490726947784, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.664, 'eval_valid_steps_per_second': 17.979, 'epoch': 3.754416961130742}
{'loss': 0.0828, 'grad_norm': 0.06679039910382253, 'learning_rate': 8.545043990452317e-05, 'epoch': 3.7578677120141344}
{'loss': 0.0819, 'grad_norm': 0.07538699415488918, 'learning_rate': 8.542490040833692e-05, 'epoch': 3.7613184628975267}
{'eval_valid_loss': 0.07287943363189697, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.573, 'eval_valid_steps_per_second': 18.018, 'epoch': 3.7613184628975267}
{'loss': 0.0832, 'grad_norm': 0.09534188813496064, 'learning_rate': 8.539934234038968e-05, 'epoch': 3.7647692137809186}
{'loss': 0.0828, 'grad_norm': 0.06783277148274636, 'learning_rate': 8.537376571408042e-05, 'epoch': 3.768219964664311}
{'eval_valid_loss': 0.07273231446743011, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.752, 'eval_valid_steps_per_second': 18.026, 'epoch': 3.768219964664311}
{'loss': 0.0829, 'grad_norm': 0.08282049985550768, 'learning_rate': 8.534817054281787e-05, 'epoch': 3.771670715547703}
{'loss': 0.0826, 'grad_norm': 0.0633741654129045, 'learning_rate': 8.532255684002053e-05, 'epoch': 3.7751214664310955}
{'eval_valid_loss': 0.0728873759508133, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.966, 'eval_valid_steps_per_second': 18.078, 'epoch': 3.7751214664310955}
{'loss': 0.0838, 'grad_norm': 0.07941905173319633, 'learning_rate': 8.529692461911653e-05, 'epoch': 3.778572217314488}
{'loss': 0.0831, 'grad_norm': 0.06793288234119792, 'learning_rate': 8.527127389354374e-05, 'epoch': 3.7820229681978796}
{'eval_valid_loss': 0.07292767614126205, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.18, 'eval_valid_steps_per_second': 18.045, 'epoch': 3.7820229681978796}
{'loss': 0.0824, 'grad_norm': 0.07679569385166334, 'learning_rate': 8.524560467674978e-05, 'epoch': 3.785473719081272}
{'loss': 0.0824, 'grad_norm': 0.06588118744468965, 'learning_rate': 8.521991698219189e-05, 'epoch': 3.7889244699646643}
{'eval_valid_loss': 0.07266319543123245, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.548, 'eval_valid_steps_per_second': 18.06, 'epoch': 3.7889244699646643}
{'loss': 0.0815, 'grad_norm': 0.06774768938112898, 'learning_rate': 8.519421082333706e-05, 'epoch': 3.7923752208480566}
{'loss': 0.0821, 'grad_norm': 0.05877839520429164, 'learning_rate': 8.516848621366188e-05, 'epoch': 3.795825971731449}
{'eval_valid_loss': 0.0726184993982315, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.9, 'eval_valid_steps_per_second': 18.075, 'epoch': 3.795825971731449}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0811, 'grad_norm': 0.0714269913890864, 'learning_rate': 8.514274316665272e-05, 'epoch': 3.7992767226148407}
{'loss': 0.0828, 'grad_norm': 0.09075299957907615, 'learning_rate': 8.511698169580551e-05, 'epoch': 3.8027274734982335}
{'eval_valid_loss': 0.07284892350435257, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.911, 'eval_valid_steps_per_second': 17.99, 'epoch': 3.8027274734982335}
{'loss': 0.083, 'grad_norm': 0.08658481918602018, 'learning_rate': 8.509120181462593e-05, 'epoch': 3.8061782243816253}
{'loss': 0.0817, 'grad_norm': 0.08379710409192007, 'learning_rate': 8.506540353662924e-05, 'epoch': 3.8096289752650176}
{'eval_valid_loss': 0.07251476496458054, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.142, 'eval_valid_steps_per_second': 17.914, 'epoch': 3.8096289752650176}
{'loss': 0.0822, 'grad_norm': 0.08950710769632172, 'learning_rate': 8.503958687534037e-05, 'epoch': 3.81307972614841}
{'loss': 0.0822, 'grad_norm': 0.07333386590506746, 'learning_rate': 8.501375184429392e-05, 'epoch': 3.8165304770318023}
{'eval_valid_loss': 0.07268048077821732, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 416.963, 'eval_valid_steps_per_second': 17.906, 'epoch': 3.8165304770318023}
{'loss': 0.082, 'grad_norm': 0.06660315423525355, 'learning_rate': 8.49878984570341e-05, 'epoch': 3.8199812279151946}
{'loss': 0.0815, 'grad_norm': 0.08306061984798203, 'learning_rate': 8.49620267271147e-05, 'epoch': 3.8234319787985864}
{'eval_valid_loss': 0.07282117754220963, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.675, 'eval_valid_steps_per_second': 17.98, 'epoch': 3.8234319787985864}
{'loss': 0.0806, 'grad_norm': 0.09003681814704921, 'learning_rate': 8.493613666809916e-05, 'epoch': 3.8268827296819787}
{'loss': 0.0823, 'grad_norm': 0.08487214368068961, 'learning_rate': 8.491022829356057e-05, 'epoch': 3.830333480565371}
{'eval_valid_loss': 0.07264500856399536, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.305, 'eval_valid_steps_per_second': 17.964, 'epoch': 3.830333480565371}
{'loss': 0.0826, 'grad_norm': 0.06595569258003123, 'learning_rate': 8.488430161708157e-05, 'epoch': 3.8337842314487633}
{'loss': 0.0821, 'grad_norm': 0.12191364501720954, 'learning_rate': 8.485835665225437e-05, 'epoch': 3.8372349823321557}
{'eval_valid_loss': 0.07293959707021713, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.903, 'eval_valid_steps_per_second': 17.99, 'epoch': 3.8372349823321557}
{'loss': 0.0818, 'grad_norm': 0.07209982470479331, 'learning_rate': 8.483239341268085e-05, 'epoch': 3.8406857332155475}
{'loss': 0.0811, 'grad_norm': 0.11767244995860796, 'learning_rate': 8.48064119119724e-05, 'epoch': 3.84413648409894}
{'eval_valid_loss': 0.07274898886680603, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.237, 'eval_valid_steps_per_second': 17.961, 'epoch': 3.84413648409894}
{'loss': 0.082, 'grad_norm': 0.07785677656615063, 'learning_rate': 8.478041216375005e-05, 'epoch': 3.847587234982332}
{'loss': 0.0821, 'grad_norm': 0.08222078493012053, 'learning_rate': 8.475439418164431e-05, 'epoch': 3.8510379858657244}
{'eval_valid_loss': 0.07277087867259979, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.848, 'eval_valid_steps_per_second': 17.944, 'epoch': 3.8510379858657244}
{'loss': 0.0821, 'grad_norm': 0.07519152975959867, 'learning_rate': 8.472835797929533e-05, 'epoch': 3.8544887367491167}
{'loss': 0.0811, 'grad_norm': 0.06110090246267685, 'learning_rate': 8.470230357035275e-05, 'epoch': 3.8579394876325086}
{'eval_valid_loss': 0.07239263504743576, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.337, 'eval_valid_steps_per_second': 17.965, 'epoch': 3.8579394876325086}
{'loss': 0.0813, 'grad_norm': 0.10998463680059428, 'learning_rate': 8.46762309684758e-05, 'epoch': 3.861390238515901}
{'loss': 0.0817, 'grad_norm': 0.06536913121049831, 'learning_rate': 8.465014018733323e-05, 'epoch': 3.864840989399293}
{'eval_valid_loss': 0.07215040177106857, 'eval_valid_runtime': 0.3976, 'eval_valid_samples_per_second': 409.944, 'eval_valid_steps_per_second': 17.605, 'epoch': 3.864840989399293}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0828, 'grad_norm': 0.10553728793877137, 'learning_rate': 8.46240312406033e-05, 'epoch': 3.8682917402826855}
{'loss': 0.0823, 'grad_norm': 0.07724259849995391, 'learning_rate': 8.459790414197386e-05, 'epoch': 3.871742491166078}
{'eval_valid_loss': 0.07271601259708405, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.671, 'eval_valid_steps_per_second': 17.937, 'epoch': 3.871742491166078}
{'loss': 0.0821, 'grad_norm': 0.0820285321561346, 'learning_rate': 8.457175890514219e-05, 'epoch': 3.8751932420494697}
{'loss': 0.0812, 'grad_norm': 0.06492542711624855, 'learning_rate': 8.454559554381513e-05, 'epoch': 3.8786439929328624}
{'eval_valid_loss': 0.07262787222862244, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.822, 'eval_valid_steps_per_second': 17.986, 'epoch': 3.8786439929328624}
{'loss': 0.0822, 'grad_norm': 0.06994158107331719, 'learning_rate': 8.451941407170903e-05, 'epoch': 3.8820947438162543}
{'loss': 0.0828, 'grad_norm': 0.07470425495625355, 'learning_rate': 8.44932145025497e-05, 'epoch': 3.8855454946996466}
{'eval_valid_loss': 0.07270120829343796, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.105, 'eval_valid_steps_per_second': 17.955, 'epoch': 3.8855454946996466}
{'loss': 0.0826, 'grad_norm': 0.07879960308779449, 'learning_rate': 8.446699685007245e-05, 'epoch': 3.888996245583039}
{'loss': 0.0831, 'grad_norm': 0.09761378424804007, 'learning_rate': 8.444076112802207e-05, 'epoch': 3.892446996466431}
{'eval_valid_loss': 0.0724831223487854, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 416.935, 'eval_valid_steps_per_second': 17.905, 'epoch': 3.892446996466431}
{'loss': 0.0821, 'grad_norm': 0.09068464679707271, 'learning_rate': 8.441450735015287e-05, 'epoch': 3.8958977473498235}
{'loss': 0.0826, 'grad_norm': 0.05433997046642844, 'learning_rate': 8.438823553022852e-05, 'epoch': 3.8993484982332154}
{'eval_valid_loss': 0.07261116057634354, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.304, 'eval_valid_steps_per_second': 17.964, 'epoch': 3.8993484982332154}
{'loss': 0.0818, 'grad_norm': 0.06456127702939249, 'learning_rate': 8.436194568202226e-05, 'epoch': 3.9027992491166077}
{'loss': 0.0812, 'grad_norm': 0.09999725195237599, 'learning_rate': 8.43356378193167e-05, 'epoch': 3.90625}
{'eval_valid_loss': 0.07262996584177017, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.585, 'eval_valid_steps_per_second': 17.976, 'epoch': 3.90625}
{'loss': 0.0823, 'grad_norm': 0.07875966072925444, 'learning_rate': 8.430931195590398e-05, 'epoch': 3.9097007508833923}
{'loss': 0.0816, 'grad_norm': 0.07156135297429068, 'learning_rate': 8.428296810558556e-05, 'epoch': 3.9131515017667846}
{'eval_valid_loss': 0.07257913798093796, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.025, 'eval_valid_steps_per_second': 17.995, 'epoch': 3.9131515017667846}
{'loss': 0.0812, 'grad_norm': 0.08675154839013874, 'learning_rate': 8.425660628217244e-05, 'epoch': 3.9166022526501765}
{'loss': 0.0807, 'grad_norm': 0.07735953025893426, 'learning_rate': 8.423022649948498e-05, 'epoch': 3.920053003533569}
{'eval_valid_loss': 0.07268782705068588, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.475, 'eval_valid_steps_per_second': 18.014, 'epoch': 3.920053003533569}
{'loss': 0.0823, 'grad_norm': 0.06504393824846998, 'learning_rate': 8.420382877135297e-05, 'epoch': 3.923503754416961}
{'loss': 0.0817, 'grad_norm': 0.10882320691401803, 'learning_rate': 8.417741311161563e-05, 'epoch': 3.9269545053003534}
{'eval_valid_loss': 0.07248523086309433, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.448, 'eval_valid_steps_per_second': 17.97, 'epoch': 3.9269545053003534}
{'loss': 0.0828, 'grad_norm': 0.059065526586000616, 'learning_rate': 8.415097953412154e-05, 'epoch': 3.9304052561837457}
{'loss': 0.0835, 'grad_norm': 0.05775063024796502, 'learning_rate': 8.41245280527287e-05, 'epoch': 3.9338560070671376}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.07279884070158005, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.044, 'eval_valid_steps_per_second': 17.91, 'epoch': 3.9338560070671376}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0823, 'grad_norm': 0.0709638695740497, 'learning_rate': 8.409805868130447e-05, 'epoch': 3.9373067579505303}
{'loss': 0.0821, 'grad_norm': 0.08177304847592284, 'learning_rate': 8.407157143372566e-05, 'epoch': 3.940757508833922}
{'eval_valid_loss': 0.07258880138397217, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.667, 'eval_valid_steps_per_second': 17.98, 'epoch': 3.940757508833922}
{'loss': 0.0835, 'grad_norm': 0.08445643723380496, 'learning_rate': 8.404506632387837e-05, 'epoch': 3.9442082597173145}
{'loss': 0.0808, 'grad_norm': 0.11002913714464614, 'learning_rate': 8.40185433656581e-05, 'epoch': 3.947659010600707}
{'eval_valid_loss': 0.07261446863412857, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.908, 'eval_valid_steps_per_second': 17.947, 'epoch': 3.947659010600707}
{'loss': 0.0814, 'grad_norm': 0.08159866182671224, 'learning_rate': 8.39920025729697e-05, 'epoch': 3.951109761484099}
{'loss': 0.0825, 'grad_norm': 0.07328597940152426, 'learning_rate': 8.396544395972738e-05, 'epoch': 3.9545605123674914}
{'eval_valid_loss': 0.07268419861793518, 'eval_valid_runtime': 0.3893, 'eval_valid_samples_per_second': 418.656, 'eval_valid_steps_per_second': 17.979, 'epoch': 3.9545605123674914}
{'loss': 0.0814, 'grad_norm': 0.0814051773340599, 'learning_rate': 8.393886753985467e-05, 'epoch': 3.9580112632508833}
{'loss': 0.0817, 'grad_norm': 0.08593079785674208, 'learning_rate': 8.391227332728448e-05, 'epoch': 3.9614620141342756}
{'eval_valid_loss': 0.07222751528024673, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.015, 'eval_valid_steps_per_second': 17.952, 'epoch': 3.9614620141342756}
{'loss': 0.0829, 'grad_norm': 0.0876560235460835, 'learning_rate': 8.388566133595899e-05, 'epoch': 3.964912765017668}
{'loss': 0.0826, 'grad_norm': 0.08203141666222287, 'learning_rate': 8.385903157982973e-05, 'epoch': 3.96836351590106}
{'eval_valid_loss': 0.07256649434566498, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.191, 'eval_valid_steps_per_second': 17.916, 'epoch': 3.96836351590106}
{'loss': 0.0825, 'grad_norm': 0.0694383128607341, 'learning_rate': 8.383238407285759e-05, 'epoch': 3.9718142667844525}
{'loss': 0.0812, 'grad_norm': 0.06694943096254634, 'learning_rate': 8.380571882901265e-05, 'epoch': 3.9752650176678443}
{'eval_valid_loss': 0.07274139672517776, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.549, 'eval_valid_steps_per_second': 18.06, 'epoch': 3.9752650176678443}
{'loss': 0.0824, 'grad_norm': 0.08395626804956584, 'learning_rate': 8.37790358622744e-05, 'epoch': 3.9787157685512367}
{'loss': 0.0824, 'grad_norm': 0.09911887451650743, 'learning_rate': 8.375233518663156e-05, 'epoch': 3.982166519434629}
{'eval_valid_loss': 0.07256481051445007, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.479, 'eval_valid_steps_per_second': 18.014, 'epoch': 3.982166519434629}
{'loss': 0.0821, 'grad_norm': 0.059206315219187934, 'learning_rate': 8.37256168160822e-05, 'epoch': 3.9856172703180213}
{'loss': 0.0821, 'grad_norm': 0.07658455197684423, 'learning_rate': 8.369888076463355e-05, 'epoch': 3.9890680212014136}
{'eval_valid_loss': 0.07259176671504974, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.006, 'eval_valid_steps_per_second': 17.994, 'epoch': 3.9890680212014136}
{'loss': 0.0815, 'grad_norm': 0.06862722343879885, 'learning_rate': 8.367212704630221e-05, 'epoch': 3.9925187720848054}
{'loss': 0.0813, 'grad_norm': 0.06687102268560116, 'learning_rate': 8.364535567511402e-05, 'epoch': 3.9959695229681977}
{'eval_valid_loss': 0.0728967934846878, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.548, 'eval_valid_steps_per_second': 17.932, 'epoch': 3.9959695229681977}
{'loss': 0.0819, 'grad_norm': 0.09024619614739092, 'learning_rate': 8.361856666510405e-05, 'epoch': 3.99942027385159}
{'loss': 0.0816, 'grad_norm': 0.05866458944046408, 'learning_rate': 8.359176003031666e-05, 'epoch': 4.002871024734982}
{'eval_valid_loss': 0.07248669862747192, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.409, 'eval_valid_steps_per_second': 17.968, 'epoch': 4.002871024734982}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0805, 'grad_norm': 0.08265272218698412, 'learning_rate': 8.356493578480537e-05, 'epoch': 4.006321775618375}
{'loss': 0.0821, 'grad_norm': 0.0645315768257004, 'learning_rate': 8.353809394263305e-05, 'epoch': 4.0097725265017665}
{'eval_valid_loss': 0.07250484079122543, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.116, 'eval_valid_steps_per_second': 17.956, 'epoch': 4.0097725265017665}
{'loss': 0.0819, 'grad_norm': 0.09291304171109238, 'learning_rate': 8.351123451787168e-05, 'epoch': 4.013223277385159}
{'loss': 0.0803, 'grad_norm': 0.08422296434919861, 'learning_rate': 8.348435752460254e-05, 'epoch': 4.016674028268551}
{'eval_valid_loss': 0.07249912619590759, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.644, 'eval_valid_steps_per_second': 17.979, 'epoch': 4.016674028268551}
{'loss': 0.0804, 'grad_norm': 0.07137243766614935, 'learning_rate': 8.345746297691607e-05, 'epoch': 4.020124779151944}
{'loss': 0.08, 'grad_norm': 0.09616587076095574, 'learning_rate': 8.343055088891193e-05, 'epoch': 4.023575530035336}
{'eval_valid_loss': 0.07248195260763168, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.81, 'eval_valid_steps_per_second': 17.986, 'epoch': 4.023575530035336}
{'loss': 0.08, 'grad_norm': 0.06808473604615357, 'learning_rate': 8.340362127469898e-05, 'epoch': 4.027026280918728}
{'loss': 0.0806, 'grad_norm': 0.06213900135203193, 'learning_rate': 8.337667414839528e-05, 'epoch': 4.03047703180212}
{'eval_valid_loss': 0.07237958908081055, 'eval_valid_runtime': 0.3911, 'eval_valid_samples_per_second': 416.81, 'eval_valid_steps_per_second': 17.9, 'epoch': 4.03047703180212}
{'loss': 0.0821, 'grad_norm': 0.07117688832418584, 'learning_rate': 8.334970952412805e-05, 'epoch': 4.033927782685512}
{'loss': 0.0808, 'grad_norm': 0.13092825828273008, 'learning_rate': 8.332272741603368e-05, 'epoch': 4.037378533568905}
{'eval_valid_loss': 0.07286572456359863, 'eval_valid_runtime': 0.3911, 'eval_valid_samples_per_second': 416.814, 'eval_valid_steps_per_second': 17.9, 'epoch': 4.037378533568905}
{'loss': 0.0809, 'grad_norm': 0.08446606946461416, 'learning_rate': 8.329572783825774e-05, 'epoch': 4.040829284452297}
{'loss': 0.0804, 'grad_norm': 0.08900868790928293, 'learning_rate': 8.326871080495498e-05, 'epoch': 4.044280035335689}
{'eval_valid_loss': 0.07243262976408005, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.293, 'eval_valid_steps_per_second': 17.963, 'epoch': 4.044280035335689}
{'loss': 0.0808, 'grad_norm': 0.07637978052583895, 'learning_rate': 8.324167633028923e-05, 'epoch': 4.0477307862190814}
{'loss': 0.0815, 'grad_norm': 0.05229927893494016, 'learning_rate': 8.321462442843353e-05, 'epoch': 4.051181537102473}
{'eval_valid_loss': 0.07241199910640717, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.855, 'eval_valid_steps_per_second': 18.031, 'epoch': 4.051181537102473}
{'loss': 0.0795, 'grad_norm': 0.07272096895317592, 'learning_rate': 8.318755511357004e-05, 'epoch': 4.054632287985866}
{'loss': 0.0802, 'grad_norm': 0.0687442558931459, 'learning_rate': 8.316046839989005e-05, 'epoch': 4.058083038869258}
{'eval_valid_loss': 0.0725921243429184, 'eval_valid_runtime': 0.4003, 'eval_valid_samples_per_second': 407.167, 'eval_valid_steps_per_second': 17.486, 'epoch': 4.058083038869258}
{'loss': 0.0805, 'grad_norm': 0.056126961416731014, 'learning_rate': 8.313336430159396e-05, 'epoch': 4.06153378975265}
{'loss': 0.0808, 'grad_norm': 0.08590510910051462, 'learning_rate': 8.310624283289127e-05, 'epoch': 4.0649845406360425}
{'eval_valid_loss': 0.07238266617059708, 'eval_valid_runtime': 0.3909, 'eval_valid_samples_per_second': 417.01, 'eval_valid_steps_per_second': 17.908, 'epoch': 4.0649845406360425}
{'loss': 0.0822, 'grad_norm': 0.1884453508619122, 'learning_rate': 8.307910400800064e-05, 'epoch': 4.068435291519434}
{'loss': 0.0809, 'grad_norm': 0.06125836678664465, 'learning_rate': 8.305194784114978e-05, 'epoch': 4.071886042402827}
{'eval_valid_loss': 0.07244513928890228, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.901, 'eval_valid_steps_per_second': 17.947, 'epoch': 4.071886042402827}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0817, 'grad_norm': 0.07182176671050686, 'learning_rate': 8.302477434657552e-05, 'epoch': 4.075336793286219}
{'loss': 0.0801, 'grad_norm': 0.0768996030788565, 'learning_rate': 8.299758353852374e-05, 'epoch': 4.078787544169611}
{'eval_valid_loss': 0.07200006395578384, 'eval_valid_runtime': 0.3923, 'eval_valid_samples_per_second': 415.459, 'eval_valid_steps_per_second': 17.842, 'epoch': 4.078787544169611}
{'loss': 0.081, 'grad_norm': 0.06340292659356535, 'learning_rate': 8.297037543124943e-05, 'epoch': 4.082238295053004}
{'loss': 0.0806, 'grad_norm': 0.07214510809792017, 'learning_rate': 8.294315003901662e-05, 'epoch': 4.0856890459363955}
{'eval_valid_loss': 0.07252849638462067, 'eval_valid_runtime': 0.3898, 'eval_valid_samples_per_second': 418.137, 'eval_valid_steps_per_second': 17.957, 'epoch': 4.0856890459363955}
{'loss': 0.0819, 'grad_norm': 0.06562360386165167, 'learning_rate': 8.291590737609845e-05, 'epoch': 4.089139796819788}
{'loss': 0.0805, 'grad_norm': 0.09786016453549037, 'learning_rate': 8.288864745677707e-05, 'epoch': 4.09259054770318}
{'eval_valid_loss': 0.07223730534315109, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.929, 'eval_valid_steps_per_second': 17.991, 'epoch': 4.09259054770318}
{'loss': 0.081, 'grad_norm': 0.0634254173581231, 'learning_rate': 8.28613702953437e-05, 'epoch': 4.096041298586573}
{'loss': 0.0803, 'grad_norm': 0.05238831725286023, 'learning_rate': 8.283407590609856e-05, 'epoch': 4.099492049469965}
{'eval_valid_loss': 0.07229773700237274, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.416, 'eval_valid_steps_per_second': 17.883, 'epoch': 4.099492049469965}
{'loss': 0.0815, 'grad_norm': 0.06402551664649041, 'learning_rate': 8.280676430335098e-05, 'epoch': 4.102942800353357}
{'loss': 0.0805, 'grad_norm': 0.08500211253369504, 'learning_rate': 8.27794355014192e-05, 'epoch': 4.106393551236749}
{'eval_valid_loss': 0.07245039194822311, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.153, 'eval_valid_steps_per_second': 17.915, 'epoch': 4.106393551236749}
{'loss': 0.0815, 'grad_norm': 0.08943764465962697, 'learning_rate': 8.27520895146306e-05, 'epoch': 4.109844302120141}
{'loss': 0.0812, 'grad_norm': 0.07509728856827622, 'learning_rate': 8.272472635732147e-05, 'epoch': 4.113295053003534}
{'eval_valid_loss': 0.07220672816038132, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.426, 'eval_valid_steps_per_second': 17.883, 'epoch': 4.113295053003534}
{'loss': 0.0817, 'grad_norm': 0.0690224796677319, 'learning_rate': 8.269734604383719e-05, 'epoch': 4.116745803886926}
{'loss': 0.0812, 'grad_norm': 0.06023568937275703, 'learning_rate': 8.266994858853207e-05, 'epoch': 4.120196554770318}
{'eval_valid_loss': 0.07194043695926666, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.187, 'eval_valid_steps_per_second': 18.002, 'epoch': 4.120196554770318}
{'loss': 0.0815, 'grad_norm': 0.0747736567236845, 'learning_rate': 8.26425340057694e-05, 'epoch': 4.12364730565371}
{'loss': 0.0804, 'grad_norm': 0.07172636539882886, 'learning_rate': 8.261510230992149e-05, 'epoch': 4.127098056537102}
{'eval_valid_loss': 0.07212558388710022, 'eval_valid_runtime': 0.3921, 'eval_valid_samples_per_second': 415.719, 'eval_valid_steps_per_second': 17.853, 'epoch': 4.127098056537102}
{'loss': 0.0807, 'grad_norm': 0.07874444217839636, 'learning_rate': 8.258765351536961e-05, 'epoch': 4.130548807420495}
{'loss': 0.08, 'grad_norm': 0.07251146752334173, 'learning_rate': 8.2560187636504e-05, 'epoch': 4.133999558303887}
{'eval_valid_loss': 0.07208795845508575, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.834, 'eval_valid_steps_per_second': 17.944, 'epoch': 4.133999558303887}
{'loss': 0.0808, 'grad_norm': 0.07473257094435981, 'learning_rate': 8.253270468772381e-05, 'epoch': 4.137450309187279}
{'loss': 0.0809, 'grad_norm': 0.1100729901503869, 'learning_rate': 8.250520468343722e-05, 'epoch': 4.1409010600706715}
{'eval_valid_loss': 0.07223811745643616, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.083, 'eval_valid_steps_per_second': 17.954, 'epoch': 4.1409010600706715}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0801, 'grad_norm': 0.057869238796191776, 'learning_rate': 8.247768763806127e-05, 'epoch': 4.144351810954063}
{'loss': 0.0817, 'grad_norm': 0.07894008896221584, 'learning_rate': 8.2450153566022e-05, 'epoch': 4.147802561837456}
{'eval_valid_loss': 0.07185948640108109, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.707, 'eval_valid_steps_per_second': 18.067, 'epoch': 4.147802561837456}
{'loss': 0.0819, 'grad_norm': 0.07519196832445874, 'learning_rate': 8.242260248175432e-05, 'epoch': 4.151253312720848}
{'loss': 0.0804, 'grad_norm': 0.08522606551229636, 'learning_rate': 8.239503439970211e-05, 'epoch': 4.154704063604241}
{'eval_valid_loss': 0.0720003992319107, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.611, 'eval_valid_steps_per_second': 18.02, 'epoch': 4.154704063604241}
{'loss': 0.0813, 'grad_norm': 0.06807716424773727, 'learning_rate': 8.23674493343181e-05, 'epoch': 4.158154814487633}
{'loss': 0.0815, 'grad_norm': 0.0776357681625579, 'learning_rate': 8.233984730006401e-05, 'epoch': 4.161605565371024}
{'eval_valid_loss': 0.0721612274646759, 'eval_valid_runtime': 0.389, 'eval_valid_samples_per_second': 419.049, 'eval_valid_steps_per_second': 17.996, 'epoch': 4.161605565371024}
{'loss': 0.0805, 'grad_norm': 0.08207453709586414, 'learning_rate': 8.23122283114104e-05, 'epoch': 4.165056316254417}
{'loss': 0.0809, 'grad_norm': 0.08330609119253071, 'learning_rate': 8.228459238283667e-05, 'epoch': 4.168507067137809}
{'eval_valid_loss': 0.0721825361251831, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.286, 'eval_valid_steps_per_second': 18.049, 'epoch': 4.168507067137809}
{'loss': 0.0803, 'grad_norm': 0.048947662774204086, 'learning_rate': 8.225693952883122e-05, 'epoch': 4.171957818021202}
{'loss': 0.0813, 'grad_norm': 0.07680946761502354, 'learning_rate': 8.222926976389121e-05, 'epoch': 4.175408568904594}
{'eval_valid_loss': 0.07222118228673935, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.763, 'eval_valid_steps_per_second': 18.027, 'epoch': 4.175408568904594}
{'loss': 0.0821, 'grad_norm': 0.08513271972603914, 'learning_rate': 8.220158310252275e-05, 'epoch': 4.1788593197879855}
{'loss': 0.0817, 'grad_norm': 0.07818391406757863, 'learning_rate': 8.217387955924078e-05, 'epoch': 4.182310070671378}
{'eval_valid_loss': 0.0723273977637291, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.447, 'eval_valid_steps_per_second': 18.099, 'epoch': 4.182310070671378}
{'loss': 0.082, 'grad_norm': 0.07205027625050296, 'learning_rate': 8.214615914856903e-05, 'epoch': 4.18576082155477}
{'loss': 0.0822, 'grad_norm': 0.06475354984713398, 'learning_rate': 8.211842188504017e-05, 'epoch': 4.189211572438163}
{'eval_valid_loss': 0.07235825061798096, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.837, 'eval_valid_steps_per_second': 17.987, 'epoch': 4.189211572438163}
{'loss': 0.0805, 'grad_norm': 0.0722753781838481, 'learning_rate': 8.209066778319568e-05, 'epoch': 4.192662323321555}
{'loss': 0.0809, 'grad_norm': 0.06134292649836462, 'learning_rate': 8.206289685758581e-05, 'epoch': 4.196113074204947}
{'eval_valid_loss': 0.07220571488142014, 'eval_valid_runtime': 0.4626, 'eval_valid_samples_per_second': 352.334, 'eval_valid_steps_per_second': 15.131, 'epoch': 4.196113074204947}
{'loss': 0.0804, 'grad_norm': 0.07959225813572908, 'learning_rate': 8.203510912276967e-05, 'epoch': 4.199563825088339}
{'loss': 0.0815, 'grad_norm': 0.06691279162630606, 'learning_rate': 8.20073045933152e-05, 'epoch': 4.203014575971731}
{'eval_valid_loss': 0.07201044261455536, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.838, 'eval_valid_steps_per_second': 17.987, 'epoch': 4.203014575971731}
{'loss': 0.0801, 'grad_norm': 0.05029675536503911, 'learning_rate': 8.197948328379912e-05, 'epoch': 4.206465326855124}
{'loss': 0.0807, 'grad_norm': 0.08986521869224594, 'learning_rate': 8.195164520880694e-05, 'epoch': 4.209916077738516}
{'eval_valid_loss': 0.07238829135894775, 'eval_valid_runtime': 0.3854, 'eval_valid_samples_per_second': 422.932, 'eval_valid_steps_per_second': 18.163, 'epoch': 4.209916077738516}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0809, 'grad_norm': 0.09838875233384244, 'learning_rate': 8.1923790382933e-05, 'epoch': 4.213366828621908}
{'loss': 0.0803, 'grad_norm': 0.11853650911018472, 'learning_rate': 8.189591882078037e-05, 'epoch': 4.2168175795053005}
{'eval_valid_loss': 0.07184461504220963, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.299, 'eval_valid_steps_per_second': 18.05, 'epoch': 4.2168175795053005}
{'loss': 0.08, 'grad_norm': 0.07177136040563228, 'learning_rate': 8.186803053696095e-05, 'epoch': 4.220268330388692}
{'loss': 0.0797, 'grad_norm': 0.06401527631383974, 'learning_rate': 8.184012554609532e-05, 'epoch': 4.223719081272085}
{'eval_valid_loss': 0.07238888740539551, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.38, 'eval_valid_steps_per_second': 17.967, 'epoch': 4.223719081272085}
{'loss': 0.0817, 'grad_norm': 0.05384798296783175, 'learning_rate': 8.181220386281292e-05, 'epoch': 4.227169832155477}
{'loss': 0.0807, 'grad_norm': 0.06500270172131938, 'learning_rate': 8.178426550175189e-05, 'epoch': 4.23062058303887}
{'eval_valid_loss': 0.07209093123674393, 'eval_valid_runtime': 0.3903, 'eval_valid_samples_per_second': 417.657, 'eval_valid_steps_per_second': 17.936, 'epoch': 4.23062058303887}
{'loss': 0.0805, 'grad_norm': 0.07375095469225658, 'learning_rate': 8.175631047755912e-05, 'epoch': 4.2340713339222615}
{'loss': 0.0821, 'grad_norm': 0.06663574838014584, 'learning_rate': 8.17283388048902e-05, 'epoch': 4.237522084805653}
{'eval_valid_loss': 0.07224757224321365, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.916, 'eval_valid_steps_per_second': 17.99, 'epoch': 4.237522084805653}
{'loss': 0.0806, 'grad_norm': 0.0666430262061945, 'learning_rate': 8.170035049840952e-05, 'epoch': 4.240972835689046}
{'loss': 0.0801, 'grad_norm': 0.07742718646598931, 'learning_rate': 8.167234557279014e-05, 'epoch': 4.244423586572438}
{'eval_valid_loss': 0.07204841077327728, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 420.044, 'eval_valid_steps_per_second': 18.039, 'epoch': 4.244423586572438}
{'loss': 0.0819, 'grad_norm': 0.07350002522360684, 'learning_rate': 8.164432404271385e-05, 'epoch': 4.247874337455831}
{'loss': 0.081, 'grad_norm': 0.07354990917168126, 'learning_rate': 8.161628592287113e-05, 'epoch': 4.251325088339223}
{'eval_valid_loss': 0.07222456485033035, 'eval_valid_runtime': 0.399, 'eval_valid_samples_per_second': 408.51, 'eval_valid_steps_per_second': 17.543, 'epoch': 4.251325088339223}
{'loss': 0.0806, 'grad_norm': 0.0713354247370034, 'learning_rate': 8.158823122796118e-05, 'epoch': 4.2547758392226145}
{'loss': 0.0807, 'grad_norm': 0.07812499399296916, 'learning_rate': 8.156015997269186e-05, 'epoch': 4.258226590106007}
{'eval_valid_loss': 0.07184001058340073, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.888, 'eval_valid_steps_per_second': 17.989, 'epoch': 4.258226590106007}
{'loss': 0.0806, 'grad_norm': 0.06446864857421761, 'learning_rate': 8.153207217177973e-05, 'epoch': 4.261677340989399}
{'loss': 0.0805, 'grad_norm': 0.059578549295510035, 'learning_rate': 8.150396783995005e-05, 'epoch': 4.265128091872792}
{'eval_valid_loss': 0.07156994938850403, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.216, 'eval_valid_steps_per_second': 18.089, 'epoch': 4.265128091872792}
{'loss': 0.0816, 'grad_norm': 0.07430427811285342, 'learning_rate': 8.147584699193671e-05, 'epoch': 4.268578842756184}
{'loss': 0.0813, 'grad_norm': 0.08020208522015612, 'learning_rate': 8.144770964248225e-05, 'epoch': 4.272029593639576}
{'eval_valid_loss': 0.07176125049591064, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.384, 'eval_valid_steps_per_second': 18.053, 'epoch': 4.272029593639576}
{'loss': 0.0802, 'grad_norm': 0.07669974195014513, 'learning_rate': 8.14195558063379e-05, 'epoch': 4.275480344522968}
{'loss': 0.0811, 'grad_norm': 0.05965212735783297, 'learning_rate': 8.13913854982635e-05, 'epoch': 4.27893109540636}
{'eval_valid_loss': 0.0718652606010437, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.962, 'eval_valid_steps_per_second': 18.078, 'epoch': 4.27893109540636}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.081, 'grad_norm': 0.08175604037974255, 'learning_rate': 8.136319873302754e-05, 'epoch': 4.282381846289753}
{'loss': 0.081, 'grad_norm': 0.07978610758042091, 'learning_rate': 8.133499552540714e-05, 'epoch': 4.285832597173145}
{'eval_valid_loss': 0.0719028189778328, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.333, 'eval_valid_steps_per_second': 18.051, 'epoch': 4.285832597173145}
{'loss': 0.0796, 'grad_norm': 0.06941718771756218, 'learning_rate': 8.130677589018802e-05, 'epoch': 4.2892833480565375}
{'loss': 0.081, 'grad_norm': 0.06068426586435257, 'learning_rate': 8.127853984216459e-05, 'epoch': 4.292734098939929}
{'eval_valid_loss': 0.07191493362188339, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.891, 'eval_valid_steps_per_second': 18.118, 'epoch': 4.292734098939929}
{'loss': 0.0805, 'grad_norm': 0.1222495703584524, 'learning_rate': 8.12502873961397e-05, 'epoch': 4.296184849823321}
{'loss': 0.0799, 'grad_norm': 0.0833028153961296, 'learning_rate': 8.122201856692499e-05, 'epoch': 4.299635600706714}
{'eval_valid_loss': 0.071984201669693, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.827, 'eval_valid_steps_per_second': 18.029, 'epoch': 4.299635600706714}
{'loss': 0.0816, 'grad_norm': 0.08012345694754854, 'learning_rate': 8.119373336934055e-05, 'epoch': 4.303086351590106}
{'loss': 0.0806, 'grad_norm': 0.05775479597895889, 'learning_rate': 8.116543181821512e-05, 'epoch': 4.306537102473499}
{'eval_valid_loss': 0.07201013714075089, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.376, 'eval_valid_steps_per_second': 18.053, 'epoch': 4.306537102473499}
{'loss': 0.081, 'grad_norm': 0.05878381335761784, 'learning_rate': 8.113711392838599e-05, 'epoch': 4.3099878533568905}
{'loss': 0.0812, 'grad_norm': 0.07386059148194661, 'learning_rate': 8.110877971469901e-05, 'epoch': 4.313438604240282}
{'eval_valid_loss': 0.0716719776391983, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.292, 'eval_valid_steps_per_second': 18.049, 'epoch': 4.313438604240282}
{'loss': 0.0802, 'grad_norm': 0.06699672104824524, 'learning_rate': 8.108042919200862e-05, 'epoch': 4.316889355123675}
{'loss': 0.082, 'grad_norm': 0.061531255086763555, 'learning_rate': 8.105206237517775e-05, 'epoch': 4.320340106007067}
{'eval_valid_loss': 0.07189775258302689, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.401, 'eval_valid_steps_per_second': 18.011, 'epoch': 4.320340106007067}
{'loss': 0.0807, 'grad_norm': 0.06999800438359939, 'learning_rate': 8.102367927907795e-05, 'epoch': 4.32379085689046}
{'loss': 0.0822, 'grad_norm': 0.06653617347182754, 'learning_rate': 8.099527991858924e-05, 'epoch': 4.327241607773852}
{'eval_valid_loss': 0.07225693017244339, 'eval_valid_runtime': 0.386, 'eval_valid_samples_per_second': 422.305, 'eval_valid_steps_per_second': 18.136, 'epoch': 4.327241607773852}
{'loss': 0.08, 'grad_norm': 0.061886943861734656, 'learning_rate': 8.096686430860019e-05, 'epoch': 4.3306923586572434}
{'loss': 0.0814, 'grad_norm': 0.08572976627962002, 'learning_rate': 8.09384324640079e-05, 'epoch': 4.334143109540636}
{'eval_valid_loss': 0.07229245454072952, 'eval_valid_runtime': 0.386, 'eval_valid_samples_per_second': 422.261, 'eval_valid_steps_per_second': 18.134, 'epoch': 4.334143109540636}
{'loss': 0.0813, 'grad_norm': 0.07343184970716322, 'learning_rate': 8.090998439971797e-05, 'epoch': 4.337593860424028}
{'loss': 0.081, 'grad_norm': 0.06934676885373503, 'learning_rate': 8.08815201306445e-05, 'epoch': 4.341044611307421}
{'eval_valid_loss': 0.07195602357387543, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.159, 'eval_valid_steps_per_second': 18.087, 'epoch': 4.341044611307421}
{'loss': 0.0804, 'grad_norm': 0.05360749165849043, 'learning_rate': 8.085303967171007e-05, 'epoch': 4.344495362190813}
{'loss': 0.0806, 'grad_norm': 0.058796560877705316, 'learning_rate': 8.082454303784581e-05, 'epoch': 4.3479461130742045}
{'eval_valid_loss': 0.07217647135257721, 'eval_valid_runtime': 0.3854, 'eval_valid_samples_per_second': 422.91, 'eval_valid_steps_per_second': 18.162, 'epoch': 4.3479461130742045}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0807, 'grad_norm': 0.07619064674113328, 'learning_rate': 8.079603024399126e-05, 'epoch': 4.351396863957597}
{'loss': 0.0803, 'grad_norm': 0.0739096406258888, 'learning_rate': 8.076750130509445e-05, 'epoch': 4.354847614840989}
{'eval_valid_loss': 0.07173316925764084, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.144, 'eval_valid_steps_per_second': 18.0, 'epoch': 4.354847614840989}
{'loss': 0.0808, 'grad_norm': 0.10335535621909295, 'learning_rate': 8.073895623611191e-05, 'epoch': 4.358298365724382}
{'loss': 0.0799, 'grad_norm': 0.0721427964892379, 'learning_rate': 8.07103950520086e-05, 'epoch': 4.361749116607774}
{'eval_valid_loss': 0.07189755141735077, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.78, 'eval_valid_steps_per_second': 18.113, 'epoch': 4.361749116607774}
{'loss': 0.0798, 'grad_norm': 0.07659855415886736, 'learning_rate': 8.06818177677579e-05, 'epoch': 4.365199867491166}
{'loss': 0.0809, 'grad_norm': 0.06799598283827515, 'learning_rate': 8.065322439834167e-05, 'epoch': 4.368650618374558}
{'eval_valid_loss': 0.07175242900848389, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.422, 'eval_valid_steps_per_second': 17.969, 'epoch': 4.368650618374558}
{'loss': 0.0807, 'grad_norm': 0.08554854941995213, 'learning_rate': 8.062461495875017e-05, 'epoch': 4.37210136925795}
{'loss': 0.0806, 'grad_norm': 0.06006004009925785, 'learning_rate': 8.059598946398217e-05, 'epoch': 4.375552120141343}
{'eval_valid_loss': 0.07175177335739136, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.974, 'eval_valid_steps_per_second': 18.079, 'epoch': 4.375552120141343}
{'loss': 0.0816, 'grad_norm': 0.07512145079162637, 'learning_rate': 8.056734792904474e-05, 'epoch': 4.379002871024735}
{'loss': 0.0815, 'grad_norm': 0.08264181473467139, 'learning_rate': 8.05386903689534e-05, 'epoch': 4.382453621908128}
{'eval_valid_loss': 0.07171262055635452, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.161, 'eval_valid_steps_per_second': 18.044, 'epoch': 4.382453621908128}
{'loss': 0.0806, 'grad_norm': 0.054976063157669244, 'learning_rate': 8.051001679873214e-05, 'epoch': 4.3859043727915195}
{'loss': 0.0804, 'grad_norm': 0.0788855770447248, 'learning_rate': 8.048132723341325e-05, 'epoch': 4.389355123674911}
{'eval_valid_loss': 0.0716826319694519, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.67, 'eval_valid_steps_per_second': 18.109, 'epoch': 4.389355123674911}
{'loss': 0.0808, 'grad_norm': 0.08050550047052094, 'learning_rate': 8.045262168803746e-05, 'epoch': 4.392805874558304}
{'loss': 0.081, 'grad_norm': 0.05429239564477025, 'learning_rate': 8.042390017765382e-05, 'epoch': 4.396256625441696}
{'eval_valid_loss': 0.07168146967887878, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.184, 'eval_valid_steps_per_second': 18.002, 'epoch': 4.396256625441696}
{'loss': 0.0804, 'grad_norm': 0.0849094744129383, 'learning_rate': 8.039516271731983e-05, 'epoch': 4.399707376325089}
{'loss': 0.0806, 'grad_norm': 0.10021364180351364, 'learning_rate': 8.036640932210132e-05, 'epoch': 4.4031581272084805}
{'eval_valid_loss': 0.07175816595554352, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.143, 'eval_valid_steps_per_second': 18.129, 'epoch': 4.4031581272084805}
{'loss': 0.0819, 'grad_norm': 0.06722824031089375, 'learning_rate': 8.033764000707244e-05, 'epoch': 4.406608878091872}
{'loss': 0.0802, 'grad_norm': 0.07130757815635103, 'learning_rate': 8.030885478731571e-05, 'epoch': 4.410059628975265}
{'eval_valid_loss': 0.07220692187547684, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.402, 'eval_valid_steps_per_second': 17.882, 'epoch': 4.410059628975265}
{'loss': 0.081, 'grad_norm': 0.05131657053598292, 'learning_rate': 8.028005367792202e-05, 'epoch': 4.413510379858657}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0803, 'grad_norm': 0.06474863424812637, 'learning_rate': 8.025123669399053e-05, 'epoch': 4.41696113074205}
{'eval_valid_loss': 0.07182734459638596, 'eval_valid_runtime': 0.3856, 'eval_valid_samples_per_second': 422.668, 'eval_valid_steps_per_second': 18.151, 'epoch': 4.41696113074205}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0803, 'grad_norm': 0.06006971440803818, 'learning_rate': 8.022240385062875e-05, 'epoch': 4.420411881625442}
{'loss': 0.081, 'grad_norm': 0.09993334093522224, 'learning_rate': 8.019355516295254e-05, 'epoch': 4.423862632508834}
{'eval_valid_loss': 0.0717037096619606, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.11, 'eval_valid_steps_per_second': 17.999, 'epoch': 4.423862632508834}
{'loss': 0.0808, 'grad_norm': 0.08068949576392803, 'learning_rate': 8.0164690646086e-05, 'epoch': 4.427313383392226}
{'loss': 0.0806, 'grad_norm': 0.06606528198340045, 'learning_rate': 8.013581031516159e-05, 'epoch': 4.430764134275618}
{'eval_valid_loss': 0.07161003351211548, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.16, 'eval_valid_steps_per_second': 18.087, 'epoch': 4.430764134275618}
{'loss': 0.0813, 'grad_norm': 0.06798797467553236, 'learning_rate': 8.010691418532001e-05, 'epoch': 4.434214885159011}
{'loss': 0.0814, 'grad_norm': 0.08425011496096523, 'learning_rate': 8.007800227171027e-05, 'epoch': 4.437665636042403}
{'eval_valid_loss': 0.07172847539186478, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.251, 'eval_valid_steps_per_second': 18.091, 'epoch': 4.437665636042403}
{'loss': 0.0795, 'grad_norm': 0.06067734519316295, 'learning_rate': 8.004907458948969e-05, 'epoch': 4.4411163869257955}
{'loss': 0.0798, 'grad_norm': 0.06875062231539437, 'learning_rate': 8.002013115382375e-05, 'epoch': 4.444567137809187}
{'eval_valid_loss': 0.0718752071261406, 'eval_valid_runtime': 0.3992, 'eval_valid_samples_per_second': 408.32, 'eval_valid_steps_per_second': 17.535, 'epoch': 4.444567137809187}
{'loss': 0.0813, 'grad_norm': 0.07071903905026654, 'learning_rate': 7.99911719798863e-05, 'epoch': 4.448017888692579}
{'loss': 0.0805, 'grad_norm': 0.08225155521912808, 'learning_rate': 7.996219708285938e-05, 'epoch': 4.451468639575972}
{'eval_valid_loss': 0.07179757207632065, 'eval_valid_runtime': 0.3931, 'eval_valid_samples_per_second': 414.689, 'eval_valid_steps_per_second': 17.809, 'epoch': 4.451468639575972}
{'loss': 0.0802, 'grad_norm': 0.059316140092486376, 'learning_rate': 7.99332064779333e-05, 'epoch': 4.454919390459364}
{'loss': 0.0795, 'grad_norm': 0.06653053226424731, 'learning_rate': 7.99042001803066e-05, 'epoch': 4.4583701413427566}
{'eval_valid_loss': 0.07125432044267654, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.178, 'eval_valid_steps_per_second': 18.002, 'epoch': 4.4583701413427566}
{'loss': 0.0814, 'grad_norm': 0.06832463571728498, 'learning_rate': 7.987517820518602e-05, 'epoch': 4.461820892226148}
{'loss': 0.0799, 'grad_norm': 0.06933552346685191, 'learning_rate': 7.984614056778657e-05, 'epoch': 4.46527164310954}
{'eval_valid_loss': 0.0714033991098404, 'eval_valid_runtime': 0.3924, 'eval_valid_samples_per_second': 415.369, 'eval_valid_steps_per_second': 17.838, 'epoch': 4.46527164310954}
{'loss': 0.0806, 'grad_norm': 0.07627895269902629, 'learning_rate': 7.981708728333141e-05, 'epoch': 4.468722393992933}
{'loss': 0.0807, 'grad_norm': 0.07380989036336918, 'learning_rate': 7.978801836705197e-05, 'epoch': 4.472173144876325}
{'eval_valid_loss': 0.07151302695274353, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.698, 'eval_valid_steps_per_second': 18.067, 'epoch': 4.472173144876325}
{'loss': 0.0813, 'grad_norm': 0.06573266058430607, 'learning_rate': 7.97589338341878e-05, 'epoch': 4.475623895759718}
{'loss': 0.0802, 'grad_norm': 0.09111012942900087, 'learning_rate': 7.972983369998671e-05, 'epoch': 4.4790746466431095}
{'eval_valid_loss': 0.07146154344081879, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.834, 'eval_valid_steps_per_second': 18.116, 'epoch': 4.4790746466431095}
{'loss': 0.0804, 'grad_norm': 0.063577154553169, 'learning_rate': 7.970071797970465e-05, 'epoch': 4.482525397526501}
{'loss': 0.0791, 'grad_norm': 0.08385951324360573, 'learning_rate': 7.967158668860573e-05, 'epoch': 4.485976148409894}
{'eval_valid_loss': 0.07162784785032272, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.46, 'eval_valid_steps_per_second': 18.057, 'epoch': 4.485976148409894}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0813, 'grad_norm': 0.06488633452232952, 'learning_rate': 7.964243984196227e-05, 'epoch': 4.489426899293286}
{'loss': 0.0798, 'grad_norm': 0.05379807094152291, 'learning_rate': 7.96132774550547e-05, 'epoch': 4.492877650176679}
{'eval_valid_loss': 0.07186420261859894, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.502, 'eval_valid_steps_per_second': 18.058, 'epoch': 4.492877650176679}
{'loss': 0.0805, 'grad_norm': 0.06971385126026741, 'learning_rate': 7.95840995431716e-05, 'epoch': 4.496328401060071}
{'loss': 0.0801, 'grad_norm': 0.10039957636914494, 'learning_rate': 7.955490612160972e-05, 'epoch': 4.4997791519434625}
{'eval_valid_loss': 0.0712609738111496, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.553, 'eval_valid_steps_per_second': 18.061, 'epoch': 4.4997791519434625}
{'loss': 0.0813, 'grad_norm': 0.12140414330809954, 'learning_rate': 7.952569720567391e-05, 'epoch': 4.503229902826855}
{'loss': 0.0799, 'grad_norm': 0.06515851646612592, 'learning_rate': 7.949647281067715e-05, 'epoch': 4.506680653710247}
{'eval_valid_loss': 0.07170824706554413, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.251, 'eval_valid_steps_per_second': 18.048, 'epoch': 4.506680653710247}
{'loss': 0.0797, 'grad_norm': 0.07072904571073069, 'learning_rate': 7.946723295194058e-05, 'epoch': 4.51013140459364}
{'loss': 0.08, 'grad_norm': 0.07643426322690727, 'learning_rate': 7.943797764479339e-05, 'epoch': 4.513582155477032}
{'eval_valid_loss': 0.0718681737780571, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.959, 'eval_valid_steps_per_second': 18.035, 'epoch': 4.513582155477032}
{'loss': 0.0811, 'grad_norm': 0.08410853945107145, 'learning_rate': 7.940870690457286e-05, 'epoch': 4.5170329063604235}
{'loss': 0.0817, 'grad_norm': 0.07267323962245643, 'learning_rate': 7.937942074662442e-05, 'epoch': 4.520483657243816}
{'eval_valid_loss': 0.07161261141300201, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.419, 'eval_valid_steps_per_second': 18.098, 'epoch': 4.520483657243816}
{'loss': 0.0806, 'grad_norm': 0.06941840426758125, 'learning_rate': 7.935011918630153e-05, 'epoch': 4.523934408127208}
{'loss': 0.0803, 'grad_norm': 0.06914874139026672, 'learning_rate': 7.932080223896575e-05, 'epoch': 4.527385159010601}
{'eval_valid_loss': 0.07136418670415878, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.79, 'eval_valid_steps_per_second': 18.071, 'epoch': 4.527385159010601}
{'loss': 0.0796, 'grad_norm': 0.0794504268901985, 'learning_rate': 7.929146991998671e-05, 'epoch': 4.530835909893993}
{'loss': 0.0801, 'grad_norm': 0.060926662801484295, 'learning_rate': 7.926212224474208e-05, 'epoch': 4.5342866607773855}
{'eval_valid_loss': 0.0715508684515953, 'eval_valid_runtime': 0.3897, 'eval_valid_samples_per_second': 418.299, 'eval_valid_steps_per_second': 17.964, 'epoch': 4.5342866607773855}
{'loss': 0.0803, 'grad_norm': 0.07547034915431208, 'learning_rate': 7.923275922861761e-05, 'epoch': 4.537737411660777}
{'loss': 0.0805, 'grad_norm': 0.06375137816019824, 'learning_rate': 7.920338088700707e-05, 'epoch': 4.541188162544169}
{'eval_valid_loss': 0.07146874070167542, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.297, 'eval_valid_steps_per_second': 18.007, 'epoch': 4.541188162544169}
{'loss': 0.0807, 'grad_norm': 0.07171120194251905, 'learning_rate': 7.917398723531225e-05, 'epoch': 4.544638913427562}
{'loss': 0.0803, 'grad_norm': 0.06900968103798812, 'learning_rate': 7.914457828894299e-05, 'epoch': 4.548089664310954}
{'eval_valid_loss': 0.0715370774269104, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.554, 'eval_valid_steps_per_second': 18.018, 'epoch': 4.548089664310954}
{'loss': 0.0803, 'grad_norm': 0.10167038227234826, 'learning_rate': 7.911515406331715e-05, 'epoch': 4.551540415194347}
{'loss': 0.0797, 'grad_norm': 0.06986750703781544, 'learning_rate': 7.908571457386062e-05, 'epoch': 4.5549911660777385}
{'eval_valid_loss': 0.07121676951646805, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.898, 'eval_valid_steps_per_second': 18.118, 'epoch': 4.5549911660777385}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0802, 'grad_norm': 0.06560303029075389, 'learning_rate': 7.905625983600721e-05, 'epoch': 4.558441916961131}
{'loss': 0.0801, 'grad_norm': 0.061272550566903256, 'learning_rate': 7.902678986519883e-05, 'epoch': 4.561892667844523}
{'eval_valid_loss': 0.07151494920253754, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.171, 'eval_valid_steps_per_second': 18.087, 'epoch': 4.561892667844523}
{'loss': 0.0805, 'grad_norm': 0.06292277604912642, 'learning_rate': 7.899730467688529e-05, 'epoch': 4.565343418727915}
{'loss': 0.0815, 'grad_norm': 0.06181869284268378, 'learning_rate': 7.896780428652444e-05, 'epoch': 4.568794169611308}
{'eval_valid_loss': 0.07147134840488434, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 421.003, 'eval_valid_steps_per_second': 18.08, 'epoch': 4.568794169611308}
{'loss': 0.0803, 'grad_norm': 0.0841954678683811, 'learning_rate': 7.893828870958206e-05, 'epoch': 4.5722449204946995}
{'loss': 0.081, 'grad_norm': 0.07947890128504631, 'learning_rate': 7.89087579615319e-05, 'epoch': 4.575695671378092}
{'eval_valid_loss': 0.07146445661783218, 'eval_valid_runtime': 0.3856, 'eval_valid_samples_per_second': 422.721, 'eval_valid_steps_per_second': 18.154, 'epoch': 4.575695671378092}
{'loss': 0.0806, 'grad_norm': 0.05648140733780608, 'learning_rate': 7.887921205785569e-05, 'epoch': 4.579146422261484}
{'loss': 0.0804, 'grad_norm': 0.07617938768036926, 'learning_rate': 7.884965101404307e-05, 'epoch': 4.582597173144876}
{'eval_valid_loss': 0.07172071188688278, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.808, 'eval_valid_steps_per_second': 18.071, 'epoch': 4.582597173144876}
{'loss': 0.0796, 'grad_norm': 0.07251398303269127, 'learning_rate': 7.882007484559162e-05, 'epoch': 4.586047924028269}
{'loss': 0.0808, 'grad_norm': 0.07118256467645831, 'learning_rate': 7.87904835680069e-05, 'epoch': 4.589498674911661}
{'eval_valid_loss': 0.0714319497346878, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.715, 'eval_valid_steps_per_second': 17.939, 'epoch': 4.589498674911661}
{'loss': 0.0811, 'grad_norm': 0.10587930321014274, 'learning_rate': 7.87608771968023e-05, 'epoch': 4.592949425795053}
{'loss': 0.0804, 'grad_norm': 0.052100730544739016, 'learning_rate': 7.873125574749922e-05, 'epoch': 4.596400176678445}
{'eval_valid_loss': 0.0713668167591095, 'eval_valid_runtime': 0.3853, 'eval_valid_samples_per_second': 422.992, 'eval_valid_steps_per_second': 18.165, 'epoch': 4.596400176678445}
{'loss': 0.0797, 'grad_norm': 0.06505099494384976, 'learning_rate': 7.870161923562689e-05, 'epoch': 4.599850927561837}
{'loss': 0.0801, 'grad_norm': 0.07321561631879686, 'learning_rate': 7.867196767672246e-05, 'epoch': 4.60330167844523}
{'eval_valid_loss': 0.07157378643751144, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.185, 'eval_valid_steps_per_second': 17.916, 'epoch': 4.60330167844523}
{'loss': 0.0802, 'grad_norm': 0.06550088776449521, 'learning_rate': 7.864230108633102e-05, 'epoch': 4.606752429328622}
{'loss': 0.0794, 'grad_norm': 0.07505337335438998, 'learning_rate': 7.861261948000547e-05, 'epoch': 4.6102031802120145}
{'eval_valid_loss': 0.07135773450136185, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.292, 'eval_valid_steps_per_second': 18.092, 'epoch': 4.6102031802120145}
{'loss': 0.0809, 'grad_norm': 0.061451451367500125, 'learning_rate': 7.85829228733066e-05, 'epoch': 4.613653931095406}
{'loss': 0.0805, 'grad_norm': 0.09857729550909934, 'learning_rate': 7.855321128180305e-05, 'epoch': 4.617104681978798}
{'eval_valid_loss': 0.07109302282333374, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.83, 'eval_valid_steps_per_second': 18.03, 'epoch': 4.617104681978798}
{'loss': 0.08, 'grad_norm': 0.06783834014305859, 'learning_rate': 7.852348472107138e-05, 'epoch': 4.620555432862191}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0793, 'grad_norm': 0.06581797655395724, 'learning_rate': 7.849374320669594e-05, 'epoch': 4.624006183745583}
{'eval_valid_loss': 0.07117263227701187, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.141, 'eval_valid_steps_per_second': 18.129, 'epoch': 4.624006183745583}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0813, 'grad_norm': 0.11605573844831049, 'learning_rate': 7.846398675426894e-05, 'epoch': 4.627456934628976}
{'loss': 0.0798, 'grad_norm': 0.08199819345096329, 'learning_rate': 7.843421537939039e-05, 'epoch': 4.630907685512367}
{'eval_valid_loss': 0.07103853672742844, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.622, 'eval_valid_steps_per_second': 17.978, 'epoch': 4.630907685512367}
{'loss': 0.0809, 'grad_norm': 0.08791119728788814, 'learning_rate': 7.840442909766818e-05, 'epoch': 4.634358436395759}
{'loss': 0.0811, 'grad_norm': 0.05937297718315318, 'learning_rate': 7.837462792471799e-05, 'epoch': 4.637809187279152}
{'eval_valid_loss': 0.07150153070688248, 'eval_valid_runtime': 0.3971, 'eval_valid_samples_per_second': 410.483, 'eval_valid_steps_per_second': 17.628, 'epoch': 4.637809187279152}
{'loss': 0.0794, 'grad_norm': 0.07086343698205097, 'learning_rate': 7.834481187616326e-05, 'epoch': 4.641259938162544}
{'loss': 0.081, 'grad_norm': 0.07080637143115624, 'learning_rate': 7.83149809676353e-05, 'epoch': 4.644710689045937}
{'eval_valid_loss': 0.07140084356069565, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.183, 'eval_valid_steps_per_second': 18.045, 'epoch': 4.644710689045937}
{'loss': 0.0815, 'grad_norm': 0.07391530411134713, 'learning_rate': 7.828513521477318e-05, 'epoch': 4.6481614399293285}
{'loss': 0.0797, 'grad_norm': 0.07100685813233294, 'learning_rate': 7.825527463322373e-05, 'epoch': 4.65161219081272}
{'eval_valid_loss': 0.07116948068141937, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 420.981, 'eval_valid_steps_per_second': 18.079, 'epoch': 4.65161219081272}
{'loss': 0.0796, 'grad_norm': 0.0673990130817507, 'learning_rate': 7.822539923864161e-05, 'epoch': 4.655062941696113}
{'loss': 0.0803, 'grad_norm': 0.08722501969846887, 'learning_rate': 7.819550904668918e-05, 'epoch': 4.658513692579505}
{'eval_valid_loss': 0.0713907852768898, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.708, 'eval_valid_steps_per_second': 18.067, 'epoch': 4.658513692579505}
{'loss': 0.0792, 'grad_norm': 0.08237028318349622, 'learning_rate': 7.816560407303661e-05, 'epoch': 4.661964443462898}
{'loss': 0.08, 'grad_norm': 0.07007197094437782, 'learning_rate': 7.81356843333618e-05, 'epoch': 4.66541519434629}
{'eval_valid_loss': 0.07132766395807266, 'eval_valid_runtime': 0.3862, 'eval_valid_samples_per_second': 422.056, 'eval_valid_steps_per_second': 18.125, 'epoch': 4.66541519434629}
{'loss': 0.0804, 'grad_norm': 0.08433021706272859, 'learning_rate': 7.81057498433504e-05, 'epoch': 4.668865945229682}
{'loss': 0.0789, 'grad_norm': 0.07144104005784284, 'learning_rate': 7.807580061869573e-05, 'epoch': 4.672316696113074}
{'eval_valid_loss': 0.07127491384744644, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.385, 'eval_valid_steps_per_second': 18.096, 'epoch': 4.672316696113074}
{'loss': 0.0789, 'grad_norm': 0.0758532838466952, 'learning_rate': 7.804583667509894e-05, 'epoch': 4.675767446996466}
{'loss': 0.0791, 'grad_norm': 0.06677935872918724, 'learning_rate': 7.801585802826886e-05, 'epoch': 4.679218197879859}
{'eval_valid_loss': 0.07137561589479446, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.411, 'eval_valid_steps_per_second': 18.097, 'epoch': 4.679218197879859}
{'loss': 0.0792, 'grad_norm': 0.07195627876969962, 'learning_rate': 7.798586469392195e-05, 'epoch': 4.682668948763251}
{'loss': 0.0804, 'grad_norm': 0.06739418400141776, 'learning_rate': 7.795585668778248e-05, 'epoch': 4.686119699646643}
{'eval_valid_loss': 0.07116033136844635, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.891, 'eval_valid_steps_per_second': 18.032, 'epoch': 4.686119699646643}
{'loss': 0.0792, 'grad_norm': 0.08643781895035738, 'learning_rate': 7.792583402558236e-05, 'epoch': 4.689570450530035}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0799, 'grad_norm': 0.06646168427299615, 'learning_rate': 7.789579672306117e-05, 'epoch': 4.693021201413428}
{'eval_valid_loss': 0.0712481290102005, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.383, 'eval_valid_steps_per_second': 18.053, 'epoch': 4.693021201413428}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0796, 'grad_norm': 0.06859892692144114, 'learning_rate': 7.78657447959662e-05, 'epoch': 4.69647195229682}
{'loss': 0.0797, 'grad_norm': 0.06046874984232492, 'learning_rate': 7.783567826005239e-05, 'epoch': 4.699922703180212}
{'eval_valid_loss': 0.07118918001651764, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.382, 'eval_valid_steps_per_second': 18.053, 'epoch': 4.699922703180212}
{'loss': 0.0811, 'grad_norm': 0.10282664106013699, 'learning_rate': 7.780559713108231e-05, 'epoch': 4.7033734540636045}
{'loss': 0.0808, 'grad_norm': 0.06818484835173368, 'learning_rate': 7.777550142482625e-05, 'epoch': 4.706824204946996}
{'eval_valid_loss': 0.07108261436223984, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.592, 'eval_valid_steps_per_second': 18.062, 'epoch': 4.706824204946996}
{'loss': 0.0799, 'grad_norm': 0.08372876516935568, 'learning_rate': 7.774539115706209e-05, 'epoch': 4.710274955830389}
{'loss': 0.0809, 'grad_norm': 0.062159041355316844, 'learning_rate': 7.771526634357535e-05, 'epoch': 4.713725706713781}
{'eval_valid_loss': 0.0715554729104042, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.049, 'eval_valid_steps_per_second': 18.082, 'epoch': 4.713725706713781}
{'loss': 0.0802, 'grad_norm': 0.07482489494125795, 'learning_rate': 7.76851270001592e-05, 'epoch': 4.717176457597173}
{'loss': 0.0803, 'grad_norm': 0.08402441150470345, 'learning_rate': 7.765497314261438e-05, 'epoch': 4.720627208480566}
{'eval_valid_loss': 0.07084589451551437, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.508, 'eval_valid_steps_per_second': 18.102, 'epoch': 4.720627208480566}
{'loss': 0.0802, 'grad_norm': 0.06502805521962665, 'learning_rate': 7.762480478674929e-05, 'epoch': 4.7240779593639575}
{'loss': 0.0808, 'grad_norm': 0.08360132394584216, 'learning_rate': 7.75946219483799e-05, 'epoch': 4.72752871024735}
{'eval_valid_loss': 0.0709785744547844, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.627, 'eval_valid_steps_per_second': 18.107, 'epoch': 4.72752871024735}
{'loss': 0.0805, 'grad_norm': 0.06892926590123455, 'learning_rate': 7.756442464332978e-05, 'epoch': 4.730979461130742}
{'loss': 0.0792, 'grad_norm': 0.08330502895615147, 'learning_rate': 7.753421288743009e-05, 'epoch': 4.734430212014134}
{'eval_valid_loss': 0.07035897672176361, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 420.012, 'eval_valid_steps_per_second': 18.037, 'epoch': 4.734430212014134}
{'loss': 0.0813, 'grad_norm': 0.07408418463630398, 'learning_rate': 7.750398669651957e-05, 'epoch': 4.737880962897527}
{'loss': 0.0808, 'grad_norm': 0.09211633517682166, 'learning_rate': 7.74737460864445e-05, 'epoch': 4.7413317137809186}
{'eval_valid_loss': 0.07077231258153915, 'eval_valid_runtime': 0.3894, 'eval_valid_samples_per_second': 418.622, 'eval_valid_steps_per_second': 17.978, 'epoch': 4.7413317137809186}
{'loss': 0.0808, 'grad_norm': 0.07356352267478591, 'learning_rate': 7.744349107305879e-05, 'epoch': 4.744782464664311}
{'loss': 0.0803, 'grad_norm': 0.07101136734070604, 'learning_rate': 7.741322167222378e-05, 'epoch': 4.748233215547703}
{'eval_valid_loss': 0.07059984654188156, 'eval_valid_runtime': 0.3888, 'eval_valid_samples_per_second': 419.189, 'eval_valid_steps_per_second': 18.002, 'epoch': 4.748233215547703}
{'loss': 0.0809, 'grad_norm': 0.0596678557034895, 'learning_rate': 7.738293789980846e-05, 'epoch': 4.751683966431095}
{'loss': 0.0796, 'grad_norm': 0.06513253698690058, 'learning_rate': 7.735263977168932e-05, 'epoch': 4.755134717314488}
{'eval_valid_loss': 0.0708942785859108, 'eval_valid_runtime': 0.3869, 'eval_valid_samples_per_second': 421.286, 'eval_valid_steps_per_second': 18.092, 'epoch': 4.755134717314488}
{'loss': 0.0808, 'grad_norm': 0.05079217651581932, 'learning_rate': 7.732232730375035e-05, 'epoch': 4.75858546819788}
{'loss': 0.08, 'grad_norm': 0.07495420070536947, 'learning_rate': 7.729200051188312e-05, 'epoch': 4.762036219081272}
{'eval_valid_loss': 0.07101927697658539, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.368, 'eval_valid_steps_per_second': 18.096, 'epoch': 4.762036219081272}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0803, 'grad_norm': 0.07385945039027135, 'learning_rate': 7.726165941198665e-05, 'epoch': 4.765486969964664}
{'loss': 0.0799, 'grad_norm': 0.08281232518441799, 'learning_rate': 7.723130401996745e-05, 'epoch': 4.768937720848056}
{'eval_valid_loss': 0.0707225576043129, 'eval_valid_runtime': 0.3923, 'eval_valid_samples_per_second': 415.52, 'eval_valid_steps_per_second': 17.844, 'epoch': 4.768937720848056}
{'loss': 0.0802, 'grad_norm': 0.07897377122414456, 'learning_rate': 7.720093435173961e-05, 'epoch': 4.772388471731449}
{'loss': 0.0805, 'grad_norm': 0.06737369832532542, 'learning_rate': 7.717055042322461e-05, 'epoch': 4.775839222614841}
{'eval_valid_loss': 0.07091008871793747, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.528, 'eval_valid_steps_per_second': 18.06, 'epoch': 4.775839222614841}
{'loss': 0.0803, 'grad_norm': 0.05874403133137165, 'learning_rate': 7.714015225035146e-05, 'epoch': 4.7792899734982335}
{'loss': 0.0801, 'grad_norm': 0.06589214516722566, 'learning_rate': 7.710973984905662e-05, 'epoch': 4.782740724381625}
{'eval_valid_loss': 0.07088464498519897, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.398, 'eval_valid_steps_per_second': 18.054, 'epoch': 4.782740724381625}
{'loss': 0.0802, 'grad_norm': 0.06144380151854967, 'learning_rate': 7.707931323528402e-05, 'epoch': 4.786191475265017}
{'loss': 0.0801, 'grad_norm': 0.07065990919351184, 'learning_rate': 7.704887242498502e-05, 'epoch': 4.78964222614841}
{'eval_valid_loss': 0.07091928273439407, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.622, 'eval_valid_steps_per_second': 18.106, 'epoch': 4.78964222614841}
{'loss': 0.0801, 'grad_norm': 0.0661259548056101, 'learning_rate': 7.701841743411844e-05, 'epoch': 4.793092977031802}
{'loss': 0.0795, 'grad_norm': 0.08826712247730066, 'learning_rate': 7.698794827865055e-05, 'epoch': 4.796543727915195}
{'eval_valid_loss': 0.07079838961362839, 'eval_valid_runtime': 0.3879, 'eval_valid_samples_per_second': 420.26, 'eval_valid_steps_per_second': 18.048, 'epoch': 4.796543727915195}
{'loss': 0.0804, 'grad_norm': 0.06456128497463465, 'learning_rate': 7.695746497455498e-05, 'epoch': 4.799994478798586}
{'loss': 0.0814, 'grad_norm': 0.08025819780418476, 'learning_rate': 7.692696753781286e-05, 'epoch': 4.803445229681979}
{'eval_valid_loss': 0.0708845853805542, 'eval_valid_runtime': 0.3875, 'eval_valid_samples_per_second': 420.629, 'eval_valid_steps_per_second': 18.064, 'epoch': 4.803445229681979}
{'loss': 0.0802, 'grad_norm': 0.06414883055045222, 'learning_rate': 7.689645598441268e-05, 'epoch': 4.806895980565371}
{'loss': 0.0807, 'grad_norm': 0.07998913820328839, 'learning_rate': 7.686593033035037e-05, 'epoch': 4.810346731448763}
{'eval_valid_loss': 0.0706019178032875, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.454, 'eval_valid_steps_per_second': 18.013, 'epoch': 4.810346731448763}
{'loss': 0.0801, 'grad_norm': 0.06801511803465216, 'learning_rate': 7.683539059162917e-05, 'epoch': 4.813797482332156}
{'loss': 0.0806, 'grad_norm': 0.06616651823976215, 'learning_rate': 7.680483678425981e-05, 'epoch': 4.8172482332155475}
{'eval_valid_loss': 0.07031873613595963, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.301, 'eval_valid_steps_per_second': 18.05, 'epoch': 4.8172482332155475}
{'loss': 0.0803, 'grad_norm': 0.05627797033366572, 'learning_rate': 7.677426892426032e-05, 'epoch': 4.82069898409894}
{'loss': 0.0789, 'grad_norm': 0.07557798696967537, 'learning_rate': 7.674368702765613e-05, 'epoch': 4.824149734982332}
{'eval_valid_loss': 0.0707467645406723, 'eval_valid_runtime': 0.391, 'eval_valid_samples_per_second': 416.851, 'eval_valid_steps_per_second': 17.902, 'epoch': 4.824149734982332}
{'loss': 0.0789, 'grad_norm': 0.07235081059216528, 'learning_rate': 7.671309111048002e-05, 'epoch': 4.827600485865725}
{'loss': 0.0803, 'grad_norm': 0.06242325973945633, 'learning_rate': 7.66824811887721e-05, 'epoch': 4.831051236749117}
{'eval_valid_loss': 0.07050342112779617, 'eval_valid_runtime': 0.3989, 'eval_valid_samples_per_second': 408.62, 'eval_valid_steps_per_second': 17.548, 'epoch': 4.831051236749117}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0796, 'grad_norm': 0.08585104056768371, 'learning_rate': 7.665185727857988e-05, 'epoch': 4.834501987632509}
{'loss': 0.0806, 'grad_norm': 0.07990025623555953, 'learning_rate': 7.662121939595817e-05, 'epoch': 4.837952738515901}
{'eval_valid_loss': 0.07087643444538116, 'eval_valid_runtime': 0.3954, 'eval_valid_samples_per_second': 412.264, 'eval_valid_steps_per_second': 17.705, 'epoch': 4.837952738515901}
{'loss': 0.0792, 'grad_norm': 0.07097839232112951, 'learning_rate': 7.659056755696907e-05, 'epoch': 4.841403489399293}
{'loss': 0.0806, 'grad_norm': 0.07079256835834344, 'learning_rate': 7.655990177768204e-05, 'epoch': 4.844854240282686}
{'eval_valid_loss': 0.0708877220749855, 'eval_valid_runtime': 0.3891, 'eval_valid_samples_per_second': 418.936, 'eval_valid_steps_per_second': 17.991, 'epoch': 4.844854240282686}
{'loss': 0.0809, 'grad_norm': 0.07310890324111252, 'learning_rate': 7.652922207417384e-05, 'epoch': 4.848304991166078}
{'loss': 0.0801, 'grad_norm': 0.07121577850648053, 'learning_rate': 7.649852846252854e-05, 'epoch': 4.85175574204947}
{'eval_valid_loss': 0.07060905545949936, 'eval_valid_runtime': 0.3886, 'eval_valid_samples_per_second': 419.448, 'eval_valid_steps_per_second': 18.013, 'epoch': 4.85175574204947}
{'loss': 0.0795, 'grad_norm': 0.05692175730555585, 'learning_rate': 7.646782095883745e-05, 'epoch': 4.855206492932862}
{'loss': 0.0811, 'grad_norm': 0.10127614923721348, 'learning_rate': 7.643709957919924e-05, 'epoch': 4.858657243816254}
{'eval_valid_loss': 0.0707712322473526, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.361, 'eval_valid_steps_per_second': 17.966, 'epoch': 4.858657243816254}
{'loss': 0.0798, 'grad_norm': 0.06330853716415238, 'learning_rate': 7.640636433971981e-05, 'epoch': 4.862107994699647}
{'loss': 0.0788, 'grad_norm': 0.07633462467501508, 'learning_rate': 7.637561525651234e-05, 'epoch': 4.865558745583039}
{'eval_valid_loss': 0.07071427255868912, 'eval_valid_runtime': 0.3908, 'eval_valid_samples_per_second': 417.074, 'eval_valid_steps_per_second': 17.911, 'epoch': 4.865558745583039}
{'loss': 0.0804, 'grad_norm': 0.07256688311134937, 'learning_rate': 7.634485234569721e-05, 'epoch': 4.869009496466431}
{'loss': 0.0818, 'grad_norm': 0.06709423859835024, 'learning_rate': 7.631407562340215e-05, 'epoch': 4.8724602473498235}
{'eval_valid_loss': 0.07044830173254013, 'eval_valid_runtime': 0.3927, 'eval_valid_samples_per_second': 415.077, 'eval_valid_steps_per_second': 17.825, 'epoch': 4.8724602473498235}
{'loss': 0.0796, 'grad_norm': 0.05451587372433643, 'learning_rate': 7.628328510576208e-05, 'epoch': 4.875910998233215}
{'loss': 0.0798, 'grad_norm': 0.08909698748160397, 'learning_rate': 7.625248080891911e-05, 'epoch': 4.879361749116608}
{'eval_valid_loss': 0.07101546972990036, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.362, 'eval_valid_steps_per_second': 17.966, 'epoch': 4.879361749116608}
{'loss': 0.081, 'grad_norm': 0.06262172514488505, 'learning_rate': 7.622166274902265e-05, 'epoch': 4.8828125}
{'loss': 0.0788, 'grad_norm': 0.06373542850947911, 'learning_rate': 7.61908309422293e-05, 'epoch': 4.886263250883392}
{'eval_valid_loss': 0.07069583237171173, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.101, 'eval_valid_steps_per_second': 17.955, 'epoch': 4.886263250883392}
{'loss': 0.0802, 'grad_norm': 0.0943938522548894, 'learning_rate': 7.615998540470284e-05, 'epoch': 4.889714001766785}
{'loss': 0.0795, 'grad_norm': 0.07494640684668426, 'learning_rate': 7.612912615261428e-05, 'epoch': 4.8931647526501765}
{'eval_valid_loss': 0.070858433842659, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.851, 'eval_valid_steps_per_second': 17.987, 'epoch': 4.8931647526501765}
{'loss': 0.0807, 'grad_norm': 0.07161013883660369, 'learning_rate': 7.609825320214176e-05, 'epoch': 4.896615503533569}
{'loss': 0.0805, 'grad_norm': 0.07573909178778039, 'learning_rate': 7.606736656947072e-05, 'epoch': 4.900066254416961}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'eval_valid_loss': 0.0708426833152771, 'eval_valid_runtime': 0.3892, 'eval_valid_samples_per_second': 418.83, 'eval_valid_steps_per_second': 17.987, 'epoch': 4.900066254416961}
{'loss': 0.0804, 'grad_norm': 0.06407530881049885, 'learning_rate': 7.603646627079364e-05, 'epoch': 4.903517005300353}
{'loss': 0.0797, 'grad_norm': 0.07262165176994696, 'learning_rate': 7.600555232231026e-05, 'epoch': 4.906967756183746}
{'eval_valid_loss': 0.07091774791479111, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 416.059, 'eval_valid_steps_per_second': 17.868, 'epoch': 4.906967756183746}
{'loss': 0.0801, 'grad_norm': 0.0656854295377012, 'learning_rate': 7.597462474022743e-05, 'epoch': 4.910418507067138}
{'loss': 0.0801, 'grad_norm': 0.06819230254944364, 'learning_rate': 7.594368354075918e-05, 'epoch': 4.91386925795053}
{'eval_valid_loss': 0.0707835704088211, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.414, 'eval_valid_steps_per_second': 17.883, 'epoch': 4.91386925795053}
{'loss': 0.0805, 'grad_norm': 0.06087292174111691, 'learning_rate': 7.591272874012662e-05, 'epoch': 4.917320008833922}
{'loss': 0.0807, 'grad_norm': 0.07976751744085775, 'learning_rate': 7.588176035455806e-05, 'epoch': 4.920770759717314}
{'eval_valid_loss': 0.0707378163933754, 'eval_valid_runtime': 0.3896, 'eval_valid_samples_per_second': 418.372, 'eval_valid_steps_per_second': 17.967, 'epoch': 4.920770759717314}
{'loss': 0.0793, 'grad_norm': 0.06158372035715435, 'learning_rate': 7.585077840028889e-05, 'epoch': 4.924221510600707}
{'loss': 0.078, 'grad_norm': 0.0678445633319532, 'learning_rate': 7.581978289356163e-05, 'epoch': 4.927672261484099}
{'eval_valid_loss': 0.07071665674448013, 'eval_valid_runtime': 0.3934, 'eval_valid_samples_per_second': 414.343, 'eval_valid_steps_per_second': 17.794, 'epoch': 4.927672261484099}
{'loss': 0.0805, 'grad_norm': 0.06597573215871072, 'learning_rate': 7.578877385062589e-05, 'epoch': 4.931123012367491}
{'loss': 0.0799, 'grad_norm': 0.06744334292978116, 'learning_rate': 7.575775128773837e-05, 'epoch': 4.934573763250883}
{'eval_valid_loss': 0.07073547691106796, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.725, 'eval_valid_steps_per_second': 17.939, 'epoch': 4.934573763250883}
{'loss': 0.081, 'grad_norm': 0.085776058358949, 'learning_rate': 7.572671522116292e-05, 'epoch': 4.938024514134275}
{'loss': 0.0803, 'grad_norm': 0.04508923101279223, 'learning_rate': 7.569566566717039e-05, 'epoch': 4.941475265017668}
{'eval_valid_loss': 0.07072506099939346, 'eval_valid_runtime': 0.3901, 'eval_valid_samples_per_second': 417.822, 'eval_valid_steps_per_second': 17.943, 'epoch': 4.941475265017668}
{'loss': 0.0798, 'grad_norm': 0.11056584907635876, 'learning_rate': 7.566460264203874e-05, 'epoch': 4.94492601590106}
{'loss': 0.0807, 'grad_norm': 0.07383963387418298, 'learning_rate': 7.563352616205297e-05, 'epoch': 4.9483767667844525}
{'eval_valid_loss': 0.07031626999378204, 'eval_valid_runtime': 0.3923, 'eval_valid_samples_per_second': 415.5, 'eval_valid_steps_per_second': 17.844, 'epoch': 4.9483767667844525}
{'loss': 0.0801, 'grad_norm': 0.08315480287769485, 'learning_rate': 7.560243624350519e-05, 'epoch': 4.951827517667844}
{'loss': 0.0795, 'grad_norm': 0.08852821781752357, 'learning_rate': 7.557133290269446e-05, 'epoch': 4.955278268551237}
{'eval_valid_loss': 0.0708451122045517, 'eval_valid_runtime': 0.392, 'eval_valid_samples_per_second': 415.822, 'eval_valid_steps_per_second': 17.857, 'epoch': 4.955278268551237}
{'loss': 0.08, 'grad_norm': 0.06637431631002666, 'learning_rate': 7.554021615592702e-05, 'epoch': 4.958729019434629}
{'loss': 0.0796, 'grad_norm': 0.0749588628579389, 'learning_rate': 7.550908601951594e-05, 'epoch': 4.962179770318021}
{'eval_valid_loss': 0.07091433554887772, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.49, 'eval_valid_steps_per_second': 17.929, 'epoch': 4.962179770318021}
{'loss': 0.0798, 'grad_norm': 0.0714024538997714, 'learning_rate': 7.547794250978149e-05, 'epoch': 4.965630521201414}
{'loss': 0.0808, 'grad_norm': 0.07168770777793743, 'learning_rate': 7.544678564305087e-05, 'epoch': 4.969081272084805}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'eval_valid_loss': 0.07059933990240097, 'eval_valid_runtime': 0.3915, 'eval_valid_samples_per_second': 416.354, 'eval_valid_steps_per_second': 17.88, 'epoch': 4.969081272084805}
{'loss': 0.0805, 'grad_norm': 0.06886169097356831, 'learning_rate': 7.541561543565828e-05, 'epoch': 4.972532022968198}
{'loss': 0.0801, 'grad_norm': 0.07063156410085966, 'learning_rate': 7.538443190394495e-05, 'epoch': 4.97598277385159}
{'eval_valid_loss': 0.07033432275056839, 'eval_valid_runtime': 0.3956, 'eval_valid_samples_per_second': 412.073, 'eval_valid_steps_per_second': 17.696, 'epoch': 4.97598277385159}
{'loss': 0.08, 'grad_norm': 0.0682640047704883, 'learning_rate': 7.535323506425904e-05, 'epoch': 4.979433524734983}
{'loss': 0.0798, 'grad_norm': 0.06916999643331852, 'learning_rate': 7.532202493295575e-05, 'epoch': 4.982884275618375}
{'eval_valid_loss': 0.0704653188586235, 'eval_valid_runtime': 0.393, 'eval_valid_samples_per_second': 414.783, 'eval_valid_steps_per_second': 17.813, 'epoch': 4.982884275618375}
{'loss': 0.0804, 'grad_norm': 0.06817156932687532, 'learning_rate': 7.529080152639721e-05, 'epoch': 4.9863350265017665}
{'loss': 0.0793, 'grad_norm': 0.05859059974774989, 'learning_rate': 7.52595648609525e-05, 'epoch': 4.989785777385159}
{'eval_valid_loss': 0.0707031637430191, 'eval_valid_runtime': 0.3918, 'eval_valid_samples_per_second': 416.022, 'eval_valid_steps_per_second': 17.866, 'epoch': 4.989785777385159}
{'loss': 0.0805, 'grad_norm': 0.07502083824751178, 'learning_rate': 7.522831495299769e-05, 'epoch': 4.993236528268551}
{'loss': 0.0795, 'grad_norm': 0.0475851465344472, 'learning_rate': 7.519705181891574e-05, 'epoch': 4.996687279151944}
{'eval_valid_loss': 0.07070834189653397, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.587, 'eval_valid_steps_per_second': 18.019, 'epoch': 4.996687279151944}
{'loss': 0.08, 'grad_norm': 0.06420345237805573, 'learning_rate': 7.516577547509663e-05, 'epoch': 5.000138030035336}
{'loss': 0.0797, 'grad_norm': 0.09071241687739655, 'learning_rate': 7.513448593793716e-05, 'epoch': 5.003588780918728}
{'eval_valid_loss': 0.07071593403816223, 'eval_valid_runtime': 0.3899, 'eval_valid_samples_per_second': 418.027, 'eval_valid_steps_per_second': 17.952, 'epoch': 5.003588780918728}
{'loss': 0.0781, 'grad_norm': 0.05620378533161527, 'learning_rate': 7.510318322384112e-05, 'epoch': 5.00703953180212}
{'loss': 0.0784, 'grad_norm': 0.05647752800360444, 'learning_rate': 7.507186734921918e-05, 'epoch': 5.010490282685512}
{'eval_valid_loss': 0.0706823468208313, 'eval_valid_runtime': 0.3902, 'eval_valid_samples_per_second': 417.781, 'eval_valid_steps_per_second': 17.942, 'epoch': 5.010490282685512}
{'loss': 0.0788, 'grad_norm': 0.07450507656503312, 'learning_rate': 7.50405383304889e-05, 'epoch': 5.013941033568905}
{'loss': 0.0785, 'grad_norm': 0.0570792509560586, 'learning_rate': 7.500919618407478e-05, 'epoch': 5.017391784452297}
{'eval_valid_loss': 0.0702841728925705, 'eval_valid_runtime': 0.3907, 'eval_valid_samples_per_second': 417.213, 'eval_valid_steps_per_second': 17.917, 'epoch': 5.017391784452297}
{'loss': 0.0797, 'grad_norm': 0.05479384265147722, 'learning_rate': 7.497784092640812e-05, 'epoch': 5.020842535335689}
{'loss': 0.0794, 'grad_norm': 0.08945051862855606, 'learning_rate': 7.494647257392719e-05, 'epoch': 5.0242932862190814}
{'eval_valid_loss': 0.07035161554813385, 'eval_valid_runtime': 0.3995, 'eval_valid_samples_per_second': 408.045, 'eval_valid_steps_per_second': 17.523, 'epoch': 5.0242932862190814}
{'loss': 0.0794, 'grad_norm': 0.06724168522964909, 'learning_rate': 7.491509114307704e-05, 'epoch': 5.027744037102473}
{'loss': 0.0797, 'grad_norm': 0.06892305700396037, 'learning_rate': 7.488369665030963e-05, 'epoch': 5.031194787985866}
{'eval_valid_loss': 0.07078652828931808, 'eval_valid_runtime': 0.3922, 'eval_valid_samples_per_second': 415.64, 'eval_valid_steps_per_second': 17.85, 'epoch': 5.031194787985866}
{'loss': 0.0783, 'grad_norm': 0.06911308374833264, 'learning_rate': 7.485228911208375e-05, 'epoch': 5.034645538869258}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'loss': 0.0788, 'grad_norm': 0.0820556437426516, 'learning_rate': 7.482086854486504e-05, 'epoch': 5.03809628975265}
{'eval_valid_loss': 0.07101404666900635, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.726, 'eval_valid_steps_per_second': 18.068, 'epoch': 5.03809628975265}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0773, 'grad_norm': 0.06359537417969746, 'learning_rate': 7.478943496512592e-05, 'epoch': 5.0415470406360425}
{'loss': 0.0796, 'grad_norm': 0.06624713374756928, 'learning_rate': 7.475798838934571e-05, 'epoch': 5.044997791519434}
{'eval_valid_loss': 0.07044022530317307, 'eval_valid_runtime': 0.39, 'eval_valid_samples_per_second': 417.918, 'eval_valid_steps_per_second': 17.947, 'epoch': 5.044997791519434}
{'loss': 0.0804, 'grad_norm': 0.09399025447664232, 'learning_rate': 7.472652883401051e-05, 'epoch': 5.048448542402827}
{'loss': 0.0795, 'grad_norm': 0.06600686625485402, 'learning_rate': 7.469505631561317e-05, 'epoch': 5.051899293286219}
{'eval_valid_loss': 0.07070520520210266, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.295, 'eval_valid_steps_per_second': 18.007, 'epoch': 5.051899293286219}
{'loss': 0.0799, 'grad_norm': 0.05396142131467741, 'learning_rate': 7.466357085065345e-05, 'epoch': 5.055350044169611}
{'loss': 0.0788, 'grad_norm': 0.08826890418733246, 'learning_rate': 7.46320724556378e-05, 'epoch': 5.058800795053004}
{'eval_valid_loss': 0.07048986852169037, 'eval_valid_runtime': 0.3895, 'eval_valid_samples_per_second': 418.518, 'eval_valid_steps_per_second': 17.973, 'epoch': 5.058800795053004}
{'loss': 0.0795, 'grad_norm': 0.08062953471585849, 'learning_rate': 7.460056114707948e-05, 'epoch': 5.0622515459363955}
{'loss': 0.0798, 'grad_norm': 0.058507164543773936, 'learning_rate': 7.456903694149855e-05, 'epoch': 5.065702296819788}
{'eval_valid_loss': 0.07029880583286285, 'eval_valid_runtime': 0.388, 'eval_valid_samples_per_second': 420.141, 'eval_valid_steps_per_second': 18.043, 'epoch': 5.065702296819788}
{'loss': 0.0797, 'grad_norm': 0.04716489271452102, 'learning_rate': 7.453749985542175e-05, 'epoch': 5.06915304770318}
{'loss': 0.0791, 'grad_norm': 0.07133262773646631, 'learning_rate': 7.450594990538268e-05, 'epoch': 5.072603798586573}
{'eval_valid_loss': 0.07045169174671173, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.593, 'eval_valid_steps_per_second': 18.019, 'epoch': 5.072603798586573}
{'loss': 0.0785, 'grad_norm': 0.06103570961701358, 'learning_rate': 7.44743871079216e-05, 'epoch': 5.076054549469965}
{'loss': 0.0795, 'grad_norm': 0.056626143121876325, 'learning_rate': 7.444281147958554e-05, 'epoch': 5.079505300353357}
{'eval_valid_loss': 0.07072547823190689, 'eval_valid_runtime': 0.3882, 'eval_valid_samples_per_second': 419.835, 'eval_valid_steps_per_second': 18.03, 'epoch': 5.079505300353357}
{'loss': 0.0789, 'grad_norm': 0.053420290401256176, 'learning_rate': 7.441122303692827e-05, 'epoch': 5.082956051236749}
{'loss': 0.0804, 'grad_norm': 0.08797518839349795, 'learning_rate': 7.437962179651024e-05, 'epoch': 5.086406802120141}
{'eval_valid_loss': 0.07046908885240555, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.632, 'eval_valid_steps_per_second': 18.107, 'epoch': 5.086406802120141}
{'loss': 0.0786, 'grad_norm': 0.06180353911880077, 'learning_rate': 7.434800777489863e-05, 'epoch': 5.089857553003534}
{'loss': 0.0798, 'grad_norm': 0.05449448527603709, 'learning_rate': 7.431638098866733e-05, 'epoch': 5.093308303886926}
{'eval_valid_loss': 0.07064488530158997, 'eval_valid_runtime': 0.3878, 'eval_valid_samples_per_second': 420.344, 'eval_valid_steps_per_second': 18.052, 'epoch': 5.093308303886926}
{'loss': 0.0799, 'grad_norm': 0.06671450249333948, 'learning_rate': 7.42847414543969e-05, 'epoch': 5.096759054770318}
{'loss': 0.0793, 'grad_norm': 0.08505427031370315, 'learning_rate': 7.42530891886746e-05, 'epoch': 5.10020980565371}
{'eval_valid_loss': 0.07047121971845627, 'eval_valid_runtime': 0.3904, 'eval_valid_samples_per_second': 417.493, 'eval_valid_steps_per_second': 17.929, 'epoch': 5.10020980565371}
{'loss': 0.0789, 'grad_norm': 0.07658119813617738, 'learning_rate': 7.422142420809439e-05, 'epoch': 5.103660556537102}
{'loss': 0.0786, 'grad_norm': 0.0871827284049225, 'learning_rate': 7.418974652925682e-05, 'epoch': 5.107111307420495}
{'eval_valid_loss': 0.07050290703773499, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.57, 'eval_valid_steps_per_second': 18.018, 'epoch': 5.107111307420495}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.08, 'grad_norm': 0.06223126432830994, 'learning_rate': 7.415805616876917e-05, 'epoch': 5.110562058303887}
{'loss': 0.079, 'grad_norm': 0.14178821926292096, 'learning_rate': 7.412635314324533e-05, 'epoch': 5.114012809187279}
{'eval_valid_loss': 0.07018245756626129, 'eval_valid_runtime': 0.3871, 'eval_valid_samples_per_second': 421.122, 'eval_valid_steps_per_second': 18.085, 'epoch': 5.114012809187279}
{'loss': 0.0789, 'grad_norm': 0.06302087658581176, 'learning_rate': 7.409463746930584e-05, 'epoch': 5.1174635600706715}
{'loss': 0.0799, 'grad_norm': 0.056315690866326755, 'learning_rate': 7.406290916357787e-05, 'epoch': 5.120914310954063}
{'eval_valid_loss': 0.07043809443712234, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.574, 'eval_valid_steps_per_second': 18.061, 'epoch': 5.120914310954063}
{'loss': 0.0801, 'grad_norm': 0.08800020502106777, 'learning_rate': 7.403116824269523e-05, 'epoch': 5.124365061837456}
{'loss': 0.0785, 'grad_norm': 0.04933191516407507, 'learning_rate': 7.399941472329833e-05, 'epoch': 5.127815812720848}
{'eval_valid_loss': 0.07030823826789856, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.427, 'eval_valid_steps_per_second': 18.055, 'epoch': 5.127815812720848}
{'loss': 0.0797, 'grad_norm': 0.08607545289292191, 'learning_rate': 7.396764862203415e-05, 'epoch': 5.131266563604241}
{'loss': 0.0781, 'grad_norm': 0.07026756953476852, 'learning_rate': 7.393586995555635e-05, 'epoch': 5.134717314487633}
{'eval_valid_loss': 0.07072000205516815, 'eval_valid_runtime': 0.3877, 'eval_valid_samples_per_second': 420.476, 'eval_valid_steps_per_second': 18.057, 'epoch': 5.134717314487633}
{'loss': 0.0786, 'grad_norm': 0.06306954521635069, 'learning_rate': 7.390407874052508e-05, 'epoch': 5.138168065371024}
{'loss': 0.079, 'grad_norm': 0.06994046686109086, 'learning_rate': 7.387227499360711e-05, 'epoch': 5.141618816254417}
{'eval_valid_loss': 0.07023710757493973, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.797, 'eval_valid_steps_per_second': 18.071, 'epoch': 5.141618816254417}
{'loss': 0.0799, 'grad_norm': 0.05798528887778995, 'learning_rate': 7.384045873147583e-05, 'epoch': 5.145069567137809}
{'loss': 0.079, 'grad_norm': 0.09560725403703985, 'learning_rate': 7.380862997081112e-05, 'epoch': 5.148520318021202}
{'eval_valid_loss': 0.0702349990606308, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.763, 'eval_valid_steps_per_second': 18.07, 'epoch': 5.148520318021202}
{'loss': 0.0801, 'grad_norm': 0.0967259920800574, 'learning_rate': 7.377678872829946e-05, 'epoch': 5.151971068904594}
{'loss': 0.0788, 'grad_norm': 0.06595740686590273, 'learning_rate': 7.374493502063383e-05, 'epoch': 5.1554218197879855}
{'eval_valid_loss': 0.0703122466802597, 'eval_valid_runtime': 0.3855, 'eval_valid_samples_per_second': 422.785, 'eval_valid_steps_per_second': 18.156, 'epoch': 5.1554218197879855}
{'loss': 0.079, 'grad_norm': 0.0888370709981877, 'learning_rate': 7.371306886451376e-05, 'epoch': 5.158872570671378}
{'loss': 0.0786, 'grad_norm': 0.0761992098575591, 'learning_rate': 7.368119027664533e-05, 'epoch': 5.16232332155477}
{'eval_valid_loss': 0.07060610502958298, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.543, 'eval_valid_steps_per_second': 18.103, 'epoch': 5.16232332155477}
{'loss': 0.0784, 'grad_norm': 0.08567500087603261, 'learning_rate': 7.36492992737411e-05, 'epoch': 5.165774072438163}
{'loss': 0.079, 'grad_norm': 0.059438490826678604, 'learning_rate': 7.361739587252019e-05, 'epoch': 5.169224823321555}
{'eval_valid_loss': 0.07091373950242996, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.885, 'eval_valid_steps_per_second': 18.075, 'epoch': 5.169224823321555}
{'loss': 0.079, 'grad_norm': 0.06293143503061971, 'learning_rate': 7.358548008970818e-05, 'epoch': 5.172675574204947}
{'loss': 0.0785, 'grad_norm': 0.06857764217106203, 'learning_rate': 7.355355194203715e-05, 'epoch': 5.176126325088339}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.07012432813644409, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.512, 'eval_valid_steps_per_second': 18.059, 'epoch': 5.176126325088339}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0787, 'grad_norm': 0.1080613637481599, 'learning_rate': 7.352161144624565e-05, 'epoch': 5.179577075971731}
{'loss': 0.0798, 'grad_norm': 0.07013113972212168, 'learning_rate': 7.348965861907872e-05, 'epoch': 5.183027826855124}
{'eval_valid_loss': 0.06994474679231644, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 421.024, 'eval_valid_steps_per_second': 18.081, 'epoch': 5.183027826855124}
{'loss': 0.0781, 'grad_norm': 0.10905332746079291, 'learning_rate': 7.345769347728788e-05, 'epoch': 5.186478577738516}
{'loss': 0.0786, 'grad_norm': 0.08071457227879414, 'learning_rate': 7.342571603763107e-05, 'epoch': 5.189929328621908}
{'eval_valid_loss': 0.07036086171865463, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.705, 'eval_valid_steps_per_second': 18.024, 'epoch': 5.189929328621908}
{'loss': 0.0781, 'grad_norm': 0.06636295545035138, 'learning_rate': 7.339372631687269e-05, 'epoch': 5.1933800795053005}
{'loss': 0.0783, 'grad_norm': 0.06329464422738476, 'learning_rate': 7.33617243317836e-05, 'epoch': 5.196830830388692}
{'eval_valid_loss': 0.070254385471344, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.736, 'eval_valid_steps_per_second': 18.068, 'epoch': 5.196830830388692}
{'loss': 0.0787, 'grad_norm': 0.06568563509831503, 'learning_rate': 7.332971009914107e-05, 'epoch': 5.200281581272085}
{'loss': 0.0781, 'grad_norm': 0.07278803055701898, 'learning_rate': 7.329768363572877e-05, 'epoch': 5.203732332155477}
{'eval_valid_loss': 0.07024892419576645, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.452, 'eval_valid_steps_per_second': 18.099, 'epoch': 5.203732332155477}
{'loss': 0.079, 'grad_norm': 0.07228202513916426, 'learning_rate': 7.326564495833686e-05, 'epoch': 5.20718308303887}
{'loss': 0.0794, 'grad_norm': 0.07234520163970297, 'learning_rate': 7.32335940837618e-05, 'epoch': 5.2106338339222615}
{'eval_valid_loss': 0.0700329914689064, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 419.968, 'eval_valid_steps_per_second': 18.035, 'epoch': 5.2106338339222615}
{'loss': 0.0792, 'grad_norm': 0.06381586524469278, 'learning_rate': 7.320153102880649e-05, 'epoch': 5.214084584805653}
{'loss': 0.0791, 'grad_norm': 0.06769618111299301, 'learning_rate': 7.316945581028024e-05, 'epoch': 5.217535335689046}
{'eval_valid_loss': 0.07042128592729568, 'eval_valid_runtime': 0.3983, 'eval_valid_samples_per_second': 409.277, 'eval_valid_steps_per_second': 17.576, 'epoch': 5.217535335689046}
{'loss': 0.079, 'grad_norm': 0.056603541709997776, 'learning_rate': 7.313736844499873e-05, 'epoch': 5.220986086572438}
{'loss': 0.08, 'grad_norm': 0.059522913324197506, 'learning_rate': 7.310526894978396e-05, 'epoch': 5.224436837455831}
{'eval_valid_loss': 0.0707390308380127, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.497, 'eval_valid_steps_per_second': 17.886, 'epoch': 5.224436837455831}
{'loss': 0.0796, 'grad_norm': 0.06364823136459641, 'learning_rate': 7.307315734146434e-05, 'epoch': 5.227887588339223}
{'loss': 0.0797, 'grad_norm': 0.07063593384738233, 'learning_rate': 7.304103363687464e-05, 'epoch': 5.2313383392226145}
{'eval_valid_loss': 0.07032724469900131, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.918, 'eval_valid_steps_per_second': 18.119, 'epoch': 5.2313383392226145}
{'loss': 0.078, 'grad_norm': 0.07362597348221271, 'learning_rate': 7.30088978528559e-05, 'epoch': 5.234789090106007}
{'loss': 0.079, 'grad_norm': 0.09950385471629936, 'learning_rate': 7.297675000625555e-05, 'epoch': 5.238239840989399}
{'eval_valid_loss': 0.07025901228189468, 'eval_valid_runtime': 0.387, 'eval_valid_samples_per_second': 421.178, 'eval_valid_steps_per_second': 18.087, 'epoch': 5.238239840989399}
{'loss': 0.0797, 'grad_norm': 0.06406253840739075, 'learning_rate': 7.294459011392735e-05, 'epoch': 5.241690591872792}
{'loss': 0.0803, 'grad_norm': 0.057970710577138464, 'learning_rate': 7.291241819273134e-05, 'epoch': 5.245141342756184}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.0704386979341507, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.782, 'eval_valid_steps_per_second': 18.113, 'epoch': 5.245141342756184}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0794, 'grad_norm': 0.061120066142545455, 'learning_rate': 7.288023425953387e-05, 'epoch': 5.248592093639576}
{'loss': 0.0787, 'grad_norm': 0.06867968930151494, 'learning_rate': 7.284803833120764e-05, 'epoch': 5.252042844522968}
{'eval_valid_loss': 0.07042306661605835, 'eval_valid_runtime': 0.3889, 'eval_valid_samples_per_second': 419.122, 'eval_valid_steps_per_second': 17.999, 'epoch': 5.252042844522968}
{'loss': 0.0791, 'grad_norm': 0.05291192457045744, 'learning_rate': 7.281583042463157e-05, 'epoch': 5.25549359540636}
{'loss': 0.0787, 'grad_norm': 0.06658578209900211, 'learning_rate': 7.27836105566909e-05, 'epoch': 5.258944346289753}
{'eval_valid_loss': 0.07046572864055634, 'eval_valid_runtime': 0.3872, 'eval_valid_samples_per_second': 421.021, 'eval_valid_steps_per_second': 18.081, 'epoch': 5.258944346289753}
{'loss': 0.0781, 'grad_norm': 0.0582565060718176, 'learning_rate': 7.275137874427712e-05, 'epoch': 5.262395097173145}
{'loss': 0.0789, 'grad_norm': 0.05114053430918074, 'learning_rate': 7.2719135004288e-05, 'epoch': 5.2658458480565375}
{'eval_valid_loss': 0.07048873603343964, 'eval_valid_runtime': 0.3863, 'eval_valid_samples_per_second': 421.981, 'eval_valid_steps_per_second': 18.122, 'epoch': 5.2658458480565375}
{'loss': 0.0789, 'grad_norm': 0.05803559419742877, 'learning_rate': 7.268687935362755e-05, 'epoch': 5.269296598939929}
{'loss': 0.0788, 'grad_norm': 0.0562131178683641, 'learning_rate': 7.265461180920604e-05, 'epoch': 5.272747349823321}
{'eval_valid_loss': 0.07012706995010376, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.873, 'eval_valid_steps_per_second': 18.117, 'epoch': 5.272747349823321}
{'loss': 0.079, 'grad_norm': 0.06950218856269684, 'learning_rate': 7.262233238793994e-05, 'epoch': 5.276198100706714}
{'loss': 0.0796, 'grad_norm': 0.06534882240187155, 'learning_rate': 7.259004110675199e-05, 'epoch': 5.279648851590106}
{'eval_valid_loss': 0.07047022134065628, 'eval_valid_runtime': 0.3865, 'eval_valid_samples_per_second': 421.693, 'eval_valid_steps_per_second': 18.11, 'epoch': 5.279648851590106}
{'loss': 0.0788, 'grad_norm': 0.05948704250664792, 'learning_rate': 7.255773798257113e-05, 'epoch': 5.283099602473499}
{'loss': 0.0789, 'grad_norm': 0.06098632865113387, 'learning_rate': 7.252542303233251e-05, 'epoch': 5.2865503533568905}
{'eval_valid_loss': 0.0703747496008873, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.156, 'eval_valid_steps_per_second': 18.129, 'epoch': 5.2865503533568905}
{'loss': 0.0813, 'grad_norm': 0.07764354974156853, 'learning_rate': 7.249309627297746e-05, 'epoch': 5.290001104240282}
{'loss': 0.0789, 'grad_norm': 0.10887398051904215, 'learning_rate': 7.246075772145351e-05, 'epoch': 5.293451855123675}
{'eval_valid_loss': 0.07002878934144974, 'eval_valid_runtime': 0.3861, 'eval_valid_samples_per_second': 422.222, 'eval_valid_steps_per_second': 18.132, 'epoch': 5.293451855123675}
{'loss': 0.0783, 'grad_norm': 0.07022077099004187, 'learning_rate': 7.242840739471442e-05, 'epoch': 5.296902606007067}
{'loss': 0.0778, 'grad_norm': 0.04747055989452211, 'learning_rate': 7.239604530972004e-05, 'epoch': 5.30035335689046}
{'eval_valid_loss': 0.07016175985336304, 'eval_valid_runtime': 0.388, 'eval_valid_samples_per_second': 420.119, 'eval_valid_steps_per_second': 18.042, 'epoch': 5.30035335689046}
{'loss': 0.0781, 'grad_norm': 0.0504735477870686, 'learning_rate': 7.236367148343645e-05, 'epoch': 5.303804107773852}
{'loss': 0.0782, 'grad_norm': 0.08767492566204564, 'learning_rate': 7.233128593283586e-05, 'epoch': 5.3072548586572434}
{'eval_valid_loss': 0.07011467218399048, 'eval_valid_runtime': 0.388, 'eval_valid_samples_per_second': 420.116, 'eval_valid_steps_per_second': 18.042, 'epoch': 5.3072548586572434}
{'loss': 0.0789, 'grad_norm': 0.06452960918941494, 'learning_rate': 7.229888867489666e-05, 'epoch': 5.310705609540636}
{'loss': 0.0787, 'grad_norm': 0.057174921417043056, 'learning_rate': 7.226647972660329e-05, 'epoch': 5.314156360424028}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'eval_valid_loss': 0.07031666487455368, 'eval_valid_runtime': 0.3866, 'eval_valid_samples_per_second': 421.634, 'eval_valid_steps_per_second': 18.107, 'epoch': 5.314156360424028}
{'loss': 0.0797, 'grad_norm': 0.07110901941613935, 'learning_rate': 7.22340591049464e-05, 'epoch': 5.317607111307421}
{'loss': 0.0785, 'grad_norm': 0.09646555156143002, 'learning_rate': 7.220162682692275e-05, 'epoch': 5.321057862190813}
{'eval_valid_loss': 0.07032042741775513, 'eval_valid_runtime': 0.3864, 'eval_valid_samples_per_second': 421.809, 'eval_valid_steps_per_second': 18.114, 'epoch': 5.321057862190813}
{'loss': 0.0794, 'grad_norm': 0.10418595908213694, 'learning_rate': 7.216918290953518e-05, 'epoch': 5.3245086130742045}
{'loss': 0.0795, 'grad_norm': 0.08304487756875113, 'learning_rate': 7.213672736979268e-05, 'epoch': 5.327959363957597}
{'eval_valid_loss': 0.07034458220005035, 'eval_valid_runtime': 0.3883, 'eval_valid_samples_per_second': 419.794, 'eval_valid_steps_per_second': 18.028, 'epoch': 5.327959363957597}
{'loss': 0.0798, 'grad_norm': 0.05793026489559095, 'learning_rate': 7.210426022471027e-05, 'epoch': 5.331410114840989}
{'loss': 0.0801, 'grad_norm': 0.04842963411535509, 'learning_rate': 7.207178149130909e-05, 'epoch': 5.334860865724382}
{'eval_valid_loss': 0.07028791308403015, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.492, 'eval_valid_steps_per_second': 18.058, 'epoch': 5.334860865724382}
{'loss': 0.0773, 'grad_norm': 0.0800697669658975, 'learning_rate': 7.203929118661636e-05, 'epoch': 5.338311616607774}
{'loss': 0.079, 'grad_norm': 0.05476884995948439, 'learning_rate': 7.200678932766534e-05, 'epoch': 5.341762367491166}
{'eval_valid_loss': 0.07016301155090332, 'eval_valid_runtime': 0.3862, 'eval_valid_samples_per_second': 422.059, 'eval_valid_steps_per_second': 18.125, 'epoch': 5.341762367491166}
{'loss': 0.0791, 'grad_norm': 0.0767535086206545, 'learning_rate': 7.197427593149538e-05, 'epoch': 5.345213118374558}
{'loss': 0.078, 'grad_norm': 0.07241039790566917, 'learning_rate': 7.194175101515188e-05, 'epoch': 5.34866386925795}
{'eval_valid_loss': 0.07021033763885498, 'eval_valid_runtime': 0.3873, 'eval_valid_samples_per_second': 420.823, 'eval_valid_steps_per_second': 18.072, 'epoch': 5.34866386925795}
{'loss': 0.0784, 'grad_norm': 0.10565836350325696, 'learning_rate': 7.190921459568625e-05, 'epoch': 5.352114620141343}
{'loss': 0.0794, 'grad_norm': 0.09167544585186616, 'learning_rate': 7.187666669015594e-05, 'epoch': 5.355565371024735}
{'eval_valid_loss': 0.0705481544137001, 'eval_valid_runtime': 0.3867, 'eval_valid_samples_per_second': 421.478, 'eval_valid_steps_per_second': 18.1, 'epoch': 5.355565371024735}
{'loss': 0.0788, 'grad_norm': 0.05246463857816972, 'learning_rate': 7.18441073156244e-05, 'epoch': 5.359016121908128}
{'loss': 0.0781, 'grad_norm': 0.08906260499103637, 'learning_rate': 7.181153648916117e-05, 'epoch': 5.3624668727915195}
{'eval_valid_loss': 0.07043616473674774, 'eval_valid_runtime': 0.3859, 'eval_valid_samples_per_second': 422.372, 'eval_valid_steps_per_second': 18.139, 'epoch': 5.3624668727915195}
{'loss': 0.0797, 'grad_norm': 0.07810671152691516, 'learning_rate': 7.17789542278417e-05, 'epoch': 5.365917623674911}
{'loss': 0.0779, 'grad_norm': 0.061678779559195866, 'learning_rate': 7.17463605487475e-05, 'epoch': 5.369368374558304}
{'eval_valid_loss': 0.07012654840946198, 'eval_valid_runtime': 0.3881, 'eval_valid_samples_per_second': 420.036, 'eval_valid_steps_per_second': 18.038, 'epoch': 5.369368374558304}
{'loss': 0.0791, 'grad_norm': 0.07119239359736447, 'learning_rate': 7.171375546896605e-05, 'epoch': 5.372819125441696}
{'loss': 0.0786, 'grad_norm': 0.07591614335750675, 'learning_rate': 7.168113900559076e-05, 'epoch': 5.376269876325089}
{'eval_valid_loss': 0.07023729383945465, 'eval_valid_runtime': 0.3876, 'eval_valid_samples_per_second': 420.535, 'eval_valid_steps_per_second': 18.06, 'epoch': 5.376269876325089}
{'loss': 0.0783, 'grad_norm': 0.07382753910609285, 'learning_rate': 7.164851117572111e-05, 'epoch': 5.3797206272084805}
{'loss': 0.0789, 'grad_norm': 0.0660404483611491, 'learning_rate': 7.161587199646241e-05, 'epoch': 5.383171378091872}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/nn/modules/module.py:1898: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
{'eval_valid_loss': 0.07032597064971924, 'eval_valid_runtime': 0.3874, 'eval_valid_samples_per_second': 420.754, 'eval_valid_steps_per_second': 18.069, 'epoch': 5.383171378091872}
/n/holylabs/LABS/dam_lab/Lab/sqin/envs/reason/lib/python3.11/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
{'loss': 0.0783, 'grad_norm': 0.061225921327815215, 'learning_rate': 7.158322148492602e-05, 'epoch': 5.386622128975265}
{'loss': 0.0786, 'grad_norm': 0.05565356243252497, 'learning_rate': 7.155055965822922e-05, 'epoch': 5.390072879858657}
{'eval_valid_loss': 0.07042092084884644, 'eval_valid_runtime': 0.3884, 'eval_valid_samples_per_second': 419.686, 'eval_valid_steps_per_second': 18.023, 'epoch': 5.390072879858657}
{'loss': 0.0783, 'grad_norm': 0.07487449389355913, 'learning_rate': 7.151788653349519e-05, 'epoch': 5.39352363074205}
{'loss': 0.0788, 'grad_norm': 0.06991879335634822, 'learning_rate': 7.148520212785304e-05, 'epoch': 5.396974381625442}
{'eval_valid_loss': 0.06991460174322128, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.553, 'eval_valid_steps_per_second': 18.018, 'epoch': 5.396974381625442}
{'loss': 0.0795, 'grad_norm': 0.0876964949240598, 'learning_rate': 7.145250645843783e-05, 'epoch': 5.400425132508834}
{'loss': 0.079, 'grad_norm': 0.06860712701991664, 'learning_rate': 7.14197995423905e-05, 'epoch': 5.403875883392226}
{'eval_valid_loss': 0.06972840428352356, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.523, 'eval_valid_steps_per_second': 18.016, 'epoch': 5.403875883392226}
{'loss': 0.0789, 'grad_norm': 0.05584503935837788, 'learning_rate': 7.138708139685788e-05, 'epoch': 5.407326634275618}
{'loss': 0.0793, 'grad_norm': 0.06758354935515387, 'learning_rate': 7.135435203899269e-05, 'epoch': 5.410777385159011}
{'eval_valid_loss': 0.07013823837041855, 'eval_valid_runtime': 0.4054, 'eval_valid_samples_per_second': 402.12, 'eval_valid_steps_per_second': 17.269, 'epoch': 5.410777385159011}
{'loss': 0.0803, 'grad_norm': 0.07845307249718182, 'learning_rate': 7.132161148595355e-05, 'epoch': 5.414228136042403}
{'loss': 0.0778, 'grad_norm': 0.05673718138617078, 'learning_rate': 7.128885975490492e-05, 'epoch': 5.4176788869257955}
{'eval_valid_loss': 0.0697321966290474, 'eval_valid_runtime': 0.3887, 'eval_valid_samples_per_second': 419.376, 'eval_valid_steps_per_second': 18.01, 'epoch': 5.4176788869257955}
{'loss': 0.079, 'grad_norm': 0.09504360056874508, 'learning_rate': 7.125609686301714e-05, 'epoch': 5.421129637809187}
{'loss': 0.0777, 'grad_norm': 0.06845515116316864, 'learning_rate': 7.122332282746638e-05, 'epoch': 5.424580388692579}
{'eval_valid_loss': 0.06972804665565491, 'eval_valid_runtime': 0.3885, 'eval_valid_samples_per_second': 419.604, 'eval_valid_steps_per_second': 18.02, 'epoch': 5.424580388692579}
{'loss': 0.0785, 'grad_norm': 0.055172236258662494, 'learning_rate': 7.119053766543469e-05, 'epoch': 5.428031139575972}
{'loss': 0.0787, 'grad_norm': 0.05345283695116225, 'learning_rate': 7.11577413941099e-05, 'epoch': 5.431481890459364}
{'eval_valid_loss': 0.06999245285987854, 'eval_valid_runtime': 0.3868, 'eval_valid_samples_per_second': 421.391, 'eval_valid_steps_per_second': 18.097, 'epoch': 5.431481890459364}
{'loss': 0.0789, 'grad_norm': 0.08376167831023595, 'learning_rate': 7.112493403068573e-05, 'epoch': 5.4349326413427566}
{'loss': 0.0785, 'grad_norm': 0.10364028467722361, 'learning_rate': 7.109211559236165e-05, 'epoch': 5.438383392226148}
{'eval_valid_loss': 0.06989168375730515, 'eval_valid_runtime': 0.3857, 'eval_valid_samples_per_second': 422.645, 'eval_valid_steps_per_second': 18.15, 'epoch': 5.438383392226148}
{'loss': 0.0791, 'grad_norm': 0.06554341931936934, 'learning_rate': 7.105928609634296e-05, 'epoch': 5.44183414310954}
{'loss': 0.0779, 'grad_norm': 0.07309228438222778, 'learning_rate': 7.102644555984077e-05, 'epoch': 5.445284893992933}
{'eval_valid_loss': 0.0699005126953125, 'eval_valid_runtime': 0.3914, 'eval_valid_samples_per_second': 416.43, 'eval_valid_steps_per_second': 17.883, 'epoch': 5.445284893992933}
